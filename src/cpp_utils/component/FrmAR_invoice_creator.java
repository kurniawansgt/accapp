/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FrmAP_BatchGLPosting.java
 *
 * Created on Jun 27, 2011, 8:48:18 AM
 */

package cpp_utils.component;

import accapp.objectclasses.ar.Ar_customer;
import accapp.objectclasses.ar.Ar_customers;
//import accapp.objectclasses.ar.adjustment.Ar_adjbatchlist;
import accapp.objectclasses.ar.Ar_invbatchlist;
import accapp.objectclasses.ar.Ar_invbatchlists;
import accapp.objectclasses.ar.Ar_invd;
import accapp.objectclasses.ar.Ar_invds;
import accapp.objectclasses.ar.Ar_invh;
import accapp.objectclasses.ar.Ar_invhs;
import accapp.objectclasses.gl.Gl_account;
import common.classinterface.NavigatorFormInt;
import common.component.FrmBrowse;
import common.component.FrmMainFrame;
import common.tablemodels.GlobalModel;
import common.utils.CodeException;
import common.utils.GlobalUtils;
import common.utils.selectallJTable;
import cpp_utils.objectclasses.Ut_external_data;
import cpp_utils.objectclasses.cpp_invoice;
import cpp_utils.objectclasses.cpp_invoices;
import java.awt.event.KeyEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableModel;
import org.kazao.calendar.KazaoCalendarDateTimeException;

/**
 *
 * @author wgata
 */
public class FrmAR_invoice_creator extends javax.swing.JInternalFrame implements NavigatorFormInt {
    FrmMainFrame mf ;
    private static int istatus = 4;
    private static int iformtype = 1;
    public static String CLASSNAME="FrmAP_BatchGLPosting";
    private DefaultTableModel tmodeldetail;
    private cpp_invoices ci=new cpp_invoices(null);
    private Ut_external_data ud;
    private Ar_invbatchlist obj;
    
    /** Creates new form FrmAP_BatchGLPosting */
    public FrmAR_invoice_creator (FrmMainFrame mf) {
        this.mf = mf;
        initComponents();

        tmodeldetail=(DefaultTableModel) jtblDetail.getModel();
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jHeader = new javax.swing.JLabel();
        HorizontalLine = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jlblaccsetcode = new javax.swing.JLabel();
        jlblaccsetcode1 = new javax.swing.JLabel();
        kbatchdate_fr = new org.kazao.calendar.KazaoCalendarDate();
        jlblaccsetcode2 = new javax.swing.JLabel();
        kbatchdate_to = new org.kazao.calendar.KazaoCalendarDate();
        jlblcustmrcode = new javax.swing.JLabel();
        jtxtcustmrcode = new javax.swing.JTextField();
        jbtnBrowse = new javax.swing.JButton();
        jtxtcustmrname = new javax.swing.JTextField();
        jchkcustomer_semua = new javax.swing.JCheckBox();
        jlblcustmrcode1 = new javax.swing.JLabel();
        jlblcustmrcode2 = new javax.swing.JLabel();
        jtxtcustmrcode1 = new javax.swing.JTextField();
        jbtnBrowse1 = new javax.swing.JButton();
        jtxtcustmrname1 = new javax.swing.JTextField();
        jlblcustmrcode3 = new javax.swing.JLabel();
        jchkjenis_invoice_ffe = new javax.swing.JCheckBox();
        jchkjenis_invoice_produk = new javax.swing.JCheckBox();
        jchkjenis_invoice_franchise = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblDetail = new selectallJTable(tmodeldetail);
        jButton1 = new javax.swing.JButton();
        jlblcustmrcode4 = new javax.swing.JLabel();
        jlblcustmrcode5 = new javax.swing.JLabel();
        jtxtinventrcnt = new javax.swing.JTextField();
        jtxttotinvamt = new javax.swing.JTextField();
        jlblcustmrcode6 = new javax.swing.JLabel();
        jtxtbatchno = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtxtarea_message = new javax.swing.JTextArea();
        jbtnBrowse2 = new javax.swing.JButton();
        jlblbatchno = new javax.swing.JLabel();
        jtxtbatchno1 = new javax.swing.JTextField();
        jlblbatchdate = new javax.swing.JLabel();
        kbatchdate = new org.kazao.calendar.KazaoCalendarDate();
        jtxtbatchdesc = new javax.swing.JTextField();
        jlblbatchdesc = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();

        setTitle("A/R Invoice Generator");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        getContentPane().setLayout(null);

        jHeader.setBackground(new java.awt.Color(102, 102, 102));
        jHeader.setFont(new java.awt.Font("Dialog", 1, 10));
        jHeader.setForeground(new java.awt.Color(255, 255, 255));
        jHeader.setText(" : : A/R Invoice Generator");
        jHeader.setAlignmentY(0.0F);
        jHeader.setOpaque(true);
        getContentPane().add(jHeader);
        jHeader.setBounds(30, 30, 180, 20);

        HorizontalLine.setForeground(new java.awt.Color(102, 102, 102));
        HorizontalLine.setAlignmentX(0.0F);
        HorizontalLine.setAlignmentY(0.0F);
        getContentPane().add(HorizontalLine);
        HorizontalLine.setBounds(160, 50, 650, 6);

        jSeparator3.setForeground(new java.awt.Color(102, 102, 102));
        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator3.setAlignmentX(0.0F);
        jSeparator3.setAlignmentY(0.0F);
        getContentPane().add(jSeparator3);
        jSeparator3.setBounds(30, 50, 6, 400);

        jlblaccsetcode.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblaccsetcode.setText("Daftar Tarikan Invoice dari POS");
        getContentPane().add(jlblaccsetcode);
        jlblaccsetcode.setBounds(60, 70, 200, 13);

        jlblaccsetcode1.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblaccsetcode1.setText("Tanggal");
        getContentPane().add(jlblaccsetcode1);
        jlblaccsetcode1.setBounds(70, 100, 140, 13);

        kbatchdate_fr.setFont(new java.awt.Font("Dialog", 0, 10));
        kbatchdate_fr.setFontDate(new java.awt.Font("Dialog", 0, 10));
        getContentPane().add(kbatchdate_fr);
        kbatchdate_fr.setBounds(240, 100, 100, 20);

        jlblaccsetcode2.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblaccsetcode2.setText("Sampai Tanggal");
        getContentPane().add(jlblaccsetcode2);
        jlblaccsetcode2.setBounds(360, 100, 140, 13);

        kbatchdate_to.setFont(new java.awt.Font("Dialog", 0, 10));
        kbatchdate_to.setFontDate(new java.awt.Font("Dialog", 0, 10));
        getContentPane().add(kbatchdate_to);
        kbatchdate_to.setBounds(530, 100, 100, 20);

        jlblcustmrcode.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblcustmrcode.setText("Dari Customer");
        getContentPane().add(jlblcustmrcode);
        jlblcustmrcode.setBounds(120, 170, 110, 13);

        jtxtcustmrcode.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtcustmrcode.setText("custmrcode");
        jtxtcustmrcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtcustmrcodeKeyPressed(evt);
            }
        });
        getContentPane().add(jtxtcustmrcode);
        jtxtcustmrcode.setBounds(240, 170, 80, 23);

        jbtnBrowse.setFont(new java.awt.Font("Dialog", 0, 10));
        jbtnBrowse.setText("...");
        jbtnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowseActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnBrowse);
        jbtnBrowse.setBounds(320, 170, 30, 17);

        jtxtcustmrname.setEditable(false);
        jtxtcustmrname.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtcustmrname.setText("custmrname");
        jtxtcustmrname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtcustmrnameKeyPressed(evt);
            }
        });
        getContentPane().add(jtxtcustmrname);
        jtxtcustmrname.setBounds(360, 170, 320, 23);

        jchkcustomer_semua.setFont(new java.awt.Font("Dialog", 1, 10));
        jchkcustomer_semua.setSelected(true);
        jchkcustomer_semua.setText("Semua");
        jchkcustomer_semua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jchkcustomer_semuaActionPerformed(evt);
            }
        });
        jchkcustomer_semua.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jchkcustomer_semuaPropertyChange(evt);
            }
        });
        jchkcustomer_semua.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jchkcustomer_semuaKeyPressed(evt);
            }
        });
        getContentPane().add(jchkcustomer_semua);
        jchkcustomer_semua.setBounds(100, 140, 70, 24);

        jlblcustmrcode1.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblcustmrcode1.setText("Jenis Invoice");
        getContentPane().add(jlblcustmrcode1);
        jlblcustmrcode1.setBounds(70, 220, 140, 13);

        jlblcustmrcode2.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblcustmrcode2.setText("Sampai Customer");
        getContentPane().add(jlblcustmrcode2);
        jlblcustmrcode2.setBounds(120, 190, 110, 13);

        jtxtcustmrcode1.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtcustmrcode1.setText("custmrcode");
        jtxtcustmrcode1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtcustmrcode1KeyPressed(evt);
            }
        });
        getContentPane().add(jtxtcustmrcode1);
        jtxtcustmrcode1.setBounds(240, 190, 80, 23);

        jbtnBrowse1.setFont(new java.awt.Font("Dialog", 0, 10));
        jbtnBrowse1.setText("...");
        jbtnBrowse1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowse1ActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnBrowse1);
        jbtnBrowse1.setBounds(320, 190, 30, 17);

        jtxtcustmrname1.setEditable(false);
        jtxtcustmrname1.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtcustmrname1.setText("custmrname");
        jtxtcustmrname1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtcustmrname1KeyPressed(evt);
            }
        });
        getContentPane().add(jtxtcustmrname1);
        jtxtcustmrname1.setBounds(360, 190, 320, 23);

        jlblcustmrcode3.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblcustmrcode3.setText("Customer");
        getContentPane().add(jlblcustmrcode3);
        jlblcustmrcode3.setBounds(70, 120, 140, 13);

        jchkjenis_invoice_ffe.setFont(new java.awt.Font("Dialog", 1, 10));
        jchkjenis_invoice_ffe.setText("FFE");
        jchkjenis_invoice_ffe.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jchkjenis_invoice_ffeKeyPressed(evt);
            }
        });
        getContentPane().add(jchkjenis_invoice_ffe);
        jchkjenis_invoice_ffe.setBounds(380, 220, 90, 24);

        jchkjenis_invoice_produk.setFont(new java.awt.Font("Dialog", 1, 10));
        jchkjenis_invoice_produk.setText("Produk");
        jchkjenis_invoice_produk.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jchkjenis_invoice_produkKeyPressed(evt);
            }
        });
        getContentPane().add(jchkjenis_invoice_produk);
        jchkjenis_invoice_produk.setBounds(170, 220, 70, 24);

        jchkjenis_invoice_franchise.setFont(new java.awt.Font("Dialog", 1, 10));
        jchkjenis_invoice_franchise.setSelected(true);
        jchkjenis_invoice_franchise.setText("Franchise");
        jchkjenis_invoice_franchise.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jchkjenis_invoice_franchiseKeyPressed(evt);
            }
        });
        getContentPane().add(jchkjenis_invoice_franchise);
        jchkjenis_invoice_franchise.setBounds(270, 220, 90, 24);

        jtblDetail.setFont(new java.awt.Font("Dialog", 0, 10));
        jtblDetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Pilih", "Date", "Inv. No.", "Customer", "Sales", "PPN", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtblDetail.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jtblDetail.setSurrendersFocusOnKeystroke(true);
        jtblDetail.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jtblDetailPropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(jtblDetail);
        jtblDetail.getColumnModel().getColumn(2).setMinWidth(200);
        jtblDetail.getColumnModel().getColumn(3).setMinWidth(300);
        jtblDetail.getColumnModel().getColumn(3).setPreferredWidth(300);
        jtblDetail.getColumnModel().getColumn(4).setMinWidth(100);
        jtblDetail.getColumnModel().getColumn(6).setMinWidth(100);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(70, 250, 950, 220);

        jButton1.setFont(new java.awt.Font("Ubuntu", 1, 10));
        jButton1.setText("Filter");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(560, 220, 120, 20);

        jlblcustmrcode4.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblcustmrcode4.setText("Total Invoice");
        getContentPane().add(jlblcustmrcode4);
        jlblcustmrcode4.setBounds(710, 170, 110, 13);

        jlblcustmrcode5.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblcustmrcode5.setText("Jumlah Invoice");
        getContentPane().add(jlblcustmrcode5);
        jlblcustmrcode5.setBounds(710, 190, 110, 13);

        jtxtinventrcnt.setEditable(false);
        jtxtinventrcnt.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtinventrcnt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtxtinventrcnt.setText("0");
        jtxtinventrcnt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtinventrcntKeyPressed(evt);
            }
        });
        getContentPane().add(jtxtinventrcnt);
        jtxtinventrcnt.setBounds(840, 190, 170, 23);

        jtxttotinvamt.setEditable(false);
        jtxttotinvamt.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jtxttotinvamt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtxttotinvamt.setText("0");
        jtxttotinvamt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxttotinvamtKeyPressed(evt);
            }
        });
        getContentPane().add(jtxttotinvamt);
        jtxttotinvamt.setBounds(840, 170, 170, 23);

        jlblcustmrcode6.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblcustmrcode6.setText("Batch Number");
        getContentPane().add(jlblcustmrcode6);
        jlblcustmrcode6.setBounds(710, 210, 110, 13);

        jtxtbatchno.setEditable(false);
        jtxtbatchno.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtbatchno.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtxtbatchno.setText("0");
        jtxtbatchno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtbatchnoKeyPressed(evt);
            }
        });
        getContentPane().add(jtxtbatchno);
        jtxtbatchno.setBounds(840, 210, 170, 23);

        jtxtarea_message.setColumns(20);
        jtxtarea_message.setRows(5);
        jScrollPane2.setViewportView(jtxtarea_message);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(70, 480, 950, 92);

        jbtnBrowse2.setText("...");
        jbtnBrowse2.setEnabled(false);
        jbtnBrowse2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowse2ActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnBrowse2);
        jbtnBrowse2.setBounds(810, 100, 30, 17);

        jlblbatchno.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblbatchno.setText("Batch Number");
        getContentPane().add(jlblbatchno);
        jlblbatchno.setBounds(710, 100, 140, 13);

        jtxtbatchno1.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        getContentPane().add(jtxtbatchno1);
        jtxtbatchno1.setBounds(840, 100, 80, 23);

        jlblbatchdate.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblbatchdate.setText("Batch Date");
        getContentPane().add(jlblbatchdate);
        jlblbatchdate.setBounds(710, 120, 140, 13);

        kbatchdate.setEditable(false);
        kbatchdate.setFont(new java.awt.Font("Dialog", 0, 10));
        kbatchdate.setFontDate(new java.awt.Font("Dialog", 0, 10));
        getContentPane().add(kbatchdate);
        kbatchdate.setBounds(840, 120, 100, 20);

        jtxtbatchdesc.setEditable(false);
        jtxtbatchdesc.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jtxtbatchdesc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtbatchdescKeyPressed(evt);
            }
        });
        getContentPane().add(jtxtbatchdesc);
        jtxtbatchdesc.setBounds(840, 140, 170, 23);

        jlblbatchdesc.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblbatchdesc.setText("Description");
        getContentPane().add(jlblbatchdesc);
        jlblbatchdesc.setBounds(710, 140, 130, 15);

        jCheckBox1.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jCheckBox1.setText("Gabungkan");
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jCheckBox1);
        jCheckBox1.setBounds(920, 100, 90, 24);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated

        setToolBar(iformtype,istatus);
        //mf.setIcon(CLASSNAME);



    }//GEN-LAST:event_formInternalFrameActivated

    private void jtxtcustmrcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtcustmrcodeKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            jtxtcustmrname.requestFocus();
        }
}//GEN-LAST:event_jtxtcustmrcodeKeyPressed

    private void jbtnBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBrowseActionPerformed
        try {
            Ar_customers brs = new Ar_customers();
            FrmBrowse bd = new FrmBrowse(brs);
            bd.setFirstValue(jtxtcustmrcode);
            bd.setSecondValue(jtxtcustmrname);
            bd.setModal(true);
            bd.setVisible(true);

        } catch (CodeException ex) {
            ex.printStackTrace();
        }
}//GEN-LAST:event_jbtnBrowseActionPerformed

    private void jtxtcustmrnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtcustmrnameKeyPressed

        if(evt.getKeyCode() == KeyEvent.VK_ENTER){

        }
}//GEN-LAST:event_jtxtcustmrnameKeyPressed

    private void jchkcustomer_semuaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jchkcustomer_semuaKeyPressed

        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
        }
}//GEN-LAST:event_jchkcustomer_semuaKeyPressed

    private void jtxtcustmrcode1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtcustmrcode1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtcustmrcode1KeyPressed

    private void jbtnBrowse1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBrowse1ActionPerformed
        // TODO add your handling code here:
        try {
            Ar_customers brs = new Ar_customers();
            FrmBrowse bd = new FrmBrowse(brs);
            bd.setFirstValue(jtxtcustmrcode1);
            bd.setSecondValue(jtxtcustmrname1);
            bd.setModal(true);
            bd.setVisible(true);

        } catch (CodeException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jbtnBrowse1ActionPerformed

    private void jtxtcustmrname1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtcustmrname1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtcustmrname1KeyPressed

    private void jchkjenis_invoice_ffeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jchkjenis_invoice_ffeKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jchkjenis_invoice_ffeKeyPressed

    private void jchkjenis_invoice_produkKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jchkjenis_invoice_produkKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jchkjenis_invoice_produkKeyPressed

    private void jchkjenis_invoice_franchiseKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jchkjenis_invoice_franchiseKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jchkjenis_invoice_franchiseKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            // TODO add your handling code here:
            showdata();
        } catch (CodeException ex) {
            Logger.getLogger(FrmAR_invoice_creator.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jchkcustomer_semuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jchkcustomer_semuaActionPerformed
        // TODO add your handling code here:
        if (jchkcustomer_semua.isSelected()){
            jtxtcustmrcode.setText("");
            jtxtcustmrname.setText("");
            jtxtcustmrcode1.setText("");
            jtxtcustmrname1.setText("");
        }
    }//GEN-LAST:event_jchkcustomer_semuaActionPerformed

    private void jtxtinventrcntKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtinventrcntKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtinventrcntKeyPressed

    private void jtxttotinvamtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxttotinvamtKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxttotinvamtKeyPressed

    private void jtblDetailPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jtblDetailPropertyChange
        // TODO add your handling code here:
        int irow=jtblDetail.getSelectedRow();
        int icol=jtblDetail.getSelectedColumn();
        cpp_invoice a;
        if (irow>-1){
            if (icol==0){
                a=ci.get(irow);
                if (a.isdisable()){
                    tmodeldetail.setValueAt(false, irow, 0);
                }
            }
            calculatetotal();
        }
    }//GEN-LAST:event_jtblDetailPropertyChange

    private void jtxtbatchnoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtbatchnoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtbatchnoKeyPressed

    private void jchkcustomer_semuaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jchkcustomer_semuaPropertyChange
        // TODO add your handling code here:
        if (jchkcustomer_semua.isSelected()){
            jtxtcustmrcode.setText("");
            jtxtcustmrname.setText("");
            jtxtcustmrcode1.setText("");
            jtxtcustmrname1.setText("");
        }
    }//GEN-LAST:event_jchkcustomer_semuaPropertyChange

    private void jbtnBrowse2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBrowse2ActionPerformed
        // TODO add your handling code here:
        try {
	      Ar_invbatchlists brs = new Ar_invbatchlists();
	      FrmBrowse bd = new FrmBrowse(brs);
	      bd.setFirstValue(jtxtbatchno1);
	      bd.setModal(true);
	      bd.setVisible(true);

              obj= new Ar_invbatchlist(jtxtbatchno1.getText());
              if (obj.getID()>0){
                try {
                    kbatchdate.setDate(GlobalUtils.formatDate(obj.toString(Ar_invbatchlist.PROPERTY_BATCHDATE), "MM/dd/yyyy"));
                } catch (KazaoCalendarDateTimeException ex) {
                    Logger.getLogger(FrmAR_invoice_creator.class.getName()).log(Level.SEVERE, null, ex);
                }
                jtxtbatchdesc.setText(obj.getbatchdesc());
                jtxtbatchno.setText(obj.getbatchno()+"");
              }

	  } catch (CodeException ex) {
	      ex.printStackTrace();
	  }
    }//GEN-LAST:event_jbtnBrowse2ActionPerformed

    private void jtxtbatchdescKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtbatchdescKeyPressed

    }//GEN-LAST:event_jtxtbatchdescKeyPressed

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        if (jCheckBox1.isSelected()){
            jbtnBrowse2.setEnabled(true);
        } else {
            jbtnBrowse2.setEnabled(false);
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSeparator HorizontalLine;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jHeader;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JButton jbtnBrowse;
    private javax.swing.JButton jbtnBrowse1;
    private javax.swing.JButton jbtnBrowse2;
    private javax.swing.JCheckBox jchkcustomer_semua;
    private javax.swing.JCheckBox jchkjenis_invoice_ffe;
    private javax.swing.JCheckBox jchkjenis_invoice_franchise;
    private javax.swing.JCheckBox jchkjenis_invoice_produk;
    private javax.swing.JLabel jlblaccsetcode;
    private javax.swing.JLabel jlblaccsetcode1;
    private javax.swing.JLabel jlblaccsetcode2;
    private javax.swing.JLabel jlblbatchdate;
    private javax.swing.JLabel jlblbatchdesc;
    private javax.swing.JLabel jlblbatchno;
    private javax.swing.JLabel jlblcustmrcode;
    private javax.swing.JLabel jlblcustmrcode1;
    private javax.swing.JLabel jlblcustmrcode2;
    private javax.swing.JLabel jlblcustmrcode3;
    private javax.swing.JLabel jlblcustmrcode4;
    private javax.swing.JLabel jlblcustmrcode5;
    private javax.swing.JLabel jlblcustmrcode6;
    private javax.swing.JTable jtblDetail;
    private javax.swing.JTextArea jtxtarea_message;
    private javax.swing.JTextField jtxtbatchdesc;
    private javax.swing.JTextField jtxtbatchno;
    private javax.swing.JTextField jtxtbatchno1;
    private javax.swing.JTextField jtxtcustmrcode;
    private javax.swing.JTextField jtxtcustmrcode1;
    private javax.swing.JTextField jtxtcustmrname;
    private javax.swing.JTextField jtxtcustmrname1;
    private javax.swing.JTextField jtxtinventrcnt;
    private javax.swing.JTextField jtxttotinvamt;
    private org.kazao.calendar.KazaoCalendarDate kbatchdate;
    private org.kazao.calendar.KazaoCalendarDate kbatchdate_fr;
    private org.kazao.calendar.KazaoCalendarDate kbatchdate_to;
    // End of variables declaration//GEN-END:variables

    public void delete() throws CodeException {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void moveFirst() throws CodeException {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void movePrevious() throws CodeException {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void moveNext() throws CodeException {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void moveLast() throws CodeException {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void newData() throws CodeException {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void saveData() throws CodeException {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void printData() throws CodeException {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void showData() throws CodeException {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void setToolBar(int iFormType, int istatus) {
        mf.setToolBar(iformtype,istatus);
    }

    public void setData() throws CodeException {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void undo() throws CodeException {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void execute() throws CodeException {
        int ires=JOptionPane.showConfirmDialog(this, "Process auto ar invoice?", "create ar invoice", JOptionPane.OK_CANCEL_OPTION);
        if (ires==JOptionPane.OK_OPTION){
            if (processdata()){
                if (closeaccsts("Y")){
                    JOptionPane.showMessageDialog(this, "process to invoice selesai");
                }
            }
        }
    }

    public void searchData() throws CodeException {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void importCsv() throws CodeException {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void exportCsv() throws CodeException {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void importText() throws CodeException {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void exportText() throws CodeException {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    private void showdata() throws CodeException {
        ud=new Ut_external_data();
        ud.moveFirst();
        cpp_invoice o;
        String type_produk="0";
        String type_franchise="";
        String type_ffe="";
        GlobalModel.clearRow(tmodeldetail);
        if (!ud.getexternal_svrip().equalsIgnoreCase("")){
            ci=new cpp_invoices(ud);
            String fromdate=GlobalUtils.formatDate(kbatchdate_fr.getDate(), "yyyy-MM-dd");
            String todate=GlobalUtils.formatDate(kbatchdate_to.getDate(), "yyyy-MM-dd");
            String type="1";
            String frcustmr=jtxtcustmrcode.getText();
            String tocustmr=jtxtcustmrcode1.getText();
            if (jchkjenis_invoice_produk.isSelected()){
                type_produk="1";
            }
            if (jchkjenis_invoice_franchise.isSelected()){
                type_franchise=",10";
            }
            if (jchkjenis_invoice_ffe.isSelected()){
                type_ffe=",11";
            }
            type=type_produk+type_franchise+type_ffe;
            if (ci.initdata(fromdate,todate,type,frcustmr,tocustmr)){
                for (int i=0;i<ci.size();i++){
                    o=ci.get(i);
                    tmodeldetail.addRow(new Object[tmodeldetail.getColumnCount()]);
                    tmodeldetail.setValueAt(false, i,0);
                    tmodeldetail.setValueAt(o.getInvoice_date(), i,1);
                    tmodeldetail.setValueAt(o.getInvoice_number(), i,2);
                    tmodeldetail.setValueAt(o.getCust_name(), i,3);
                    tmodeldetail.setValueAt(o.getBfrppn(), i,4);
                    tmodeldetail.setValueAt(o.getPpnval(), i,5);
                    tmodeldetail.setValueAt(o.getAftppn(), i,6);

                    Ar_customer arc=new Ar_customer(o.getCust_code_accpac());
                    if (arc.getID()==0){
                        o.setdisable(true);
                    }
                    ci.set(i, o);
                }
            }
        }
    }

    private Boolean processdata() {
        cpp_invoice o;
        String smessage = null;
        String trans_number = "";
        boolean boktosave=false;
        try {
            if (!jCheckBox1.isSelected()){
                obj = new Ar_invbatchlist();
                obj.fromString(Ar_invbatchlist.PROPERTY_ID, "0") ;
                obj.fromString(Ar_invbatchlist.PROPERTY_BATCHNO, "0") ;
                obj.fromString(Ar_invbatchlist.PROPERTY_BATCHDATE, GlobalUtils.formatDate(GlobalUtils.sessiondate,"yyyy-MM-dd")) ;
                obj.fromString(Ar_invbatchlist.PROPERTY_BATCHDESC, "Dari POS") ;
                obj.setreadytpost("0");
                obj.setbatchtype("1");
            } else {
                obj=new Ar_invbatchlist(jtxtbatchno.getText());
                if (obj.getID()==obj.NULLID){
                    JOptionPane.showMessageDialog(this, "Process batal, batch tidak ditemukan");
                    return false;
                }
            }
            
            Ar_invhs arinvhs = new Ar_invhs(Ar_invh.PROPERTY_BATCHNO, obj.getbatchno()+"");
            arinvhs.dbRead();

            for (int i=0;i<ci.size();i++){
                o=ci.get(i);
                trans_number=o.getInvoice_number();
                if (Boolean.parseBoolean(GlobalUtils.churuf(tmodeldetail.getValueAt(i, 0)))){
                    Ar_customer ac=new Ar_customer(o.getCust_code_accpac());
                    Gl_account acc=new Gl_account(o.getacccount_code());
                    if (ac.getID()>0){
                        if (acc.getID()>0){
                            Ar_invh arinvhh = new Ar_invh();
                            Ar_invds arinvhds = new Ar_invds();

                            arinvhh.fromString(Ar_invh.PROPERTY_CUSTMRCODE,ac.getcustmrcode());
                            arinvhh.fromString(Ar_invh.PROPERTY_ADDRCODE,"");

                            int doctype=0;
                            doctype=4;

                            arinvhh.fromString(Ar_invh.PROPERTY_DOCTYPE,GlobalUtils.churuf(doctype));
                            arinvhh.fromString(Ar_invh.PROPERTY_DOCNUM,o.getInvoice_number());
                            arinvhh.fromString(Ar_invh.PROPERTY_CUSTMRPONO,o.getInvoice_number());
                            arinvhh.fromString(Ar_invh.PROPERTY_ORDERNO,o.getInvoice_number());
                            arinvhh.fromString(Ar_invh.PROPERTY_DSCRIPTION,o.getInvoice_number()+"-"+ac.getcustmrname());

                            arinvhh.fromString(Ar_invh.PROPERTY_DOCDATE, GlobalUtils.formatDate(o.getInvoice_date(),"yyyy-MM-dd"));
                            arinvhh.fromString(Ar_invh.PROPERTY_DOCDUEDATE, GlobalUtils.formatDate(o.getInvoice_due_date(),"yyyy-MM-dd"));
                            arinvhh.fromString(Ar_invh.PROPERTY_DISCDATE, GlobalUtils.formatDate(o.getInvoice_date(),"yyyy-MM-dd"));

                            arinvhh.fromString(Ar_invh.PROPERTY_MOP, GlobalUtils.formatDate(GlobalUtils.sessiondate, "MM")) ;
                            arinvhh.fromString(Ar_invh.PROPERTY_YOP, GlobalUtils.formatDate(GlobalUtils.sessiondate, "yyyy")) ;

                            arinvhh.fromString(Ar_invh.PROPERTY_TAXCODE,ac.gettaxcode());
                            arinvhh.fromString(Ar_invh.PROPERTY_DISCPRCNT,"0");
                            arinvhh.fromString(Ar_invh.PROPERTY_DISCVALUEAMT,"0");
                            arinvhh.fromString(Ar_invh.PROPERTY_TERMCODE,ac.gettermcode());
                            arinvhh.fromString(Ar_invh.PROPERTY_CURNCCODE,ac.getcurnccode());
                            arinvhh.fromString(Ar_invh.PROPERTY_RATE,"0");
                            arinvhh.fromString(Ar_invh.PROPERTY_DOCNUMAPPLTO,"");
                            arinvhh.fromString(Ar_invh.PROPERTY_CUSTMRPONO,"");
                            arinvhh.fromString(Ar_invh.PROPERTY_ORDERNO,"");

                            arinvhh.fromString(Ar_invh.PROPERTY_TAXAMT,"0");
                            arinvhh.fromString(Ar_invh.PROPERTY_TAXTOTALAMT,"0");

                            Ar_invd cbhd = new Ar_invd();

                            obj.adddetail(arinvhh);
                            cbhd.setdistcode("");
                            cbhd.setaccrevcode(o.getacccount_code());
                            cbhd.setdetailamt(o.getBfrppn());
                            cbhd.setaccrevdscription(acc.getaccdesc());

                            arinvhds.add(cbhd);

                            acc=new Gl_account(ud.getppn_acc());
                            if (o.getPpn()>0){
                                cbhd = new Ar_invd();
                                cbhd.setdistcode("");
                                cbhd.setaccrevcode(acc.getacccode());
                                cbhd.setdetailamt(o.getPpnval());
                                cbhd.setaccrevdscription(acc.getaccdesc());

                                arinvhds.add(cbhd);
                            }
                            arinvhh.setDetail(arinvhds);
                            arinvhs.add(arinvhh);
                            boktosave=true;
                        } else {
                            smessage=smessage+trans_number+"-account '"+o.getacccount_code()+"' not found \n";
                        }
                    } else {
                        smessage=smessage+trans_number+"-customer '"+o.getCust_code_accpac()+"' not found \n";
                    }
                }
            }
            if (boktosave&&arinvhs.list().size()>0){
                obj.setDetail(arinvhs);
                obj.settotinvamt(GlobalUtils.toDbl(jtxttotinvamt.getText())) ;
                obj.fromString(Ar_invbatchlist.PROPERTY_INVENTRCNT, jtxtinventrcnt.getText()) ;
            
                obj.save();
                jtxtbatchno.setText(GlobalUtils.formatnumber(obj.getbatchno()));
                return true;
            } else {
                smessage=smessage+trans_number+"-fail to create \n";
            }
            jtxtarea_message.setText(smessage);
        } catch (CodeException ex) {
            Logger.getLogger(FrmAR_invoice_creator.class.getName()).log(Level.SEVERE, null, ex);
        }
        return false;
        
    }

    private void calculatetotal() {
        Double aftppn = new Double(0);
        int inventrcnt=0;
        for (int i=0;i<ci.size();i++){
            cpp_invoice o=ci.get(i);
            if (Boolean.parseBoolean(GlobalUtils.churuf(tmodeldetail.getValueAt(i, 0)))){
                aftppn=aftppn+o.getAftppn();
                inventrcnt++;
            }
        }
        jtxttotinvamt.setText(GlobalUtils.formatnumber(aftppn));
        jtxtinventrcnt.setText(GlobalUtils.formatnumber(inventrcnt));
    }

    private Boolean closeaccsts(String accsts) {
        try {
            Ar_invbatchlist obj = new Ar_invbatchlist(Ar_invbatchlist.PROPERTY_BATCHNO,jtxtbatchno.getText());
            Ar_invhs d1s = obj.getDetail();
            String invnum="";
            for (Object o: d1s.list()){
                Ar_invh d1=(Ar_invh) o;
                invnum=invnum+"'"+d1.getdocnum()+"',";
            }
            invnum=invnum.substring(0, invnum.length()-1);
            return ci.closeaccsts(invnum);
        } catch (CodeException ex) {
            Logger.getLogger(FrmAR_invoice_creator.class.getName()).log(Level.SEVERE, null, ex);
        }
        return false;
    }


}
