/*
 * From Template
 *
 * Created on June 29, 2007, 2:00 PM
 * 
 * 
 * How to Call this Form on FrmMainFrame
 * Sample : 
 *    
 * import accapp.component.op.FrmOp_tax;
 * 
 * .......
 * 
 * 
 * FrmOp_tax frmOp_tax;
 * 
 * .......
 * 
 try {
        if (frmOp_tax == null) {
            frmmOp_tax = new FrmOp_tax(this);
        }
        
        showForm(frmOp_tax);
        
    }catch(Exception e) {
        e.printStackTrace();
    }
 * 
 */

package accapp.component.op;

import accapp.objectclasses.gl.Gl_accounts;
import accapp.objectclasses.gl.Gl_currency;
import accapp.objectclasses.gl.Gl_currencys;
import common.component.FrmBrowse;
import common.classinterface.NavigatorFormInt;
import common.classinterface.NavigatorObjectInt;
import common.component.FrmMainFrame;

import common.utils.CodeException;
import common.utils.GlobalUtils;
import java.awt.event.KeyEvent;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import common.utils.ExtFileChooserFilter;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;
import accapp.objectclasses.op.Op_tax;
import accapp.objectclasses.op.Op_taxs;

/**
 *
 * @author  Generator
 */

public class FrmOp_tax extends javax.swing.JInternalFrame implements NavigatorFormInt {

    private static int istatus = 0;
    private static int iformtype = 0;
    public static String CLASSNAME="FrmOp_tax";
    
    FrmMainFrame mf ;
    
    
    public Op_tax obj = new Op_tax();
    
   
    /** Creates new form Area */
    public FrmOp_tax() throws CodeException {
        initComponents();
    }
    
    public FrmOp_tax(FrmMainFrame mf) throws CodeException{
        this.mf = mf;
        initComponents();
    }
     
       
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jHeader = new javax.swing.JLabel();
        HorizontalLine = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jbtnBrowse = new javax.swing.JButton();
        jtxtid = new javax.swing.JTextField();
        jlbltaxcode = new javax.swing.JLabel();
        jtxttaxcode = new javax.swing.JTextField();
        jtxtdscription = new javax.swing.JTextField();
        jlblcurnccode = new javax.swing.JLabel();
        jtxtcurnccode = new javax.swing.JTextField();
        jlblrate = new javax.swing.JLabel();
        jtxtrate = new javax.swing.JTextField();
        jlblliablyacccode = new javax.swing.JLabel();
        jtxtliablyacccode = new javax.swing.JTextField();
        jlblrecvracccode = new javax.swing.JLabel();
        jtxtrecvracccode = new javax.swing.JTextField();
        jlblexpnacccode = new javax.swing.JLabel();
        jtxtexpnacccode = new javax.swing.JTextField();
        jtxtentrydate = new javax.swing.JTextField();
        jtxtauditdate = new javax.swing.JTextField();
        jtxtaudituser = new javax.swing.JTextField();
        jtxtcmpnyid = new javax.swing.JTextField();
        jbtnBrowseExpn = new javax.swing.JButton();
        jtxtcurncdesc = new javax.swing.JTextField();
        jbtnBrowseCurn = new javax.swing.JButton();
        jbtnBrowseLiably = new javax.swing.JButton();
        jbtnBrowseRecVr = new javax.swing.JButton();
        jtxtrecvraccdesc = new javax.swing.JTextField();
        jtxtexpnaccdesc = new javax.swing.JTextField();
        jtxtliablyaccdesc = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Optional: Tax");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        jHeader.setBackground(new java.awt.Color(102, 102, 102));
        jHeader.setFont(new java.awt.Font("Dialog", 1, 10));
        jHeader.setForeground(new java.awt.Color(255, 255, 255));
        jHeader.setText(" : : Tax");
        jHeader.setAlignmentY(0.0F);
        jHeader.setOpaque(true);
        getContentPane().add(jHeader);
        jHeader.setBounds(30, 30, 130, 20);

        HorizontalLine.setForeground(new java.awt.Color(102, 102, 102));
        HorizontalLine.setAlignmentX(0.0F);
        HorizontalLine.setAlignmentY(0.0F);
        getContentPane().add(HorizontalLine);
        HorizontalLine.setBounds(160, 50, 650, 2);

        jSeparator3.setForeground(new java.awt.Color(102, 102, 102));
        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator3.setAlignmentX(0.0F);
        jSeparator3.setAlignmentY(0.0F);
        getContentPane().add(jSeparator3);
        jSeparator3.setBounds(30, 50, 2, 400);

        jbtnBrowse.setText("...");
        jbtnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowseActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnBrowse);
        jbtnBrowse.setBounds(340, 100, 30, 20);

        jtxtid.setEditable(false);
        jtxtid.setFont(new java.awt.Font("Tahoma", 0, 10));
        jtxtid.setText("id");
        getContentPane().add(jtxtid);
        jtxtid.setBounds(170, 30, 80, 17);

        jlbltaxcode.setText("Tax Code");
        getContentPane().add(jlbltaxcode);
        jlbltaxcode.setBounds(70, 100, 140, 15);

        jtxttaxcode.setText("taxcode");
        jtxttaxcode.setNextFocusableComponent(jtxtdscription);
        getContentPane().add(jtxttaxcode);
        jtxttaxcode.setBounds(260, 100, 80, 19);

        jtxtdscription.setText("dscription");
        getContentPane().add(jtxtdscription);
        jtxtdscription.setBounds(380, 100, 320, 19);

        jlblcurnccode.setText("Currency Code");
        getContentPane().add(jlblcurnccode);
        jlblcurnccode.setBounds(70, 130, 140, 15);

        jtxtcurnccode.setText("curnccode");
        jtxtcurnccode.setNextFocusableComponent(jtxtrate);
        jtxtcurnccode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtcurnccodeKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtxtcurnccodeKeyTyped(evt);
            }
        });
        getContentPane().add(jtxtcurnccode);
        jtxtcurnccode.setBounds(260, 130, 80, 19);

        jlblrate.setText("Rate");
        getContentPane().add(jlblrate);
        jlblrate.setBounds(70, 150, 140, 15);

        jtxtrate.setText("rate");
        getContentPane().add(jtxtrate);
        jtxtrate.setBounds(260, 150, 80, 19);

        jlblliablyacccode.setText("Liability Acc.Code");
        getContentPane().add(jlblliablyacccode);
        jlblliablyacccode.setBounds(70, 180, 140, 15);

        jtxtliablyacccode.setText("liablyacccode");
        jtxtliablyacccode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtliablyacccodeKeyPressed(evt);
            }
        });
        getContentPane().add(jtxtliablyacccode);
        jtxtliablyacccode.setBounds(260, 180, 150, 19);

        jlblrecvracccode.setText("Receive Acc.Code");
        getContentPane().add(jlblrecvracccode);
        jlblrecvracccode.setBounds(70, 200, 140, 15);

        jtxtrecvracccode.setText("recvracccode");
        jtxtrecvracccode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtrecvracccodeKeyPressed(evt);
            }
        });
        getContentPane().add(jtxtrecvracccode);
        jtxtrecvracccode.setBounds(260, 200, 150, 19);

        jlblexpnacccode.setText("expnacccode");
        getContentPane().add(jlblexpnacccode);
        jlblexpnacccode.setBounds(70, 220, 140, 15);

        jtxtexpnacccode.setText("expnacccode");
        jtxtexpnacccode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtexpnacccodeKeyPressed(evt);
            }
        });
        getContentPane().add(jtxtexpnacccode);
        jtxtexpnacccode.setBounds(260, 220, 150, 19);

        jtxtentrydate.setEditable(false);
        jtxtentrydate.setFont(new java.awt.Font("Tahoma", 0, 10));
        jtxtentrydate.setText("entrydate");
        getContentPane().add(jtxtentrydate);
        jtxtentrydate.setBounds(250, 30, 120, 17);

        jtxtauditdate.setEditable(false);
        jtxtauditdate.setFont(new java.awt.Font("Tahoma", 0, 10));
        jtxtauditdate.setText("auditdate");
        getContentPane().add(jtxtauditdate);
        jtxtauditdate.setBounds(370, 30, 130, 17);

        jtxtaudituser.setEditable(false);
        jtxtaudituser.setFont(new java.awt.Font("Tahoma", 0, 10));
        jtxtaudituser.setText("audituser");
        getContentPane().add(jtxtaudituser);
        jtxtaudituser.setBounds(500, 30, 140, 17);

        jtxtcmpnyid.setEditable(false);
        jtxtcmpnyid.setFont(new java.awt.Font("Tahoma", 0, 10));
        jtxtcmpnyid.setText("cmpnyid");
        getContentPane().add(jtxtcmpnyid);
        jtxtcmpnyid.setBounds(640, 30, 150, 17);

        jbtnBrowseExpn.setText("...");
        jbtnBrowseExpn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowseExpnActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnBrowseExpn);
        jbtnBrowseExpn.setBounds(410, 220, 30, 17);

        jtxtcurncdesc.setEditable(false);
        jtxtcurncdesc.setText("curndesc");
        getContentPane().add(jtxtcurncdesc);
        jtxtcurncdesc.setBounds(380, 130, 320, 19);

        jbtnBrowseCurn.setText("...");
        jbtnBrowseCurn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowseCurnActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnBrowseCurn);
        jbtnBrowseCurn.setBounds(340, 130, 30, 17);

        jbtnBrowseLiably.setText("...");
        jbtnBrowseLiably.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowseLiablyActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnBrowseLiably);
        jbtnBrowseLiably.setBounds(410, 180, 30, 17);

        jbtnBrowseRecVr.setText("...");
        jbtnBrowseRecVr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowseRecVrActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnBrowseRecVr);
        jbtnBrowseRecVr.setBounds(410, 200, 30, 17);

        jtxtrecvraccdesc.setEditable(false);
        jtxtrecvraccdesc.setText("recvraccdesc");
        getContentPane().add(jtxtrecvraccdesc);
        jtxtrecvraccdesc.setBounds(450, 200, 340, 19);

        jtxtexpnaccdesc.setEditable(false);
        jtxtexpnaccdesc.setText("expnaccdesc");
        getContentPane().add(jtxtexpnaccdesc);
        jtxtexpnaccdesc.setBounds(450, 220, 340, 19);

        jtxtliablyaccdesc.setEditable(false);
        jtxtliablyaccdesc.setText("liablyaccdesc");
        getContentPane().add(jtxtliablyaccdesc);
        jtxtliablyaccdesc.setBounds(450, 180, 340, 19);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
         try {
            moveFirst();

         } catch (CodeException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_formInternalFrameOpened

private void kdatePurchaseDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kdatePurchaseDateFocusLost

}//GEN-LAST:event_kdatePurchaseDateFocusLost

private void kdatePurchaseDateCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_kdatePurchaseDateCaretPositionChanged

}//GEN-LAST:event_kdatePurchaseDateCaretPositionChanged

private void kdatePurchaseDatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_kdatePurchaseDatePropertyChange

}//GEN-LAST:event_kdatePurchaseDatePropertyChange

private void jbtnBrowseCurnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBrowseCurnActionPerformed
      try {
	      Gl_currencys brs = new Gl_currencys();
	      FrmBrowse bd = new FrmBrowse(brs);
	      bd.setFirstValue(jtxtcurnccode);
              bd.setSecondValue(jtxtcurncdesc);
	      bd.setModal(true);
	      bd.setVisible(true);

	  } catch (CodeException ex) {
	      ex.printStackTrace();
	  }

}//GEN-LAST:event_jbtnBrowseCurnActionPerformed

private void jbtnBrowseLiablyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBrowseLiablyActionPerformed
          try {
	      Gl_accounts brs = new Gl_accounts();
	      FrmBrowse bd = new FrmBrowse(brs);
	      bd.setFirstValue(jtxtliablyacccode);
              bd.setSecondValue(jtxtliablyaccdesc);
	      bd.setModal(true);
	      bd.setVisible(true);

	  } catch (CodeException ex) {
	      ex.printStackTrace();
	  }
}//GEN-LAST:event_jbtnBrowseLiablyActionPerformed

private void jbtnBrowseRecVrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBrowseRecVrActionPerformed
          try {
	      Gl_accounts brs = new Gl_accounts();
	      FrmBrowse bd = new FrmBrowse(brs);
	      bd.setFirstValue(jtxtrecvracccode);
              bd.setSecondValue(jtxtrecvraccdesc);
	      bd.setModal(true);
	      bd.setVisible(true);

	  } catch (CodeException ex) {
	      ex.printStackTrace();
	  }
}//GEN-LAST:event_jbtnBrowseRecVrActionPerformed

private void jbtnBrowseExpnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBrowseExpnActionPerformed
          try {
	      Gl_accounts brs = new Gl_accounts();
	      FrmBrowse bd = new FrmBrowse(brs);
	      bd.setFirstValue(jtxtexpnacccode);
              bd.setSecondValue(jtxtexpnaccdesc);
	      bd.setModal(true);
	      bd.setVisible(true);

	  } catch (CodeException ex) {
	      ex.printStackTrace();
	  }
}//GEN-LAST:event_jbtnBrowseExpnActionPerformed

private void jtxtcurnccodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtcurnccodeKeyTyped



}//GEN-LAST:event_jtxtcurnccodeKeyTyped

private void jtxtliablyacccodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtliablyacccodeKeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        try {
            obj.setliablyacccode(jtxtliablyacccode.getText());
            jtxtliablyaccdesc.setText(obj.getLiablyAccDesc());
        }catch(Exception e) {}

    }

}//GEN-LAST:event_jtxtliablyacccodeKeyPressed

private void jtxtcurnccodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtcurnccodeKeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        try {
            obj.setcurnccode(jtxtcurnccode.getText());
            jtxtcurncdesc.setText(obj.getCurrencyDesc());
        }catch(Exception e) {}

    }
}//GEN-LAST:event_jtxtcurnccodeKeyPressed

private void jtxtrecvracccodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtrecvracccodeKeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        try {
            obj.setrecvracccode(jtxtrecvracccode.getText());
            jtxtrecvraccdesc.setText(obj.getRecVrAccDesc());
        }catch(Exception e) {}
        
    }
}//GEN-LAST:event_jtxtrecvracccodeKeyPressed

private void jtxtexpnacccodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtexpnacccodeKeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        try {
            obj.setexpnacccode(jtxtexpnacccode.getText());
            jtxtexpnaccdesc.setText(obj.geExpnAccDesc());
        }catch(Exception e) {}

    }


}//GEN-LAST:event_jtxtexpnacccodeKeyPressed


private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {                                            
    setToolBar(iformtype,istatus);
    mf.setIcon(CLASSNAME);
}                                           

private void jbtnBrowseActionPerformed(java.awt.event.ActionEvent evt) {                                           
      try {
	      Op_taxs brs = new Op_taxs();
	      FrmBrowse bd = new FrmBrowse(this, brs);
	      bd.setFirstValue(jtxttaxcode);
	      bd.setModal(true);
	      bd.setVisible(true);            
	      
	  } catch (CodeException ex) {
	      ex.printStackTrace();
	  }
}                                                                                 

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new FrmOp_tax().setVisible(true);
                } catch (CodeException ex) {
                    ex.printStackTrace();
                }
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSeparator HorizontalLine;
    private javax.swing.JLabel jHeader;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JButton jbtnBrowse;
    private javax.swing.JButton jbtnBrowseCurn;
    private javax.swing.JButton jbtnBrowseExpn;
    private javax.swing.JButton jbtnBrowseLiably;
    private javax.swing.JButton jbtnBrowseRecVr;
    private javax.swing.JLabel jlblcurnccode;
    private javax.swing.JLabel jlblexpnacccode;
    private javax.swing.JLabel jlblliablyacccode;
    private javax.swing.JLabel jlblrate;
    private javax.swing.JLabel jlblrecvracccode;
    private javax.swing.JLabel jlbltaxcode;
    private javax.swing.JTextField jtxtauditdate;
    private javax.swing.JTextField jtxtaudituser;
    private javax.swing.JTextField jtxtcmpnyid;
    private javax.swing.JTextField jtxtcurnccode;
    private javax.swing.JTextField jtxtcurncdesc;
    private javax.swing.JTextField jtxtdscription;
    private javax.swing.JTextField jtxtentrydate;
    private javax.swing.JTextField jtxtexpnacccode;
    private javax.swing.JTextField jtxtexpnaccdesc;
    private javax.swing.JTextField jtxtid;
    private javax.swing.JTextField jtxtliablyacccode;
    private javax.swing.JTextField jtxtliablyaccdesc;
    private javax.swing.JTextField jtxtrate;
    private javax.swing.JTextField jtxtrecvracccode;
    private javax.swing.JTextField jtxtrecvraccdesc;
    private javax.swing.JTextField jtxttaxcode;
    // End of variables declaration//GEN-END:variables

 
    public void moveFirst() throws CodeException {
        obj.moveFirst();
        showData();
        mf.setIcon(CLASSNAME);
    }

    public void movePrevious() throws CodeException {
        obj.movePrevious();
        showData();
        mf.setIcon(CLASSNAME);
    }

    public void moveNext() throws CodeException {
        obj.moveNext();
        showData();
        mf.setIcon(CLASSNAME);
    }

    public void moveLast() throws CodeException {
        obj.moveLast();
        showData();
        mf.setIcon(CLASSNAME);
    }

    public void searchData() throws CodeException {
        obj = new Op_tax(this.jtxttaxcode.getText());
        showData();
        mf.setIcon(CLASSNAME);

    }
    public void newData() throws CodeException {
        obj = new Op_tax();
        istatus=1;
        showData();
        setToolBar(iformtype,istatus);
    }

    private void validasi() throws CodeException {

        if(!jtxtcurnccode.getText().equals("")) {
              Gl_currency curr = new Gl_currency(jtxtcurnccode.getText().replace("-", ""));
              if (curr.getID() == Gl_currency.NULLID) {
                  throw new CodeException("Currency " + jtxtcurnccode.getText() + " Tidak Diketemukan");
              }
        }

        if(!jtxtliablyacccode.getText().equals("")) {
              Gl_accounts acc = new Gl_accounts(jtxtliablyacccode.getText().replace("-", ""));
              if(acc.getID() == Gl_accounts.NULLID){
                  throw new CodeException("Liability " + jtxtliablyacccode.getText() + " Tidak Diketemukan");
              }
        }

        if (!jtxtrecvracccode.getText().equals("")) {
              Gl_accounts acc = new Gl_accounts(jtxtrecvracccode.getText().replace("-", ""));
              if(acc.getID() == Gl_accounts.NULLID){
                  throw new CodeException("Receive " + jtxtrecvracccode.getText() + " Tidak Diketemukan");
              }
        }

        if (!jtxtexpnacccode.getText().equals("")) {
              Gl_accounts acc = new Gl_accounts(jtxtexpnacccode.getText().replace("-", ""));
              if(acc.getID() == Gl_accounts.NULLID){
                  throw new CodeException("expn " + jtxtexpnacccode.getText() + " Tidak Diketemukan");
              }
        }

    }

    public void saveData() throws CodeException {
        validasi();
        istatus = 0;
        setData();
        obj.save();
        
        showData();
        
        mf.setIcon(CLASSNAME);
    }

    public void showData() throws CodeException {
        setCursor(GlobalUtils.HOURGLASSCURSOR);
	
             jtxtid.setText(obj.toString(Op_tax.PROPERTY_ID));
             jtxttaxcode.setText(obj.toString(Op_tax.PROPERTY_TAXCODE));
             jtxtdscription.setText(obj.toString(Op_tax.PROPERTY_DSCRIPTION));
             jtxtcurnccode.setText(obj.toString(Op_tax.PROPERTY_CURNCCODE));
             jtxtcurncdesc.setText(obj.getCurrencyDesc());
             jtxtrate.setText(obj.toString(Op_tax.PROPERTY_RATE));
             jtxtliablyacccode.setText(obj.getliablyacccodefmt());
             jtxtliablyaccdesc.setText(obj.getLiablyAccDesc());
             jtxtrecvracccode.setText(obj.getrecvracccodefmt());
             jtxtrecvraccdesc.setText(obj.getRecVrAccDesc());
             jtxtexpnacccode.setText(obj.getexpnacccodefmt());
             jtxtexpnaccdesc.setText(obj.getexpnacccodedesc());
             jtxtentrydate.setText(obj.toString(Op_tax.PROPERTY_ENTRYDATE));
             jtxtauditdate.setText(obj.toString(Op_tax.PROPERTY_AUDITDATE));
             jtxtaudituser.setText(obj.toString(Op_tax.PROPERTY_AUDITUSER));
             jtxtcmpnyid.setText(obj.toString(Op_tax.PROPERTY_CMPNYID));


             
        setCursor(GlobalUtils.NORMALCURSOR);
    }

    public void delete() throws CodeException {
        obj.delete();
        obj.moveFirst();
        showData();
        mf.setIcon(CLASSNAME);
    }

    public void setToolBar(int iFormType, int istatus) {
        mf.setToolBar(iformtype,istatus);        
    }

    public void setData() throws CodeException {
        
	
          obj.fromString(Op_tax.PROPERTY_ID, jtxtid.getText()) ;
          obj.fromString(Op_tax.PROPERTY_TAXCODE, jtxttaxcode.getText()) ;
          obj.fromString(Op_tax.PROPERTY_DSCRIPTION, jtxtdscription.getText()) ;
          obj.fromString(Op_tax.PROPERTY_CURNCCODE, jtxtcurnccode.getText()) ;
          obj.fromString(Op_tax.PROPERTY_RATE, jtxtrate.getText()) ;
          obj.fromString(Op_tax.PROPERTY_LIABLYACCCODE, jtxtliablyacccode.getText()) ;
          obj.fromString(Op_tax.PROPERTY_RECVRACCCODE, jtxtrecvracccode.getText()) ;
          obj.fromString(Op_tax.PROPERTY_EXPNACCCODE, jtxtexpnacccode.getText()) ;
          obj.fromString(Op_tax.PROPERTY_ENTRYDATE, jtxtentrydate.getText()) ;
          obj.fromString(Op_tax.PROPERTY_AUDITDATE, jtxtauditdate.getText()) ;
          obj.fromString(Op_tax.PROPERTY_AUDITUSER, jtxtaudituser.getText()) ;
          obj.fromString(Op_tax.PROPERTY_CMPNYID, jtxtcmpnyid.getText()) ;

    }

    public void undo() throws CodeException {
        istatus = 0;
        moveFirst();
        showData();
    }

    public void execute() throws CodeException {
       saveData();
    }

    public void printData() throws CodeException {
        Map parameter = new HashMap();
        NavigatorObjectInt noi = (NavigatorObjectInt) obj;        
        String file   = GlobalUtils.getCurrentDir() +"/Reports/" + noi.getClassName() + ".jrxml";
        GlobalUtils.printReport(file,  false);    
    }

    public void importCsv() throws CodeException {
            
        String file1 = "";
        String file2 = GlobalUtils.getCurrentDir() + GlobalUtils.temp + obj.TABLEPROCESS + ".csv";   
        
        JFileChooser chooser = new JFileChooser(".");
        chooser.setDialogTitle("Pilih File ");
        FileFilter filter1 = new ExtFileChooserFilter("CSV", new String[] { "CSV"});
        chooser.setFileFilter(filter1);

        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            File selectedFile = chooser.getSelectedFile();
            
            try {
                file1 = selectedFile.getCanonicalPath();
            
            }catch (Exception e) {}

            GlobalUtils.copyfile(file1, file2 );                

            obj.importCsv();
            
        }else {
          JOptionPane.showMessageDialog(null,"No Selection ");
        }

    }

    public void exportCsv() throws CodeException {
        
    
        if (obj.exportCsv()) {
            
            String file1 = GlobalUtils.getCurrentDir() + GlobalUtils.temp + obj.TABLEPROCESS + ".csv";   
            String file2 = "";
            
            JFileChooser chooser = new JFileChooser(".");
            chooser.setDialogTitle("Pilih Directory ");
    
            if (chooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
                try {
                    file2 = chooser.getSelectedFile().getCanonicalPath() + ".csv";
                        
                    JOptionPane.showMessageDialog(null, GlobalUtils.copyfile(file1, file2 ));                    
                    
                }catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());                    
                }
                
            }else {
              JOptionPane.showMessageDialog(null,"No Selection ");
            }
    
        }
        
    }

    public void importText() throws CodeException {
        String file1 = "";
        String file2 = GlobalUtils.getCurrentDir() + GlobalUtils.temp + obj.TABLEPROCESS + ".txt";   
        
        JFileChooser chooser = new JFileChooser(".");
        chooser.setDialogTitle("Pilih File ");
        FileFilter filter1 = new ExtFileChooserFilter("txt", new String[] { "txt"});
        chooser.setFileFilter(filter1);


        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            File selectedFile = chooser.getSelectedFile();
            
            try {
                file1 = selectedFile.getCanonicalPath();
            
            }catch (Exception e) {}

            GlobalUtils.copyfile(file1, file2 );                

            obj.importCsv();
            
        }else {
          JOptionPane.showMessageDialog(null,"No Selection ");
        }
    }

    public void exportText() throws CodeException {
        if (obj.exportText()) {
            
            String file1 = GlobalUtils.getCurrentDir() + GlobalUtils.temp + obj.TABLEPROCESS + ".txt";   
            String file2 = "";
            
            JFileChooser chooser = new JFileChooser(".");
            chooser.setDialogTitle("Pilih Directory ");
    
            if (chooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
                try {
                    file2 = chooser.getSelectedFile().getCanonicalPath() + ".txt";                        
                    JOptionPane.showMessageDialog(null, GlobalUtils.copyfile(file1, file2 ));                    
                    
                }catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());                    
                }
                
            }else {
              JOptionPane.showMessageDialog(null,"No Selection ");
            }
    
        } 
    }

    
}
