/*
 * From Template
 *
 * Created on June 29, 2007, 2:00 PM
 * 
 * 
 * How to Call this Form on FrmMainFrame
 * Sample : 
 *    
 * import accapp.component.ap.FrmAp_accset;
 * 
 * .......
 * 
 * 
 * FrmAp_accset frmAp_accset;
 * 
 * .......
 * 
 try {
        if (frmAp_accset == null) {
            frmmAp_accset = new FrmAp_accset(this);
        }
        
        showForm(frmAp_accset);
        
    }catch(Exception e) {
        e.printStackTrace();
    }
 * 
 */

package accapp.component.ap;

import common.component.FrmBrowse;
import common.classinterface.NavigatorFormInt;
import common.classinterface.NavigatorObjectInt;
import common.component.FrmMainFrame;

import common.utils.CodeException;
import common.utils.GlobalUtils;
import java.awt.event.KeyEvent;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import common.utils.ExtFileChooserFilter;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;
import accapp.objectclasses.ap.Ap_accset;
import accapp.objectclasses.ap.Ap_accsets;
import accapp.objectclasses.gl.Gl_account;
import accapp.objectclasses.gl.Gl_accounts;
import accapp.objectclasses.gl.Gl_currency;
import accapp.objectclasses.gl.Gl_currencys;
import common.print.FrmPrintMasterAPAccountSet;

/**
 *
 * @author  Generator
 */

public class FrmAp_accset extends javax.swing.JInternalFrame implements NavigatorFormInt {

    private static int istatus = 0;
    private static int iformtype = 0;
    public static String CLASSNAME="FrmAp_accset";
    
    FrmMainFrame mf ;
    
    
    public Ap_accset obj = new Ap_accset();
    
   
    /** Creates new form Area */
    public FrmAp_accset() throws CodeException {
        initComponents();
    }
    
    public FrmAp_accset(FrmMainFrame mf) throws CodeException{
        this.mf = mf;
        initComponents();
    }
     
       
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jHeader = new javax.swing.JLabel();
        HorizontalLine = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jtxtid = new javax.swing.JTextField();
        jlblaccsetcode = new javax.swing.JLabel();
        jtxtaccsetcode = new javax.swing.JTextField();
        jtxtdscription = new javax.swing.JTextField();
        jlblapacccode = new javax.swing.JLabel();
        jtxtapacccode = new javax.swing.JTextField();
        jlbldiscacccode = new javax.swing.JLabel();
        jtxtdiscacccode = new javax.swing.JTextField();
        jlblprepayacccode = new javax.swing.JLabel();
        jtxtprepayacccode = new javax.swing.JTextField();
        jlblcurnccode = new javax.swing.JLabel();
        jtxtcurnccode = new javax.swing.JTextField();
        jtxtentrydate = new javax.swing.JTextField();
        jtxtauditdate = new javax.swing.JTextField();
        jtxtaudituser = new javax.swing.JTextField();
        jtxtcmpnyid = new javax.swing.JTextField();
        jbtnBrowse = new javax.swing.JButton();
        jchkActive = new javax.swing.JCheckBox();
        jbtnBrowsePurchase = new javax.swing.JButton();
        jbtnBrowsePrepayment = new javax.swing.JButton();
        jbtnBrowsePayableControl = new javax.swing.JButton();
        jbtnBrowseCurn = new javax.swing.JButton();
        jtxtprepayaccdesc = new javax.swing.JTextField();
        jtxtdiscaccdesc = new javax.swing.JTextField();
        jtxtapaccdesc = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Ap_accset");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        jHeader.setBackground(new java.awt.Color(102, 102, 102));
        jHeader.setFont(new java.awt.Font("Dialog", 1, 10));
        jHeader.setForeground(new java.awt.Color(255, 255, 255));
        jHeader.setText(" : : Ap_accset");
        jHeader.setAlignmentY(0.0F);
        jHeader.setOpaque(true);
        getContentPane().add(jHeader);
        jHeader.setBounds(30, 30, 130, 20);

        HorizontalLine.setForeground(new java.awt.Color(102, 102, 102));
        HorizontalLine.setAlignmentX(0.0F);
        HorizontalLine.setAlignmentY(0.0F);
        getContentPane().add(HorizontalLine);
        HorizontalLine.setBounds(160, 50, 650, 6);

        jSeparator3.setForeground(new java.awt.Color(102, 102, 102));
        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator3.setAlignmentX(0.0F);
        jSeparator3.setAlignmentY(0.0F);
        getContentPane().add(jSeparator3);
        jSeparator3.setBounds(30, 50, 6, 400);

        jtxtid.setEditable(false);
        jtxtid.setFont(new java.awt.Font("Dialog", 0, 8));
        jtxtid.setText("id");
        getContentPane().add(jtxtid);
        jtxtid.setBounds(190, 30, 80, 20);

        jlblaccsetcode.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblaccsetcode.setText("Account Set Code");
        getContentPane().add(jlblaccsetcode);
        jlblaccsetcode.setBounds(70, 100, 140, 13);

        jtxtaccsetcode.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtaccsetcode.setText("accsetcode");
        jtxtaccsetcode.setNextFocusableComponent(jtxtdscription);
        jtxtaccsetcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtaccsetcodeKeyPressed(evt);
            }
        });
        getContentPane().add(jtxtaccsetcode);
        jtxtaccsetcode.setBounds(260, 100, 80, 23);

        jtxtdscription.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtdscription.setText("dscription");
        jtxtdscription.setNextFocusableComponent(jchkActive);
        jtxtdscription.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtdscriptionKeyPressed(evt);
            }
        });
        getContentPane().add(jtxtdscription);
        jtxtdscription.setBounds(390, 100, 330, 23);

        jlblapacccode.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblapacccode.setForeground(new java.awt.Color(230, 13, 13));
        jlblapacccode.setText("Payable control*");
        getContentPane().add(jlblapacccode);
        jlblapacccode.setBounds(70, 150, 170, 13);

        jtxtapacccode.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtapacccode.setText("apacccode");
        jtxtapacccode.setNextFocusableComponent(jtxtdiscacccode);
        jtxtapacccode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtapacccodeKeyPressed(evt);
            }
        });
        getContentPane().add(jtxtapacccode);
        jtxtapacccode.setBounds(260, 150, 170, 23);

        jlbldiscacccode.setFont(new java.awt.Font("Dialog", 1, 10));
        jlbldiscacccode.setForeground(new java.awt.Color(230, 13, 13));
        jlbldiscacccode.setText("Purchase Discount*");
        getContentPane().add(jlbldiscacccode);
        jlbldiscacccode.setBounds(70, 170, 170, 13);

        jtxtdiscacccode.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtdiscacccode.setText("discacccode");
        jtxtdiscacccode.setNextFocusableComponent(jtxtprepayacccode);
        jtxtdiscacccode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtdiscacccodeKeyPressed(evt);
            }
        });
        getContentPane().add(jtxtdiscacccode);
        jtxtdiscacccode.setBounds(260, 170, 170, 23);

        jlblprepayacccode.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblprepayacccode.setForeground(new java.awt.Color(230, 13, 13));
        jlblprepayacccode.setText("Prepayment*");
        getContentPane().add(jlblprepayacccode);
        jlblprepayacccode.setBounds(70, 190, 140, 13);

        jtxtprepayacccode.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtprepayacccode.setText("prepayacccode");
        jtxtprepayacccode.setNextFocusableComponent(jtxtcurnccode);
        jtxtprepayacccode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtprepayacccodeKeyPressed(evt);
            }
        });
        getContentPane().add(jtxtprepayacccode);
        jtxtprepayacccode.setBounds(260, 190, 170, 23);

        jlblcurnccode.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jlblcurnccode.setForeground(new java.awt.Color(230, 13, 13));
        jlblcurnccode.setText("Currency Code*");
        getContentPane().add(jlblcurnccode);
        jlblcurnccode.setBounds(70, 230, 140, 13);

        jtxtcurnccode.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtcurnccode.setText("curnccode");
        getContentPane().add(jtxtcurnccode);
        jtxtcurnccode.setBounds(260, 230, 70, 23);

        jtxtentrydate.setEditable(false);
        jtxtentrydate.setFont(new java.awt.Font("Dialog", 0, 8));
        jtxtentrydate.setText("entrydate");
        getContentPane().add(jtxtentrydate);
        jtxtentrydate.setBounds(310, 30, 120, 20);

        jtxtauditdate.setEditable(false);
        jtxtauditdate.setFont(new java.awt.Font("Dialog", 0, 8));
        jtxtauditdate.setText("auditdate");
        getContentPane().add(jtxtauditdate);
        jtxtauditdate.setBounds(440, 30, 110, 20);

        jtxtaudituser.setEditable(false);
        jtxtaudituser.setFont(new java.awt.Font("Dialog", 0, 8));
        jtxtaudituser.setText("audituser");
        getContentPane().add(jtxtaudituser);
        jtxtaudituser.setBounds(560, 30, 110, 20);

        jtxtcmpnyid.setEditable(false);
        jtxtcmpnyid.setFont(new java.awt.Font("Dialog", 0, 8));
        jtxtcmpnyid.setText("cmpnyid");
        getContentPane().add(jtxtcmpnyid);
        jtxtcmpnyid.setBounds(690, 30, 110, 20);

        jbtnBrowse.setFont(new java.awt.Font("Dialog", 0, 10));
        jbtnBrowse.setText("...");
        jbtnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowseActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnBrowse);
        jbtnBrowse.setBounds(350, 100, 30, 17);

        jchkActive.setFont(new java.awt.Font("Dialog", 1, 10));
        jchkActive.setText("Active");
        jchkActive.setNextFocusableComponent(jtxtapacccode);
        jchkActive.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jchkActiveKeyPressed(evt);
            }
        });
        getContentPane().add(jchkActive);
        jchkActive.setBounds(260, 120, 98, 24);

        jbtnBrowsePurchase.setFont(new java.awt.Font("Dialog", 0, 10));
        jbtnBrowsePurchase.setText("...");
        jbtnBrowsePurchase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowsePurchaseActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnBrowsePurchase);
        jbtnBrowsePurchase.setBounds(430, 170, 30, 17);

        jbtnBrowsePrepayment.setFont(new java.awt.Font("Dialog", 0, 10));
        jbtnBrowsePrepayment.setText("...");
        jbtnBrowsePrepayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowsePrepaymentActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnBrowsePrepayment);
        jbtnBrowsePrepayment.setBounds(430, 190, 30, 17);

        jbtnBrowsePayableControl.setFont(new java.awt.Font("Dialog", 0, 10));
        jbtnBrowsePayableControl.setText("...");
        jbtnBrowsePayableControl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowsePayableControlActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnBrowsePayableControl);
        jbtnBrowsePayableControl.setBounds(430, 150, 30, 17);

        jbtnBrowseCurn.setFont(new java.awt.Font("Dialog", 0, 10));
        jbtnBrowseCurn.setText("...");
        jbtnBrowseCurn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowseCurnActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnBrowseCurn);
        jbtnBrowseCurn.setBounds(330, 230, 30, 17);

        jtxtprepayaccdesc.setEditable(false);
        jtxtprepayaccdesc.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtprepayaccdesc.setText("jtxtprepayaccdesc");
        getContentPane().add(jtxtprepayaccdesc);
        jtxtprepayaccdesc.setBounds(470, 190, 300, 23);

        jtxtdiscaccdesc.setEditable(false);
        jtxtdiscaccdesc.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtdiscaccdesc.setText("jtxtdiscaccdesc");
        getContentPane().add(jtxtdiscaccdesc);
        jtxtdiscaccdesc.setBounds(470, 170, 300, 23);

        jtxtapaccdesc.setEditable(false);
        jtxtapaccdesc.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtapaccdesc.setText("jtxtapaccdesc");
        getContentPane().add(jtxtapaccdesc);
        jtxtapaccdesc.setBounds(470, 150, 300, 23);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
         try {
            moveFirst();

         } catch (CodeException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_formInternalFrameOpened

private void kdatePurchaseDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kdatePurchaseDateFocusLost

}//GEN-LAST:event_kdatePurchaseDateFocusLost

private void kdatePurchaseDateCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_kdatePurchaseDateCaretPositionChanged

}//GEN-LAST:event_kdatePurchaseDateCaretPositionChanged

private void kdatePurchaseDatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_kdatePurchaseDatePropertyChange

}//GEN-LAST:event_kdatePurchaseDatePropertyChange

private void jbtnBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBrowseActionPerformed
      try {
	      Ap_accsets brs = new Ap_accsets();
	      FrmBrowse bd = new FrmBrowse(this, brs);
	      bd.setFirstValue(jtxtaccsetcode);
	      bd.setModal(true);
	      bd.setVisible(true);

	  } catch (CodeException ex) {
	      ex.printStackTrace();
	  }

}//GEN-LAST:event_jbtnBrowseActionPerformed

private void jbtnBrowsePayableControlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBrowsePayableControlActionPerformed

          try {
	      Gl_accounts brs = new Gl_accounts(0);
	      FrmBrowse bd = new FrmBrowse( brs);
	      bd.setFirstValue(jtxtapacccode);
              bd.setSecondValue(jtxtapaccdesc);
              
	      bd.setModal(true);
	      bd.setVisible(true);

	  } catch (CodeException ex) {
	      ex.printStackTrace();
	  }

}//GEN-LAST:event_jbtnBrowsePayableControlActionPerformed

private void jbtnBrowsePurchaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBrowsePurchaseActionPerformed
          try {
	      Gl_accounts brs = new Gl_accounts(0);
	      FrmBrowse bd = new FrmBrowse( brs);
	      bd.setFirstValue(jtxtdiscacccode);
              bd.setSecondValue(jtxtdiscaccdesc);


	      bd.setModal(true);
	      bd.setVisible(true);

	  } catch (CodeException ex) {
	      ex.printStackTrace();
	  }
}//GEN-LAST:event_jbtnBrowsePurchaseActionPerformed

private void jbtnBrowsePrepaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBrowsePrepaymentActionPerformed
          try {
	      Gl_accounts brs = new Gl_accounts(0);
	      FrmBrowse bd = new FrmBrowse( brs);
	      bd.setFirstValue(jtxtprepayacccode);
              bd.setSecondValue(jtxtprepayaccdesc);

	      bd.setModal(true);
	      bd.setVisible(true);

	  } catch (CodeException ex) {
	      ex.printStackTrace();
	  }

}//GEN-LAST:event_jbtnBrowsePrepaymentActionPerformed

private void jtxtapacccodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtapacccodeKeyPressed

    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        try {
            obj.setapacccode(jtxtapacccode.getText());
            jtxtapaccdesc.setText(obj.getAppAccDesc());


            jtxtdiscacccode.requestFocus();
        }catch (Exception e) {}

    }


}//GEN-LAST:event_jtxtapacccodeKeyPressed

private void jtxtdiscacccodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtdiscacccodeKeyPressed

    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        try {
            obj.setdiscacccode(jtxtdiscacccode.getText());
            jtxtdiscaccdesc.setText(obj.getDiscAccDesc());
        }catch (Exception e) {}


        jtxtprepayacccode.requestFocus();
    }


}//GEN-LAST:event_jtxtdiscacccodeKeyPressed

private void jtxtprepayacccodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtprepayacccodeKeyPressed


    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        try {
            obj.setapacccode(jtxtapacccode.getText());
            jtxtprepayaccdesc.setText(obj.getPrePayAccDesc());
        }catch (Exception e) {}
        jtxtcurnccode.requestFocus();

    }
}//GEN-LAST:event_jtxtprepayacccodeKeyPressed

private void jbtnBrowseCurnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBrowseCurnActionPerformed
          try {
	      Gl_currencys brs = new Gl_currencys(0);
	      FrmBrowse bd = new FrmBrowse( brs);
	      bd.setFirstValue(jtxtcurnccode);

	      bd.setModal(true);
	      bd.setVisible(true);

	  } catch (CodeException ex) {
	      ex.printStackTrace();
	  }
}//GEN-LAST:event_jbtnBrowseCurnActionPerformed

private void jtxtaccsetcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtaccsetcodeKeyPressed

    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        jtxtdscription.requestFocus();
    }
}//GEN-LAST:event_jtxtaccsetcodeKeyPressed

private void jtxtdscriptionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtdscriptionKeyPressed

    if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
        jchkActive.requestFocus();
    }

}//GEN-LAST:event_jtxtdscriptionKeyPressed

private void jchkActiveKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jchkActiveKeyPressed

    if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
        jtxtapacccode.requestFocus();
    }
}//GEN-LAST:event_jchkActiveKeyPressed


private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {                                            
    setToolBar(iformtype,istatus);
    mf.setIcon(CLASSNAME);
}                                           


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new FrmAp_accset().setVisible(true);
                } catch (CodeException ex) {
                    ex.printStackTrace();
                }
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSeparator HorizontalLine;
    private javax.swing.JLabel jHeader;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JButton jbtnBrowse;
    private javax.swing.JButton jbtnBrowseCurn;
    private javax.swing.JButton jbtnBrowsePayableControl;
    private javax.swing.JButton jbtnBrowsePrepayment;
    private javax.swing.JButton jbtnBrowsePurchase;
    private javax.swing.JCheckBox jchkActive;
    private javax.swing.JLabel jlblaccsetcode;
    private javax.swing.JLabel jlblapacccode;
    private javax.swing.JLabel jlblcurnccode;
    private javax.swing.JLabel jlbldiscacccode;
    private javax.swing.JLabel jlblprepayacccode;
    private javax.swing.JTextField jtxtaccsetcode;
    private javax.swing.JTextField jtxtapacccode;
    private javax.swing.JTextField jtxtapaccdesc;
    private javax.swing.JTextField jtxtauditdate;
    private javax.swing.JTextField jtxtaudituser;
    private javax.swing.JTextField jtxtcmpnyid;
    private javax.swing.JTextField jtxtcurnccode;
    private javax.swing.JTextField jtxtdiscacccode;
    private javax.swing.JTextField jtxtdiscaccdesc;
    private javax.swing.JTextField jtxtdscription;
    private javax.swing.JTextField jtxtentrydate;
    private javax.swing.JTextField jtxtid;
    private javax.swing.JTextField jtxtprepayacccode;
    private javax.swing.JTextField jtxtprepayaccdesc;
    // End of variables declaration//GEN-END:variables

 
    public void moveFirst() throws CodeException {
        obj.moveFirst();
        showData();
        mf.setIcon(CLASSNAME);
    }

    public void movePrevious() throws CodeException {
        obj.movePrevious();
        showData();
        mf.setIcon(CLASSNAME);
    }

    public void moveNext() throws CodeException {
        obj.moveNext();
        showData();
        mf.setIcon(CLASSNAME);
    }

    public void moveLast() throws CodeException {
        obj.moveLast();
        showData();
        mf.setIcon(CLASSNAME);
    }

    public void searchData() throws CodeException {
        obj = new Ap_accset(this.jtxtaccsetcode.getText());
        showData();
        mf.setIcon(CLASSNAME);

    }
    public void newData() throws CodeException {
        obj = new Ap_accset();
        istatus=1;
        showData();
        setToolBar(iformtype,istatus);
    }

    private void validasi() throws CodeException {
         if(!jtxtapacccode.getText().equals("")){
             Gl_account glacc = new Gl_account(jtxtapacccode.getText().replace("-", ""));
             if (glacc.getID() == Gl_account.NULLID) {
                 throw new CodeException("Payable control " + jtxtapacccode.getText() + " Tidak Diketemukan ");
             }
         } else {
             throw new CodeException("Payable control Cannot be empty");
         }

         if(!jtxtdiscacccode.getText().equals("")){
             Gl_account glacc = new Gl_account(jtxtdiscacccode.getText().replace("-", ""));
             if (glacc.getID() == Gl_account.NULLID) {
                 throw new CodeException("Purchase Discount " + jtxtdiscacccode.getText() + " Tidak Diketemukan ");
             }
         } else {
             throw new CodeException("Purchase Discount Cannot be empty");
         }

         if(!jtxtprepayacccode.getText().equals("")){
             Gl_account glacc = new Gl_account(jtxtprepayacccode.getText().replace("-", ""));
             if (glacc.getID() == Gl_account.NULLID) {
                 throw new CodeException("Prepayment " + jtxtprepayacccode.getText() + " Tidak Diketemukan ");
             }
         } else {
             throw new CodeException("Prepayment Cannot be empty");
         }

         if(!jtxtcurnccode.getText().equals("")){
             Gl_currency glcur = new Gl_currency(jtxtcurnccode.getText().replace("-", ""));
             if (glcur.getID() == Gl_currency.NULLID) {
                 throw new CodeException("Currency Code " + jtxtcurnccode.getText() + " Tidak Diketemukan ");
             }
         } else {
             throw new CodeException("Currency Code Cannot be empty");
         }
    }

    public void saveData() throws CodeException {
        validasi();

        istatus = 0;
        setData();
        obj.save();
        
        showData();
        
        mf.setIcon(CLASSNAME);
    }

    public void showData() throws CodeException {
        setCursor(GlobalUtils.HOURGLASSCURSOR);
	
             jtxtid.setText(obj.toString(Ap_accset.PROPERTY_ID));
             jtxtaccsetcode.setText(obj.toString(Ap_accset.PROPERTY_ACCSETCODE));
             jtxtdscription.setText(obj.toString(Ap_accset.PROPERTY_DSCRIPTION));
             jchkActive.setSelected(obj.getactive() == 1 ? true : false);

             jtxtapacccode.setText(obj.getapacccodefmt());
             jtxtapaccdesc.setText(obj.getAppAccDesc());

             jtxtdiscacccode.setText(obj.getdiscacccodefmt());
             jtxtdiscaccdesc.setText(obj.getDiscAccDesc());

             jtxtprepayacccode.setText(obj.getprepayacccodefmt());
             jtxtprepayaccdesc.setText(obj.getPrePayAccDesc());

             jtxtcurnccode.setText(obj.toString(Ap_accset.PROPERTY_CURNCCODE));

             jtxtentrydate.setText(obj.toString(Ap_accset.PROPERTY_ENTRYDATE));
             jtxtauditdate.setText(obj.toString(Ap_accset.PROPERTY_AUDITDATE));
             jtxtaudituser.setText(obj.toString(Ap_accset.PROPERTY_AUDITUSER));
             jtxtcmpnyid.setText(obj.toString(Ap_accset.PROPERTY_CMPNYID));
        setCursor(GlobalUtils.NORMALCURSOR);
    }

    public void delete() throws CodeException {
        obj.delete();
        obj.moveFirst();
        showData();
        mf.setIcon(CLASSNAME);
    }

    public void setToolBar(int iFormType, int istatus) {
        mf.setToolBar(iformtype,istatus);        
    }

    public void setData() throws CodeException {
        
	
          obj.fromString(Ap_accset.PROPERTY_ID, jtxtid.getText()) ;
          obj.fromString(Ap_accset.PROPERTY_ACCSETCODE, jtxtaccsetcode.getText()) ;
          obj.fromString(Ap_accset.PROPERTY_DSCRIPTION, jtxtdscription.getText()) ;
          obj.setactive(jchkActive.isSelected() ? 1 : 0 );

          obj.setapacccode(jtxtapacccode.getText());
          obj.setdiscacccode(jtxtdiscacccode.getText());
          obj.setprepayacccode(jtxtprepayacccode.getText());
          
          obj.fromString(Ap_accset.PROPERTY_CURNCCODE, jtxtcurnccode.getText()) ;
          obj.fromString(Ap_accset.PROPERTY_ENTRYDATE, jtxtentrydate.getText()) ;
          obj.fromString(Ap_accset.PROPERTY_AUDITDATE, jtxtauditdate.getText()) ;
          obj.fromString(Ap_accset.PROPERTY_AUDITUSER, jtxtaudituser.getText()) ;
          obj.fromString(Ap_accset.PROPERTY_CMPNYID, jtxtcmpnyid.getText()) ;

    }

    public void undo() throws CodeException {
        istatus = 0;
        moveFirst();
        showData();
    }

    public void execute() throws CodeException {
       saveData();
    }

    public void printData() throws CodeException {
        FrmPrintMasterAPAccountSet fprint = new FrmPrintMasterAPAccountSet();
        fprint.jtxtAccSetCode.setText(jtxtaccsetcode.getText());
        fprint.setVisible(true);
    }

    public void importCsv() throws CodeException {
            
        String file1 = "";
        String file2 = GlobalUtils.getCurrentDir() + GlobalUtils.temp + obj.TABLEPROCESS + ".csv";   
        
        JFileChooser chooser = new JFileChooser(".");
        chooser.setDialogTitle("Pilih File ");
        FileFilter filter1 = new ExtFileChooserFilter("CSV", new String[] { "CSV"});
        chooser.setFileFilter(filter1);

        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            File selectedFile = chooser.getSelectedFile();
            
            try {
                file1 = selectedFile.getCanonicalPath();
            
            }catch (Exception e) {}

            GlobalUtils.copyfile(file1, file2 );                

            obj.importCsv();
            
        }else {
          JOptionPane.showMessageDialog(null,"No Selection ");
        }

    }

    public void exportCsv() throws CodeException {
        
    
        if (obj.exportCsv()) {
            
            String file1 = GlobalUtils.getCurrentDir() + GlobalUtils.temp + obj.TABLEPROCESS + ".csv";   
            String file2 = "";
            
            JFileChooser chooser = new JFileChooser(".");
            chooser.setDialogTitle("Pilih Directory ");
    
            if (chooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
                try {
                    file2 = chooser.getSelectedFile().getCanonicalPath() + ".csv";
                        
                    JOptionPane.showMessageDialog(null, GlobalUtils.copyfile(file1, file2 ));                    
                    
                }catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());                    
                }
                
            }else {
              JOptionPane.showMessageDialog(null,"No Selection ");
            }
    
        }
        
    }

    public void importText() throws CodeException {
        String file1 = "";
        String file2 = GlobalUtils.getCurrentDir() + GlobalUtils.temp + obj.TABLEPROCESS + ".txt";   
        
        JFileChooser chooser = new JFileChooser(".");
        chooser.setDialogTitle("Pilih File ");
        FileFilter filter1 = new ExtFileChooserFilter("txt", new String[] { "txt"});
        chooser.setFileFilter(filter1);


        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            File selectedFile = chooser.getSelectedFile();
            
            try {
                file1 = selectedFile.getCanonicalPath();
            
            }catch (Exception e) {}

            GlobalUtils.copyfile(file1, file2 );                

            obj.importCsv();
            
        }else {
          JOptionPane.showMessageDialog(null,"No Selection ");
        }
    }

    public void exportText() throws CodeException {
        if (obj.exportText()) {
            
            String file1 = GlobalUtils.getCurrentDir() + GlobalUtils.temp + obj.TABLEPROCESS + ".txt";   
            String file2 = "";
            
            JFileChooser chooser = new JFileChooser(".");
            chooser.setDialogTitle("Pilih Directory ");
    
            if (chooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
                try {
                    file2 = chooser.getSelectedFile().getCanonicalPath() + ".txt";                        
                    JOptionPane.showMessageDialog(null, GlobalUtils.copyfile(file1, file2 ));                    
                    
                }catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());                    
                }
                
            }else {
              JOptionPane.showMessageDialog(null,"No Selection ");
            }
    
        } 
    }

    
}
