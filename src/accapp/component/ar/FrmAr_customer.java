/*
 * From Template
 *
 * Created on June 29, 2007, 2:00 PM
 * 
 * 
 * How to Call this Form on FrmMainFrame
 * Sample : 
 *    
 * import accapp.component.ar.FrmAr_customer;
 * 
 * .......
 * 
 * 
 * FrmAr_customer frmAr_customer;
 * 
 * .......
 * 
 try {
        if (frmAr_customer == null) {
            frmmAr_customer = new FrmAr_customer(this);
        }
        
        showForm(frmAr_customer);
        
    }catch(Exception e) {
        e.printStackTrace();
    }
 * 
 */

package accapp.component.ar;

import accapp.objectclasses.ar.Ar_accset;
import accapp.objectclasses.ar.Ar_accsets;
import accapp.objectclasses.ar.Ar_billcycl;
import accapp.objectclasses.ar.Ar_billcycls;
import accapp.objectclasses.ar.Ar_custgrp;
import accapp.objectclasses.ar.Ar_custgrps;
import accapp.objectclasses.ar.Ar_custnat;
import accapp.objectclasses.ar.Ar_custnats;
import accapp.objectclasses.op.Op_address;
import accapp.objectclasses.op.Op_addrtype;
import common.component.FrmBrowse;
import common.classinterface.NavigatorFormInt;
import common.classinterface.NavigatorObjectInt;
import common.component.FrmMainFrame;

import common.utils.CodeException;
import common.utils.GlobalUtils;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import common.utils.ExtFileChooserFilter;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;
import accapp.objectclasses.ar.Ar_customer;
import accapp.objectclasses.ar.Ar_customers;
import accapp.objectclasses.ar.Ar_customersts;
import accapp.objectclasses.ar.Ar_interest;
import accapp.objectclasses.ar.Ar_interests;
import accapp.objectclasses.op.Op_addrtypes;
import accapp.objectclasses.op.Op_paymentterm;
import accapp.objectclasses.op.Op_paymentterms;
import accapp.objectclasses.op.Op_phone;
import accapp.objectclasses.op.Op_phones;
import accapp.objectclasses.op.Op_phonetype;
import accapp.objectclasses.op.Op_phonetypes;
import accapp.objectclasses.op.Op_tax;
import accapp.objectclasses.op.Op_taxs;
import common.tablemodels.GlobalModel;
import java.awt.event.KeyEvent;
import java.util.Date;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author  Generator
 */

public class FrmAr_customer extends javax.swing.JInternalFrame implements NavigatorFormInt {

    private static int istatus = 0;
    private static int iformtype = 0;
    public static String CLASSNAME="FrmAr_customer";
    FrmMainFrame mf ;
    
    int posttableaddress = 0;

    public Ar_customer obj = new Ar_customer();
    
    Object[] dataaddress;
    DefaultTableModel tmodeladdress;


    int posttablephone = 0;
    Object[] dataphone;
    DefaultTableModel tmodelphone;

    boolean onload = false;
    private Date date = new Date();
    DefaultTableModel tmodel=null;

    /** Creates new form Area */
    public FrmAr_customer() throws CodeException {
        initComponents();
    }
    
    public FrmAr_customer(FrmMainFrame mf) throws CodeException{
        this.mf = mf;
        initComponents();

        tmodel=(DefaultTableModel) jtblStatistic.getModel();

        tmodeladdress =  (DefaultTableModel) jtblAddress.getModel();
        dataaddress = new Object[tmodeladdress.getColumnCount()];

        tmodelphone =  (DefaultTableModel) jtblPhone.getModel();
        dataphone = new Object[jtblPhone.getColumnCount()];

        setMonth();

        jtxtyop.setText((date.getYear() + 1900)+"");

    }
    private void setMonth() {

        for(int i = 0; i < 12; i++) {
            jcmbMonth.addItem((i+1));
        }

    }
       
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jHeader = new javax.swing.JLabel();
        HorizontalLine = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jtxtid = new javax.swing.JTextField();
        jlblcustmrcode = new javax.swing.JLabel();
        jtxtcustmrcode = new javax.swing.JTextField();
        jtxtcustmrname = new javax.swing.JTextField();
        jlblregdate = new javax.swing.JLabel();
        kdateregdate = new org.kazao.calendar.KazaoCalendarDate();
        jtxtentrydate = new javax.swing.JTextField();
        jtxtauditdate = new javax.swing.JTextField();
        jtxtaudituser = new javax.swing.JTextField();
        jtxtcmpnyid = new javax.swing.JTextField();
        jchkActive = new javax.swing.JCheckBox();
        jchkHold = new javax.swing.JCheckBox();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtxtnatcode = new javax.swing.JTextField();
        jbtnBrowseNat = new javax.swing.JButton();
        jtxtNatDescription = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jtxtgrpcode = new javax.swing.JTextField();
        jbtnBrowseGrpCode = new javax.swing.JButton();
        jtxtGrpDescription = new javax.swing.JTextField();
        jtbAddress = new javax.swing.JTabbedPane();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblAddress = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtxtAddress = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jtxtCity = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jtxtState = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jtxtZipCode = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtblPhone = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jtxtAddrType = new javax.swing.JTextField();
        jtxtAddrDescription = new javax.swing.JTextField();
        jpanel = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jbtnBrowseAccountSet = new javax.swing.JButton();
        jtxtAccountSetDesc = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jbtnBrowseBillingCycle = new javax.swing.JButton();
        jtxtBillingCycleDesc = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jbtnBrowseInterestProfile = new javax.swing.JButton();
        jtxtInterestProfileDesc = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jbtnBrowseTermCode = new javax.swing.JButton();
        jtxtTermDesc = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jbtnBrowseTaxGroup = new javax.swing.JButton();
        jtxtTaxGroupDesc = new javax.swing.JTextField();
        jtxttaxcode = new javax.swing.JTextField();
        jtxtaccsetcode = new javax.swing.JTextField();
        jtxtCycleCode = new javax.swing.JTextField();
        jtxtintrschrcode = new javax.swing.JTextField();
        jtxttermcode = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jtxtCreaditLimit = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jcmbMonth = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        jtxtyop = new javax.swing.JTextField();
        jbtnFind = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jtblStatistic = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jtxtinvosamt = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jtxtinvoscnt = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jtxtrNotes = new javax.swing.JTextArea();
        jLabel19 = new javax.swing.JLabel();
        jbtnBrowse = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("A/R Customer");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        jHeader.setBackground(new java.awt.Color(102, 102, 102));
        jHeader.setFont(new java.awt.Font("Dialog", 1, 10));
        jHeader.setForeground(new java.awt.Color(255, 255, 255));
        jHeader.setText(" : : Customer");
        jHeader.setAlignmentY(0.0F);
        jHeader.setOpaque(true);
        getContentPane().add(jHeader);
        jHeader.setBounds(30, 30, 130, 20);

        HorizontalLine.setForeground(new java.awt.Color(102, 102, 102));
        HorizontalLine.setAlignmentX(0.0F);
        HorizontalLine.setAlignmentY(0.0F);
        getContentPane().add(HorizontalLine);
        HorizontalLine.setBounds(160, 50, 650, 6);

        jSeparator3.setForeground(new java.awt.Color(102, 102, 102));
        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator3.setAlignmentX(0.0F);
        jSeparator3.setAlignmentY(0.0F);
        getContentPane().add(jSeparator3);
        jSeparator3.setBounds(30, 50, 6, 400);

        jtxtid.setEditable(false);
        jtxtid.setFont(new java.awt.Font("Dialog", 0, 8));
        jtxtid.setText("id");
        getContentPane().add(jtxtid);
        jtxtid.setBounds(170, 30, 80, 20);

        jlblcustmrcode.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblcustmrcode.setText("Customer Code");
        getContentPane().add(jlblcustmrcode);
        jlblcustmrcode.setBounds(60, 70, 140, 13);

        jtxtcustmrcode.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtcustmrcode.setText("custmrcode");
        jtxtcustmrcode.setNextFocusableComponent(jtxtcustmrname);
        jtxtcustmrcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtcustmrcodeKeyPressed(evt);
            }
        });
        getContentPane().add(jtxtcustmrcode);
        jtxtcustmrcode.setBounds(250, 70, 80, 23);

        jtxtcustmrname.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtcustmrname.setText("custmrname");
        jtxtcustmrname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtcustmrnameKeyPressed(evt);
            }
        });
        getContentPane().add(jtxtcustmrname);
        jtxtcustmrname.setBounds(370, 70, 320, 23);

        jlblregdate.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblregdate.setText("Registration Date");
        getContentPane().add(jlblregdate);
        jlblregdate.setBounds(60, 100, 140, 13);

        kdateregdate.setFont(new java.awt.Font("Dialog", 0, 10));
        kdateregdate.setFontDate(new java.awt.Font("Dialog", 0, 10));
        kdateregdate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                kdateregdateKeyPressed(evt);
            }
        });
        getContentPane().add(kdateregdate);
        kdateregdate.setBounds(250, 100, 94, 19);

        jtxtentrydate.setEditable(false);
        jtxtentrydate.setFont(new java.awt.Font("Dialog", 0, 8));
        jtxtentrydate.setText("entrydate");
        getContentPane().add(jtxtentrydate);
        jtxtentrydate.setBounds(260, 30, 150, 20);

        jtxtauditdate.setEditable(false);
        jtxtauditdate.setFont(new java.awt.Font("Dialog", 0, 8));
        jtxtauditdate.setText("auditdate");
        getContentPane().add(jtxtauditdate);
        jtxtauditdate.setBounds(420, 30, 150, 20);

        jtxtaudituser.setEditable(false);
        jtxtaudituser.setFont(new java.awt.Font("Dialog", 0, 8));
        jtxtaudituser.setText("audituser");
        getContentPane().add(jtxtaudituser);
        jtxtaudituser.setBounds(580, 30, 90, 20);

        jtxtcmpnyid.setEditable(false);
        jtxtcmpnyid.setFont(new java.awt.Font("Dialog", 0, 8));
        jtxtcmpnyid.setText("cmpnyid");
        getContentPane().add(jtxtcmpnyid);
        jtxtcmpnyid.setBounds(680, 30, 130, 20);

        jchkActive.setFont(new java.awt.Font("Dialog", 1, 10));
        jchkActive.setText("Active");
        jchkActive.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jchkActiveKeyPressed(evt);
            }
        });
        getContentPane().add(jchkActive);
        jchkActive.setBounds(380, 100, 120, 24);

        jchkHold.setFont(new java.awt.Font("Dialog", 1, 10));
        jchkHold.setText("Hold");
        jchkHold.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jchkHoldKeyPressed(evt);
            }
        });
        getContentPane().add(jchkHold);
        jchkHold.setBounds(520, 100, 130, 24);

        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);
        jTabbedPane1.setFont(new java.awt.Font("Dialog", 0, 10));

        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 10));
        jLabel1.setText("National Account");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(20, 10, 140, 13);

        jtxtnatcode.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtnatcode.setText("natcode");
        jtxtnatcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtnatcodeKeyPressed(evt);
            }
        });
        jPanel1.add(jtxtnatcode);
        jtxtnatcode.setBounds(180, 10, 80, 23);

        jbtnBrowseNat.setFont(new java.awt.Font("Dialog", 0, 10));
        jbtnBrowseNat.setText("...");
        jbtnBrowseNat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowseNatActionPerformed(evt);
            }
        });
        jPanel1.add(jbtnBrowseNat);
        jbtnBrowseNat.setBounds(260, 10, 30, 17);

        jtxtNatDescription.setEditable(false);
        jtxtNatDescription.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtNatDescription.setText("NatDescription");
        jPanel1.add(jtxtNatDescription);
        jtxtNatDescription.setBounds(300, 10, 290, 23);

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 10));
        jLabel2.setText("Group Code");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(20, 40, 140, 13);

        jtxtgrpcode.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtgrpcode.setText("grpcode");
        jtxtgrpcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtgrpcodeKeyPressed(evt);
            }
        });
        jPanel1.add(jtxtgrpcode);
        jtxtgrpcode.setBounds(180, 40, 80, 23);

        jbtnBrowseGrpCode.setFont(new java.awt.Font("Dialog", 0, 10));
        jbtnBrowseGrpCode.setText("...");
        jbtnBrowseGrpCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowseGrpCodeActionPerformed(evt);
            }
        });
        jPanel1.add(jbtnBrowseGrpCode);
        jbtnBrowseGrpCode.setBounds(260, 40, 30, 17);

        jtxtGrpDescription.setEditable(false);
        jtxtGrpDescription.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtGrpDescription.setText("GroupDescription");
        jPanel1.add(jtxtGrpDescription);
        jtxtGrpDescription.setBounds(300, 40, 290, 23);

        jtbAddress.setFont(new java.awt.Font("Dialog", 0, 10));
        jtbAddress.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jtbAddressStateChanged(evt);
            }
        });

        jPanel8.setLayout(null);

        jtblAddress.setFont(new java.awt.Font("Dialog", 0, 10));
        jtblAddress.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Addr Code", "Addr Type", "Description", "Address", "City", "State", "Zip Code"
            }
        ));
        jtblAddress.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jtblAddress.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jtblAddressPropertyChange(evt);
            }
        });
        jtblAddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtblAddressKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jtblAddress);
        jtblAddress.getColumnModel().getColumn(0).setMinWidth(0);
        jtblAddress.getColumnModel().getColumn(0).setPreferredWidth(0);
        jtblAddress.getColumnModel().getColumn(0).setMaxWidth(0);
        jtblAddress.getColumnModel().getColumn(1).setMinWidth(100);
        jtblAddress.getColumnModel().getColumn(1).setPreferredWidth(100);
        jtblAddress.getColumnModel().getColumn(1).setMaxWidth(100);
        jtblAddress.getColumnModel().getColumn(2).setMinWidth(100);
        jtblAddress.getColumnModel().getColumn(2).setPreferredWidth(100);
        jtblAddress.getColumnModel().getColumn(2).setMaxWidth(100);
        jtblAddress.getColumnModel().getColumn(3).setPreferredWidth(120);
        jtblAddress.getColumnModel().getColumn(4).setPreferredWidth(400);

        jPanel8.add(jScrollPane1);
        jScrollPane1.setBounds(0, 0, 820, 220);

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 10));
        jLabel8.setText("F5 -> Browse Add type, {tbl Insert} -> Tambah Baris, {tbl Delete} -> Delete Baris");
        jPanel8.add(jLabel8);
        jLabel8.setBounds(0, 220, 710, 13);

        jtbAddress.addTab("Address", jPanel8);

        jPanel9.setLayout(null);

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 10));
        jLabel3.setText("Address");
        jPanel9.add(jLabel3);
        jLabel3.setBounds(10, 30, 100, 13);

        jtxtAddress.setColumns(20);
        jtxtAddress.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtAddress.setRows(5);
        jtxtAddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtxtAddressKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(jtxtAddress);

        jPanel9.add(jScrollPane2);
        jScrollPane2.setBounds(10, 50, 440, 70);

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 10));
        jLabel4.setText("City");
        jPanel9.add(jLabel4);
        jLabel4.setBounds(10, 130, 60, 13);

        jtxtCity.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtCityActionPerformed(evt);
            }
        });
        jtxtCity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtxtCityKeyReleased(evt);
            }
        });
        jPanel9.add(jtxtCity);
        jtxtCity.setBounds(100, 130, 350, 23);

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 10));
        jLabel5.setText("State");
        jPanel9.add(jLabel5);
        jLabel5.setBounds(10, 160, 60, 13);

        jtxtState.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtState.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtxtStateKeyReleased(evt);
            }
        });
        jPanel9.add(jtxtState);
        jtxtState.setBounds(100, 160, 350, 23);

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 10));
        jLabel6.setText("Zip Code");
        jPanel9.add(jLabel6);
        jLabel6.setBounds(10, 190, 70, 13);

        jtxtZipCode.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtZipCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtxtZipCodeKeyReleased(evt);
            }
        });
        jPanel9.add(jtxtZipCode);
        jtxtZipCode.setBounds(100, 190, 350, 23);

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 10));
        jLabel7.setText("Phone");
        jPanel9.add(jLabel7);
        jLabel7.setBounds(470, 20, 90, 13);

        jtblPhone.setFont(new java.awt.Font("Dialog", 0, 10));
        jtblPhone.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Type Code", "Description", "Phone"
            }
        ));
        jtblPhone.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jtblPhonePropertyChange(evt);
            }
        });
        jtblPhone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtblPhoneKeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(jtblPhone);
        jtblPhone.getColumnModel().getColumn(0).setMinWidth(0);
        jtblPhone.getColumnModel().getColumn(0).setPreferredWidth(0);
        jtblPhone.getColumnModel().getColumn(0).setMaxWidth(0);

        jPanel9.add(jScrollPane3);
        jScrollPane3.setBounds(470, 40, 350, 170);

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 10));
        jLabel9.setText("F5 -> Browse Account,  {tbl Insert} -> Tambah Baris ,  {tbl Delete} -> Delete Baris");
        jPanel9.add(jLabel9);
        jLabel9.setBounds(420, 220, 400, 20);

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 10));
        jLabel10.setText("Address Type");
        jPanel9.add(jLabel10);
        jLabel10.setBounds(10, 10, 100, 13);

        jtxtAddrType.setEditable(false);
        jtxtAddrType.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtAddrType.setText("addrType");
        jPanel9.add(jtxtAddrType);
        jtxtAddrType.setBounds(110, 10, 80, 23);

        jtxtAddrDescription.setEditable(false);
        jtxtAddrDescription.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtAddrDescription.setText("addrDescription");
        jPanel9.add(jtxtAddrDescription);
        jtxtAddrDescription.setBounds(200, 10, 250, 23);

        jtbAddress.addTab("Detail", jPanel9);

        jPanel1.add(jtbAddress);
        jtbAddress.setBounds(20, 70, 830, 270);

        jTabbedPane1.addTab("Address", jPanel1);

        jpanel.setLayout(null);

        jLabel13.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(247, 8, 8));
        jLabel13.setText("Account Set *");
        jpanel.add(jLabel13);
        jLabel13.setBounds(30, 40, 100, 13);

        jbtnBrowseAccountSet.setFont(new java.awt.Font("Dialog", 0, 10));
        jbtnBrowseAccountSet.setText("...");
        jbtnBrowseAccountSet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowseAccountSetActionPerformed(evt);
            }
        });
        jpanel.add(jbtnBrowseAccountSet);
        jbtnBrowseAccountSet.setBounds(310, 40, 30, 17);

        jtxtAccountSetDesc.setEditable(false);
        jtxtAccountSetDesc.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtAccountSetDesc.setText("jtxtAccountSetDesc");
        jpanel.add(jtxtAccountSetDesc);
        jtxtAccountSetDesc.setBounds(350, 40, 360, 23);

        jLabel14.setFont(new java.awt.Font("Dialog", 1, 10));
        jLabel14.setForeground(new java.awt.Color(247, 8, 8));
        jLabel14.setText("Billing Cycle*");
        jpanel.add(jLabel14);
        jLabel14.setBounds(30, 80, 100, 13);

        jbtnBrowseBillingCycle.setFont(new java.awt.Font("Dialog", 0, 10));
        jbtnBrowseBillingCycle.setText("...");
        jbtnBrowseBillingCycle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowseBillingCycleActionPerformed(evt);
            }
        });
        jpanel.add(jbtnBrowseBillingCycle);
        jbtnBrowseBillingCycle.setBounds(310, 80, 30, 17);

        jtxtBillingCycleDesc.setEditable(false);
        jtxtBillingCycleDesc.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtBillingCycleDesc.setText("jtxtBillingCycleDesc");
        jpanel.add(jtxtBillingCycleDesc);
        jtxtBillingCycleDesc.setBounds(350, 80, 360, 23);

        jLabel15.setFont(new java.awt.Font("Dialog", 1, 10));
        jLabel15.setForeground(new java.awt.Color(247, 8, 8));
        jLabel15.setText("Interest Profile*");
        jpanel.add(jLabel15);
        jLabel15.setBounds(30, 120, 100, 13);

        jbtnBrowseInterestProfile.setFont(new java.awt.Font("Dialog", 0, 10));
        jbtnBrowseInterestProfile.setText("...");
        jbtnBrowseInterestProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowseInterestProfileActionPerformed(evt);
            }
        });
        jpanel.add(jbtnBrowseInterestProfile);
        jbtnBrowseInterestProfile.setBounds(310, 120, 30, 17);

        jtxtInterestProfileDesc.setEditable(false);
        jtxtInterestProfileDesc.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtInterestProfileDesc.setText("jtxtInterestProfileDesc");
        jpanel.add(jtxtInterestProfileDesc);
        jtxtInterestProfileDesc.setBounds(350, 120, 360, 23);

        jLabel16.setFont(new java.awt.Font("Dialog", 1, 10));
        jLabel16.setForeground(new java.awt.Color(247, 8, 8));
        jLabel16.setText("Term Code*");
        jpanel.add(jLabel16);
        jLabel16.setBounds(30, 160, 100, 13);

        jbtnBrowseTermCode.setFont(new java.awt.Font("Dialog", 0, 10));
        jbtnBrowseTermCode.setText("...");
        jbtnBrowseTermCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowseTermCodeActionPerformed(evt);
            }
        });
        jpanel.add(jbtnBrowseTermCode);
        jbtnBrowseTermCode.setBounds(310, 160, 30, 17);

        jtxtTermDesc.setEditable(false);
        jtxtTermDesc.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtTermDesc.setText("jtxtTermCodeDesc");
        jpanel.add(jtxtTermDesc);
        jtxtTermDesc.setBounds(350, 160, 360, 23);

        jLabel17.setFont(new java.awt.Font("Dialog", 1, 10));
        jLabel17.setForeground(new java.awt.Color(247, 8, 8));
        jLabel17.setText("Tax Group*");
        jpanel.add(jLabel17);
        jLabel17.setBounds(30, 200, 100, 13);

        jbtnBrowseTaxGroup.setFont(new java.awt.Font("Dialog", 0, 10));
        jbtnBrowseTaxGroup.setText("...");
        jbtnBrowseTaxGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowseTaxGroupActionPerformed(evt);
            }
        });
        jpanel.add(jbtnBrowseTaxGroup);
        jbtnBrowseTaxGroup.setBounds(310, 200, 30, 17);

        jtxtTaxGroupDesc.setEditable(false);
        jtxtTaxGroupDesc.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtTaxGroupDesc.setText("jtxtTaxGroupDesc");
        jpanel.add(jtxtTaxGroupDesc);
        jtxtTaxGroupDesc.setBounds(350, 200, 360, 23);

        jtxttaxcode.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxttaxcode.setText("jtxttaxcode");
        jpanel.add(jtxttaxcode);
        jtxttaxcode.setBounds(180, 200, 120, 23);

        jtxtaccsetcode.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtaccsetcode.setText("jtxtaccsetcode");
        jtxtaccsetcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtaccsetcodeKeyPressed(evt);
            }
        });
        jpanel.add(jtxtaccsetcode);
        jtxtaccsetcode.setBounds(180, 40, 120, 23);

        jtxtCycleCode.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtCycleCode.setText("jtxtCyclCode");
        jtxtCycleCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtCycleCodeKeyPressed(evt);
            }
        });
        jpanel.add(jtxtCycleCode);
        jtxtCycleCode.setBounds(180, 80, 120, 23);

        jtxtintrschrcode.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtintrschrcode.setText("jtxtintrschrcode");
        jtxtintrschrcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtintrschrcodeKeyPressed(evt);
            }
        });
        jpanel.add(jtxtintrschrcode);
        jtxtintrschrcode.setBounds(180, 120, 120, 23);

        jtxttermcode.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxttermcode.setText("jtxttermcode");
        jtxttermcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxttermcodeKeyPressed(evt);
            }
        });
        jpanel.add(jtxttermcode);
        jtxttermcode.setBounds(180, 160, 120, 23);

        jTabbedPane1.addTab("Billing", jpanel);

        jPanel3.setLayout(null);

        jLabel18.setFont(new java.awt.Font("Dialog", 1, 10));
        jLabel18.setText("Credit Limit ");
        jPanel3.add(jLabel18);
        jLabel18.setBounds(40, 40, 110, 13);

        jtxtCreaditLimit.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtCreaditLimit.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtxtCreaditLimit.setText("jtxtCreditLimit");
        jPanel3.add(jtxtCreaditLimit);
        jtxtCreaditLimit.setBounds(160, 40, 150, 23);

        jTabbedPane1.addTab("Credit", jPanel3);

        jPanel5.setLayout(null);

        jLabel11.setFont(new java.awt.Font("Dialog", 1, 10));
        jLabel11.setText("Month");
        jPanel5.add(jLabel11);
        jLabel11.setBounds(20, 10, 80, 13);

        jcmbMonth.setFont(new java.awt.Font("Dialog", 0, 10));
        jPanel5.add(jcmbMonth);
        jcmbMonth.setBounds(100, 10, 50, 20);

        jLabel12.setFont(new java.awt.Font("Dialog", 1, 10));
        jLabel12.setText("Year");
        jPanel5.add(jLabel12);
        jLabel12.setBounds(160, 10, 70, 13);

        jtxtyop.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtyop.setText("yop");
        jPanel5.add(jtxtyop);
        jtxtyop.setBounds(230, 10, 70, 23);

        jbtnFind.setFont(new java.awt.Font("Dialog", 0, 10));
        jbtnFind.setText("Find");
        jbtnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnFindActionPerformed(evt);
            }
        });
        jPanel5.add(jbtnFind);
        jbtnFind.setBounds(310, 10, 32, 20);

        jtblStatistic.setFont(new java.awt.Font("Dialog", 0, 10));
        jtblStatistic.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Invoices", null, null},
                {"Reciepts", null, null},
                {"Discounts", null, null},
                {"Credit Notes", null, null},
                {"Debit Notes", null, null},
                {"Adjustments", null, null},
                {"Write Offs", null, null},
                {"Interest Charges", null, null},
                {"Return Checks", null, null},
                {"Total Invoices Paid", null, null}
            },
            new String [] {
                "Transaction Type", "Amount", "Count"
            }
        ));
        jScrollPane4.setViewportView(jtblStatistic);
        jtblStatistic.getColumnModel().getColumn(0).setPreferredWidth(200);

        jPanel5.add(jScrollPane4);
        jScrollPane4.setBounds(20, 50, 830, 300);

        jTabbedPane1.addTab("Statistics", jPanel5);

        jPanel6.setLayout(null);

        jLabel20.setFont(new java.awt.Font("Dialog", 1, 10));
        jLabel20.setText("Outstanding Balance");
        jPanel6.add(jLabel20);
        jLabel20.setBounds(30, 20, 190, 13);

        jtxtinvosamt.setEditable(false);
        jtxtinvosamt.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtinvosamt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtxtinvosamt.setText("jtxtinvosamt");
        jPanel6.add(jtxtinvosamt);
        jtxtinvosamt.setBounds(230, 20, 150, 23);

        jLabel21.setFont(new java.awt.Font("Dialog", 1, 10));
        jLabel21.setText("No. of Open Invoice");
        jPanel6.add(jLabel21);
        jLabel21.setBounds(30, 50, 170, 13);

        jtxtinvoscnt.setEditable(false);
        jtxtinvoscnt.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtinvoscnt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtxtinvoscnt.setText("jtxtinvoscnt");
        jPanel6.add(jtxtinvoscnt);
        jtxtinvoscnt.setBounds(230, 50, 150, 23);

        jTabbedPane1.addTab("Activity", jPanel6);

        jPanel7.setLayout(null);

        jtxtrNotes.setColumns(20);
        jtxtrNotes.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtrNotes.setRows(5);
        jScrollPane5.setViewportView(jtxtrNotes);

        jPanel7.add(jScrollPane5);
        jScrollPane5.setBounds(40, 50, 630, 160);

        jLabel19.setFont(new java.awt.Font("Dialog", 1, 10));
        jLabel19.setText("Comment ");
        jPanel7.add(jLabel19);
        jLabel19.setBounds(40, 20, 120, 13);

        jTabbedPane1.addTab("Comment", jPanel7);

        getContentPane().add(jTabbedPane1);
        jTabbedPane1.setBounds(60, 130, 870, 390);

        jbtnBrowse.setFont(new java.awt.Font("Dialog", 0, 10));
        jbtnBrowse.setText("...");
        jbtnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowseActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnBrowse);
        jbtnBrowse.setBounds(330, 70, 30, 17);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
         try {
            moveLast();

         } catch (CodeException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_formInternalFrameOpened

private void kdatePurchaseDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kdatePurchaseDateFocusLost

}//GEN-LAST:event_kdatePurchaseDateFocusLost

private void kdatePurchaseDateCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_kdatePurchaseDateCaretPositionChanged

}//GEN-LAST:event_kdatePurchaseDateCaretPositionChanged

private void kdatePurchaseDatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_kdatePurchaseDatePropertyChange

}//GEN-LAST:event_kdatePurchaseDatePropertyChange

private void jbtnBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBrowseActionPerformed
    try {
	      Ar_customers brs = new Ar_customers();
	      FrmBrowse bd = new FrmBrowse(this, brs);
	      bd.setFirstValue(jtxtcustmrcode);
	      bd.setModal(true);
	      bd.setVisible(true);

	  } catch (CodeException ex) {
	      ex.printStackTrace();
	  }
}//GEN-LAST:event_jbtnBrowseActionPerformed

private void jbtnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnFindActionPerformed
    findStatistic();
}//GEN-LAST:event_jbtnFindActionPerformed

private void jbtnBrowseTaxGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBrowseTaxGroupActionPerformed
    try {
        Op_taxs brs = new Op_taxs();
        FrmBrowse bd = new FrmBrowse(brs);
        bd.setFirstValue(jtxttaxcode);
        bd.setSecondValue(jtxtTaxGroupDesc);
        bd.setModal(true);
        bd.setVisible(true);

    } catch (CodeException ex) {
        ex.printStackTrace();
    }
}//GEN-LAST:event_jbtnBrowseTaxGroupActionPerformed

private void jbtnBrowseTermCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBrowseTermCodeActionPerformed
    try {
        Op_paymentterms brs = new Op_paymentterms();
        FrmBrowse bd = new FrmBrowse(brs);
        bd.setFirstValue(jtxttermcode);
        bd.setSecondValue(jtxtTermDesc);
        bd.setModal(true);
        bd.setVisible(true);

    } catch (CodeException ex) {
        ex.printStackTrace();
    }
}//GEN-LAST:event_jbtnBrowseTermCodeActionPerformed

private void jbtnBrowseInterestProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBrowseInterestProfileActionPerformed
    try {
        Ar_interests brs = new Ar_interests();
        FrmBrowse bd = new FrmBrowse(brs);
        bd.setFirstValue(jtxtintrschrcode);
        bd.setSecondValue(jtxtInterestProfileDesc);
        bd.setModal(true);
        bd.setVisible(true);

    } catch (CodeException ex) {
        ex.printStackTrace();
    }
}//GEN-LAST:event_jbtnBrowseInterestProfileActionPerformed

private void jbtnBrowseBillingCycleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBrowseBillingCycleActionPerformed

    try {
        Ar_billcycls brs = new Ar_billcycls();
        FrmBrowse bd = new FrmBrowse(brs);
        bd.setFirstValue(jtxtCycleCode);
        bd.setSecondValue(jtxtBillingCycleDesc);
        bd.setModal(true);
        bd.setVisible(true);

    } catch (CodeException ex) {
        ex.printStackTrace();
    }
}//GEN-LAST:event_jbtnBrowseBillingCycleActionPerformed

private void jbtnBrowseAccountSetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBrowseAccountSetActionPerformed
    try {
        Ar_accsets brs = new Ar_accsets();
        FrmBrowse bd = new FrmBrowse( brs);
        bd.setFirstValue(jtxtaccsetcode);
        bd.setSecondValue(jtxtAccountSetDesc);
        bd.setModal(true);
        bd.setVisible(true);

    } catch (CodeException ex) {
        ex.printStackTrace();
    }
}//GEN-LAST:event_jbtnBrowseAccountSetActionPerformed

private void jtbAddressStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jtbAddressStateChanged

    int row = jtblAddress.getSelectedRow();
    int col = jtblAddress.getSelectedColumn();

    if (row > -1 ) {

        try {
            Op_address address = (Op_address) obj.getOp_Addresss().list().get(row);

            jtxtAddrType.setText(address.getaddrtypecode());
            jtxtAddrDescription.setText(address.getOP_AddrTypeDescription());
            jtxtAddress.setText(address.getaddress());
            jtxtCity.setText(address.getcity());
            jtxtState.setText(address.getstate());
            jtxtZipCode.setText(address.getzipcode());

            showPhones();

        }catch(Exception e) {
            e.printStackTrace();
        }



    }
}//GEN-LAST:event_jtbAddressStateChanged

private void jtblPhoneKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtblPhoneKeyPressed
    int rowaddress = jtblAddress.getSelectedRow();
    int coladdress = jtblAddress.getSelectedColumn();

    int row = jtblPhone.getSelectedRow();
    int col = jtblPhone.getSelectedColumn();

    if (evt.getKeyCode() == KeyEvent.VK_F5 ){
        try {

            Op_phonetypes brs = new Op_phonetypes(0);

            FrmBrowse bd = new FrmBrowse(tmodelphone, brs, row, 1);
            bd.retrieveData();
            bd.setModal(true);
            bd.setVisible(true);

            Op_phonetype opphone = new Op_phonetype(tmodelphone.getValueAt(row, 1)+"");
            tmodelphone.setValueAt(opphone.getdscription(), row, 2);


        } catch (CodeException ex) {
            ex.printStackTrace();
        }

    }

    if (evt.getKeyCode() == KeyEvent.VK_INSERT) {
        tmodelphone.addRow(dataphone);
        tmodelphone.setValueAt("0", tmodelphone.getRowCount() - 1, 0);
        GlobalUtils.selectCellTable(jtblPhone, tmodelphone.getRowCount() - 1, 1);
    }

    if (evt.getKeyCode() == KeyEvent.VK_DELETE) {

        int iquestion = JOptionPane.showConfirmDialog(null, "Anda Ingin Menghapus Phone Baris Ke " + (row+1), "Hapus ", JOptionPane.YES_NO_OPTION);
        if ( iquestion == JOptionPane.YES_OPTION) {

            try{

                Op_address address = (Op_address) obj.getOp_Addresss().list().get(rowaddress);

                address.removeOp_Phone(row);

            }catch(Exception e){e.printStackTrace();}

            tmodelphone.removeRow(row);

            if (row+1 < tmodelphone.getRowCount()) {
                GlobalUtils.selectCellTable(jtblPhone, row, 1);
            }else{
                GlobalUtils.selectCellTable(jtblPhone, tmodelphone.getRowCount()-1, 1);
            }

        }
    }

}//GEN-LAST:event_jtblPhoneKeyPressed

private void jtblPhonePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jtblPhonePropertyChange

    int row = jtblPhone.getSelectedRow();
    int col = jtblPhone.getSelectedColumn();

    if (row > -1) {

        if (col == 1) {

            try{
                Op_phonetype opphone = new Op_phonetype(tmodelphone.getValueAt(row, 1)+"");
                tmodelphone.setValueAt(opphone.getdscription(), row, 2);
            }catch(Exception e) {}

        }

        try{
            cekOpPhone();

        }catch(Exception e) {}

    }
}//GEN-LAST:event_jtblPhonePropertyChange

private void jtxtZipCodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtZipCodeKeyReleased
    int row = jtblAddress.getSelectedRow();

    if (row > -1 ) {
        tmodeladdress.setValueAt(jtxtZipCode.getText(), row, 7);
        try {
            cekOpAddress();
        }catch(Exception e) {}

    }

}//GEN-LAST:event_jtxtZipCodeKeyReleased

private void jtxtStateKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtStateKeyReleased
    int row = jtblAddress.getSelectedRow();

    if (row > -1 ) {
        tmodeladdress.setValueAt(jtxtState.getText(), row, 6);
        try {
            cekOpAddress();
        }catch(Exception e) {}

    }
}//GEN-LAST:event_jtxtStateKeyReleased

private void jtxtCityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtCityKeyReleased
    int row = jtblAddress.getSelectedRow();

    if (row > -1 ) {
        tmodeladdress.setValueAt(jtxtCity.getText(), row, 5);
        try {
            cekOpAddress();
        }catch(Exception e) {}

    }

}//GEN-LAST:event_jtxtCityKeyReleased

private void jtxtCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtCityActionPerformed
    // TODO add your handling code here:
}//GEN-LAST:event_jtxtCityActionPerformed

private void jtxtAddressKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtAddressKeyReleased
    int row = jtblAddress.getSelectedRow();

    if (row > -1 ) {
        tmodeladdress.setValueAt(jtxtAddress.getText(), row, 4);
        try {
            cekOpAddress();
        }catch(Exception e) {}
    }

}//GEN-LAST:event_jtxtAddressKeyReleased

private void jtblAddressKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtblAddressKeyPressed

    int row = jtblAddress.getSelectedRow();
    int col = jtblAddress.getSelectedColumn();


    if (evt.getKeyCode() == KeyEvent.VK_F5 ){
        try {

            Op_addrtypes brs = new Op_addrtypes(0);
            FrmBrowse bd = new FrmBrowse(tmodeladdress, brs, row, 2);
            bd.retrieveData();
            bd.setModal(true);
            bd.setVisible(true);

            Op_addrtype opadd = new Op_addrtype(tmodeladdress.getValueAt(row, 2)+"");
            tmodeladdress.setValueAt(opadd.getdscription(), row, 3);


        } catch (CodeException ex) {
            ex.printStackTrace();
        }

    }

    if (evt.getKeyCode() == KeyEvent.VK_INSERT) {
        tmodeladdress.addRow(dataaddress);
        tmodeladdress.setValueAt("0", tmodeladdress.getRowCount() - 1, 0);
        GlobalUtils.selectCellTable(jtblAddress, tmodeladdress.getRowCount() - 1, 1);
    }

    if (evt.getKeyCode() == KeyEvent.VK_DELETE) {

        int iquestion = JOptionPane.showConfirmDialog(null, "Anda Ingin Menghapus Baris Ke " + (row+1), "Hapus ", JOptionPane.YES_NO_OPTION);
        if ( iquestion == JOptionPane.YES_OPTION) {

            try{
                obj.removeOp_Address(row);
            }catch(Exception e){e.printStackTrace();}

            tmodeladdress.removeRow(row);

            if (row+1 < tmodeladdress.getRowCount()) {
                GlobalUtils.selectCellTable(jtblAddress, row, 1);
            }else{
                GlobalUtils.selectCellTable(jtblAddress, tmodeladdress.getRowCount()-1, 1);
            }

        }
    }
}//GEN-LAST:event_jtblAddressKeyPressed

private void jtblAddressPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jtblAddressPropertyChange
    int row = jtblAddress.getSelectedRow();
    int col = jtblAddress.getSelectedColumn();

    if (row > -1) {

        if (col == 2) {

            try{
                Op_addrtype opadd = new Op_addrtype(tmodeladdress.getValueAt(row, 2)+"");


                tmodeladdress.setValueAt(opadd.getdscription(), row, 3);
            }catch(Exception e) {}

        }



        try{
            cekOpAddress();

        }catch(Exception e) {}

    }
}//GEN-LAST:event_jtblAddressPropertyChange

private void jbtnBrowseGrpCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBrowseGrpCodeActionPerformed

    try {
        Ar_custgrps brs = new Ar_custgrps();
        FrmBrowse bd = new FrmBrowse(brs);
        bd.setFirstValue(jtxtgrpcode);
        bd.setSecondValue(jtxtGrpDescription);
        bd.setModal(true);
        bd.setVisible(true);

    } catch (CodeException ex) {
        ex.printStackTrace();
    }
}//GEN-LAST:event_jbtnBrowseGrpCodeActionPerformed

private void jbtnBrowseNatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBrowseNatActionPerformed

    try {
        Ar_custnats brs = new Ar_custnats();
        FrmBrowse bd = new FrmBrowse(brs);
        bd.setFirstValue(jtxtnatcode);
        bd.setSecondValue(jtxtNatDescription);
        bd.setModal(true);
        bd.setVisible(true);
        findCustNat();

    } catch (CodeException ex) {
        ex.printStackTrace();
    }
}//GEN-LAST:event_jbtnBrowseNatActionPerformed




private void jtxtcustmrcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtcustmrcodeKeyPressed
    if(evt.getKeyCode() == KeyEvent.VK_ENTER){
        jtxtcustmrname.requestFocus();
    }
}//GEN-LAST:event_jtxtcustmrcodeKeyPressed

private void jtxtnatcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtnatcodeKeyPressed
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        try {
            findCustNat();
        }catch(Exception e) {}

        jtxtgrpcode.requestFocus();
        
    }
}//GEN-LAST:event_jtxtnatcodeKeyPressed

private void jtxtgrpcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtgrpcodeKeyPressed
    
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        try {
            findGroup();
        }catch(Exception e) {}

    }
}//GEN-LAST:event_jtxtgrpcodeKeyPressed

private void jtxtcustmrnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtcustmrnameKeyPressed

    if(evt.getKeyCode() == KeyEvent.VK_ENTER){

        kdateregdate.requestFocus();
    }
}//GEN-LAST:event_jtxtcustmrnameKeyPressed

private void kdateregdateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_kdateregdateKeyPressed

    if(evt.getKeyCode() == KeyEvent.VK_ENTER){
        jchkActive.requestFocus();
    }
}//GEN-LAST:event_kdateregdateKeyPressed

private void jchkActiveKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jchkActiveKeyPressed

    if(evt.getKeyCode() == KeyEvent.VK_ENTER){
        jchkHold.requestFocus();
    }
}//GEN-LAST:event_jchkActiveKeyPressed

private void jchkHoldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jchkHoldKeyPressed

    if(evt.getKeyCode() == KeyEvent.VK_ENTER){
        jtxtnatcode.requestFocus();
    }
    
}//GEN-LAST:event_jchkHoldKeyPressed

private void jtxtaccsetcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtaccsetcodeKeyPressed


    if (evt.getKeyCode() == KeyEvent.VK_ENTER){
        try{
            obj.setaccsetcode(jtxtaccsetcode.getText());
            jtxtAccountSetDesc.setText(obj.getAccountSetDescription());
        }catch(Exception e){}

        jtxtCycleCode.requestFocus();
    }
}//GEN-LAST:event_jtxtaccsetcodeKeyPressed

private void jtxtCycleCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtCycleCodeKeyPressed

    if (evt.getKeyCode() == KeyEvent.VK_ENTER){
        try{
            obj.setcyclcode(jtxtCycleCode.getText());
            jtxtBillingCycleDesc.setText(obj.getCycleDescription());
        }catch(Exception e){}
        jtxtintrschrcode.requestFocus();
    }

}//GEN-LAST:event_jtxtCycleCodeKeyPressed

private void jtxtintrschrcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtintrschrcodeKeyPressed

    if(evt.getKeyCode() == KeyEvent.VK_ENTER){
        try{
            obj.setintrschrcode(jtxtintrschrcode.getText());
            jtxtInterestProfileDesc.setText(obj.getInterestProfileDescription());
        }catch(Exception e){}
        jtxttermcode.requestFocus();
    }
    
}//GEN-LAST:event_jtxtintrschrcodeKeyPressed

private void jtxttermcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxttermcodeKeyPressed

    if(evt.getKeyCode() == KeyEvent.VK_ENTER){
        try{
            obj.settermcode(jtxttermcode.getText());
            jtxtTermDesc.setText(obj.getTermDescription());
        }catch(Exception e){}

        jtxttaxcode.requestFocus();
    }

}//GEN-LAST:event_jtxttermcodeKeyPressed


private void findGroup() throws CodeException {
    Ar_custgrp custgrp = new Ar_custgrp(jtxtgrpcode.getText());
    if (custgrp.getID() != Ar_custgrp.NULLID) {
        jtxtaccsetcode.setText(custgrp.getaccsetcode());
        jtxtAccountSetDesc.setText(custgrp.getAR_accsetDesc());

        jtxtCycleCode.setText(custgrp.getcyclcode());
        jtxtBillingCycleDesc.setText(custgrp.getAR_billcyclsDesc());


        jtxtintrschrcode.setText(custgrp.getintrschrcode());
        jtxtInterestProfileDesc.setText(custgrp.getAR_intrschrDesc());


        jtxttermcode.setText(custgrp.gettermcode());
        jtxtTermDesc.setText(custgrp.getOp_PaymentTermDesc());

    }

}
private void findCustNat() throws CodeException {

    Ar_custnat arc = new Ar_custnat(Ar_custnat.PROPERTY_NATCODE, jtxtnatcode.getText());
    if (arc.getID() != Ar_custnat.NULLID) {
        jtxtaccsetcode.setText(arc.getaccsetcode());
        jtxtAccountSetDesc.setText(arc.getAccSetDesc());

        jtxtCycleCode.setText(arc.getcyclcode());
        jtxtBillingCycleDesc.setText(arc.getBillCycleDesc());


        jtxtintrschrcode.setText(arc.getintrschrcode());
        jtxtInterestProfileDesc.setText(arc.getInterestDesc());
        
    }

}


private void findStatistic() {
     setCursor(GlobalUtils.HOURGLASSCURSOR);

    try{

        Ar_customersts arc = new Ar_customersts();
        arc.searchData(jtxtyop.getText(), jcmbMonth.getSelectedItem()+"", jtxtgrpcode.getText());


        tmodel.setValueAt(arc.getinvamt(), 0, 1);
        tmodel.setValueAt(arc.getinvcnt(), 0, 2);

        tmodel.setValueAt(arc.getpayamt(), 1, 1);
        tmodel.setValueAt(arc.getpaycnt(), 1, 2);

        tmodel.setValueAt(arc.getdiscamt(), 2, 1);
        tmodel.setValueAt(arc.getdisccnt(), 2, 2);

        tmodel.setValueAt(arc.getcnamt(), 3, 1);
        tmodel.setValueAt(arc.getcncnt(), 3, 2);

        tmodel.setValueAt(arc.getdnamt(), 4, 1);
        tmodel.setValueAt(arc.getdncnt(), 4, 2);

        tmodel.setValueAt(arc.getadjamt(), 5, 1);
        tmodel.setValueAt(arc.getadjcnt(), 5, 2);

        tmodel.setValueAt(arc.getwroffamt(), 6, 1);
        tmodel.setValueAt(arc.getwroffcnt(), 6, 2);

        tmodel.setValueAt(arc.getinttamt(), 7, 1);
        tmodel.setValueAt(arc.getinttcnt(), 7, 2);

        tmodel.setValueAt(arc.getrtrchckamt(), 8, 1);
        tmodel.setValueAt(arc.getrtrchckcnt(), 8, 2);

        tmodel.setValueAt(arc.getinvpaidamt(), 9, 1);
        tmodel.setValueAt(arc.getinvpaidcnt(), 9, 2);


    }catch(Exception e) {}
    setCursor(GlobalUtils.NORMALCURSOR);

}

private void cekOpPhone() throws CodeException {
    int rowaddress = jtblAddress.getSelectedRow();
    int coladdress = jtblAddress.getSelectedColumn();

    int row = jtblPhone.getSelectedRow();
    int col = jtblPhone.getSelectedColumn();


    Op_address address = (Op_address) obj.getOp_Addresss().list().get(rowaddress);
    Op_phone opphone;

    if (row > address.getOP_Phones().size() - 1) {
        opphone = new Op_phone();
        address.getOP_Phones().add(opphone);
    }else{
        opphone = (Op_phone) address.getOP_Phones().list().get(row);
    }

    long idopphone = 0 ;
    try{
        idopphone = Long.parseLong(tmodelphone.getValueAt(row, 0)+"");
    }catch (Exception e){}

    opphone.setID(idopphone);
    opphone.setownercode(address.getownercode());
    opphone.setaddrcode(address.getaddrcode());
    opphone.setaddrtypecode(address.getaddrtypecode());
    opphone.setphonetypecode(tmodelphone.getValueAt(row, 1) +"");
    opphone.setphone(tmodelphone.getValueAt(row, 3) +"");

    address.replaceOp_Phone(row, opphone);

}

private void cekOpAddress() throws CodeException {

    int row = jtblAddress.getSelectedRow();
    int col = jtblAddress.getSelectedColumn();


    Op_address opaddress;
    if (row > obj.getOp_Addresss().size() - 1) {
        opaddress = new Op_address();
        obj.getOp_Addresss().add(opaddress);
    }else{
        opaddress = (Op_address) obj.getOp_Addresss().list().get(row);
    }

    long idopaddress = 0 ;
    try{
        idopaddress = Long.parseLong(tmodeladdress.getValueAt(row, 0)+"");
    }catch (Exception e){}

    opaddress.setID(idopaddress);
    opaddress.setaddrcode(tmodeladdress.getValueAt(row, 1)+"");
    opaddress.setaddrtypecode(tmodeladdress.getValueAt(row, 2) +"");
    opaddress.setdscription(tmodeladdress.getValueAt(row, 3)==null ? "" : tmodeladdress.getValueAt(row, 3)+"");
    opaddress.setaddress(tmodeladdress.getValueAt(row, 4)==null? "" : tmodeladdress.getValueAt(row, 4)+"");
    opaddress.setcity(tmodeladdress.getValueAt(row, 5) == null ? "" : tmodeladdress.getValueAt(row, 5)+"");
    opaddress.setstate(tmodeladdress.getValueAt(row, 6) == null?"" : tmodeladdress.getValueAt(row, 6)+"");
    opaddress.setzipcode(tmodeladdress.getValueAt(row, 7) == null ?"" : tmodeladdress.getValueAt(row, 7)+"");


    obj.replaceOp_Address(row, opaddress);

}
private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {                                            
    if (!onload) {
        try {
            moveLast();

         } catch (CodeException ex) {
            ex.printStackTrace();
        }
        onload = true;
    }

    setToolBar(iformtype,istatus);
    mf.setIcon(CLASSNAME);
}                                           


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new FrmAr_customer().setVisible(true);
                } catch (CodeException ex) {
                    ex.printStackTrace();
                }
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSeparator HorizontalLine;
    private javax.swing.JLabel jHeader;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton jbtnBrowse;
    private javax.swing.JButton jbtnBrowseAccountSet;
    private javax.swing.JButton jbtnBrowseBillingCycle;
    private javax.swing.JButton jbtnBrowseGrpCode;
    private javax.swing.JButton jbtnBrowseInterestProfile;
    private javax.swing.JButton jbtnBrowseNat;
    private javax.swing.JButton jbtnBrowseTaxGroup;
    private javax.swing.JButton jbtnBrowseTermCode;
    private javax.swing.JButton jbtnFind;
    private javax.swing.JCheckBox jchkActive;
    private javax.swing.JCheckBox jchkHold;
    private javax.swing.JComboBox jcmbMonth;
    private javax.swing.JLabel jlblcustmrcode;
    private javax.swing.JLabel jlblregdate;
    private javax.swing.JPanel jpanel;
    private javax.swing.JTabbedPane jtbAddress;
    private javax.swing.JTable jtblAddress;
    private javax.swing.JTable jtblPhone;
    private javax.swing.JTable jtblStatistic;
    private javax.swing.JTextField jtxtAccountSetDesc;
    private javax.swing.JTextField jtxtAddrDescription;
    private javax.swing.JTextField jtxtAddrType;
    private javax.swing.JTextArea jtxtAddress;
    private javax.swing.JTextField jtxtBillingCycleDesc;
    private javax.swing.JTextField jtxtCity;
    private javax.swing.JTextField jtxtCreaditLimit;
    private javax.swing.JTextField jtxtCycleCode;
    private javax.swing.JTextField jtxtGrpDescription;
    private javax.swing.JTextField jtxtInterestProfileDesc;
    private javax.swing.JTextField jtxtNatDescription;
    private javax.swing.JTextField jtxtState;
    private javax.swing.JTextField jtxtTaxGroupDesc;
    private javax.swing.JTextField jtxtTermDesc;
    private javax.swing.JTextField jtxtZipCode;
    private javax.swing.JTextField jtxtaccsetcode;
    private javax.swing.JTextField jtxtauditdate;
    private javax.swing.JTextField jtxtaudituser;
    private javax.swing.JTextField jtxtcmpnyid;
    private javax.swing.JTextField jtxtcustmrcode;
    private javax.swing.JTextField jtxtcustmrname;
    private javax.swing.JTextField jtxtentrydate;
    private javax.swing.JTextField jtxtgrpcode;
    private javax.swing.JTextField jtxtid;
    private javax.swing.JTextField jtxtintrschrcode;
    private javax.swing.JTextField jtxtinvosamt;
    private javax.swing.JTextField jtxtinvoscnt;
    private javax.swing.JTextField jtxtnatcode;
    private javax.swing.JTextArea jtxtrNotes;
    private javax.swing.JTextField jtxttaxcode;
    private javax.swing.JTextField jtxttermcode;
    private javax.swing.JTextField jtxtyop;
    private org.kazao.calendar.KazaoCalendarDate kdateregdate;
    // End of variables declaration//GEN-END:variables

 
    public void moveFirst() throws CodeException {
        obj.moveFirst();
        showData();
        mf.setIcon(CLASSNAME);
    }

    public void movePrevious() throws CodeException {
        obj.movePrevious();
        showData();
        mf.setIcon(CLASSNAME);
    }

    public void moveNext() throws CodeException {
        obj.moveNext();
        showData();
        mf.setIcon(CLASSNAME);
    }

    public void moveLast() throws CodeException {
        obj.moveLast();
        showData();
        mf.setIcon(CLASSNAME);
    }

    public void searchData() throws CodeException {
        obj = new Ar_customer(this.jtxtcustmrcode.getText());
        showData();
        mf.setIcon(CLASSNAME);

    }
    public void newData() throws CodeException {
        obj = new Ar_customer();
        istatus=1;
        showData();
        setToolBar(iformtype,istatus);
    }

    private void validasi() throws CodeException {


         if (!jtxtnatcode.getText().equals("")) {
             Ar_custnat arcn = new Ar_custnat(jtxtnatcode.getText() );
             if (arcn.getID() == Ar_custnat.NULLID){
                 throw new CodeException("Customer National " + jtxtnatcode.getText() + " Tidak Diketemukan ");
             }
         }

         if(!jtxtgrpcode.getText().equals("")){
             Ar_custgrp argrp = new Ar_custgrp(jtxtgrpcode.getText());
             if (argrp.getID() == Ar_custgrp.NULLID) {
                 throw new CodeException("Customer Group Code  " + jtxtgrpcode.getText() + " Tidak Diketemukan ");
             }
         }

         if (!jtxtaccsetcode.getText().equals("")) {
             Ar_accset arc = new Ar_accset(jtxtaccsetcode.getText());
             if (arc.getID() == Ar_accset.NULLID) {
                throw new CodeException("Account Set  " + jtxtaccsetcode.getText() + " Tidak Diketemukan");
             }
         } else {
             throw new CodeException("Account Set  Cannot Be Empty");
         }

         if (!jtxtintrschrcode.getText().equals("")) {
             Ar_interest ari = new Ar_interest(jtxtintrschrcode.getText());
             if (ari.getID() == Ar_accset.NULLID) {
                throw new CodeException("Interest Profile " + jtxtintrschrcode.getText() + " Tidak Diketemukan ");
             }
         }else {
             throw new CodeException("Interest Profile Cannot Be Empty");
         }

         if(!jtxtCycleCode.getText().equals("")) {
            Ar_billcycl arb = new Ar_billcycl(jtxtCycleCode.getText());
            if(arb.getID() == Ar_billcycl.NULLID) {
                throw new CodeException("Cycle Code " + jtxtCycleCode.getText() + " Tidak Diketemukan ");
            }         
         } else {
             throw new CodeException("Cycle Code Cannot Be Empty");
         }

         if (!jtxttermcode.getText().equals("")){
            Op_paymentterm opp = new Op_paymentterm(jtxttermcode.getText());
            if (opp.getID() == Op_paymentterm.NULLID) {
                throw new CodeException("Term Code " + jtxttermcode.getText() + " Tidak Diketemukan ");                
            }
         } else {
             throw new CodeException("Term Code Cannot Be Empty");
         }

         if (!jtxttaxcode.getText().equals("")){
            Op_tax opt = new Op_tax(jtxttaxcode.getText());
            if (opt.getID() == Op_tax.NULLID) {
                throw new CodeException("Tax Code " + jtxttaxcode.getText() + " Tidak Diketemukan ");
            }
         } else {
             throw new CodeException("Tax Code Cannot Be Empty");
         }

    }



    public void saveData() throws CodeException {
        validasi();


        istatus = 0;
       
        setData();
        obj.save();
        jtxtid.setText(obj.getID()+"");
        jtxtentrydate.setText(obj.toString(Ar_customer.PROPERTY_ENTRYDATE));
        jtxtauditdate.setText(obj.toString(Ar_customer.PROPERTY_AUDITDATE));
        jtxtaudituser.setText(obj.toString(Ar_customer.PROPERTY_AUDITUSER));
        jtxtcmpnyid.setText(obj.toString(Ar_customer.PROPERTY_CMPNYID));

        
        if (jtbAddress.getSelectedIndex() == 0) {
            for (int i = 0 ; i < tmodeladdress.getRowCount(); i++) {

                try {
                    Op_address address = (Op_address) obj.getOp_Addresss().list().get(i);
                    tmodeladdress.setValueAt(address.getID(), i, 0);
                    tmodeladdress.setValueAt(address.getaddrcode(), i, 1);
                }catch(Exception e) {}

            }

        }else{
            int row = jtblAddress.getSelectedRow();
            Op_address address = (Op_address) obj.getOp_Addresss().list().get(row);

            for (int i=0; i <tmodelphone.getRowCount(); i++) {
                try{
                    Op_phone phone = (Op_phone) address.getOP_Phones().list().get(i);
                    tmodelphone.setValueAt(phone.getID(),  i, 0);
                }catch(Exception e) {}


            }

        }


        //jtbAddress.setSelectedIndex(0);
        
        //showData();
        
        mf.setIcon(CLASSNAME);
    }

    public void showData() throws CodeException {
        setCursor(GlobalUtils.HOURGLASSCURSOR);
	
             jtxtid.setText(obj.toString(Ar_customer.PROPERTY_ID));
             jtxtcustmrcode.setText(obj.toString(Ar_customer.PROPERTY_CUSTMRCODE));
             jtxtcustmrname.setText(obj.toString(Ar_customer.PROPERTY_CUSTMRNAME));
             jtxtnatcode.setText(obj.toString(Ar_customer.PROPERTY_NATCODE));
             jtxtNatDescription.setText(obj.getNarCodeDescription());             
             jtxtgrpcode.setText(obj.toString(Ar_customer.PROPERTY_GRPCODE));
             jtxtGrpDescription.setText(obj.getCustGroupDescription());

             jchkActive.setSelected(obj.getactive() == 1);
             jchkHold.setSelected(obj.gethold() == 1);

             if (obj.getregdate() != null) {
                kdateregdate.setDate(obj.getregdate());  
             }

             jtxtentrydate.setText(obj.toString(Ar_customer.PROPERTY_ENTRYDATE));
             jtxtauditdate.setText(obj.toString(Ar_customer.PROPERTY_AUDITDATE));
             jtxtaudituser.setText(obj.toString(Ar_customer.PROPERTY_AUDITUSER));
             jtxtcmpnyid.setText(obj.toString(Ar_customer.PROPERTY_CMPNYID));

             jtbAddress.setSelectedIndex(0);


             jtxtaccsetcode.setText(obj.getaccsetcode());


             jtxtAccountSetDesc.setText(obj.getAccountSetDescription());

             jtxtintrschrcode.setText(obj.getintrschrcode());
             jtxtInterestProfileDesc.setText(obj.getInterestProfileDescription());
             
             jtxtCycleCode.setText(obj.getcyclcode());
             jtxtBillingCycleDesc.setText(obj.getCycleDescription());
             
             jtxttermcode.setText(obj.gettermcode());
             jtxtTermDesc.setText(obj.getTermDescription());

             jtxttaxcode.setText(obj.gettaxcode());
             jtxtTaxGroupDesc.setText(obj.getTaxDescription());

             jtxtCreaditLimit.setText(obj.getcredlimitamt()+"");

             jtxtrNotes.setText(obj.getnotes());

             jtxtinvosamt.setText(obj.getinvosamt()+"");
             jtxtinvoscnt.setText(obj.getinvoscnt()+ "");

             showAddresses();


        setCursor(GlobalUtils.NORMALCURSOR);
    }

    private void showAddresses() throws CodeException {

        GlobalModel.clearRow(tmodeladdress);
        posttableaddress = -1;

        
        for(Object o : obj.getOp_Addresss().list()) {
            Op_address address = (Op_address) o;

            tmodeladdress.addRow(dataaddress);
            tmodeladdress.setValueAt(address.getID(), tmodeladdress.getRowCount() - 1, 0);
            tmodeladdress.setValueAt(address.getaddrcode(), tmodeladdress.getRowCount() - 1, 1);
            tmodeladdress.setValueAt(address.getaddrtypecode() ==null?"":address.getaddrtypecode(), tmodeladdress.getRowCount() - 1, 2);
            tmodeladdress.setValueAt(address.getdscription()==null?"":address.getdscription(), tmodeladdress.getRowCount() - 1, 3);
            tmodeladdress.setValueAt(address.getaddress()==null?"":address.getaddress(), tmodeladdress.getRowCount() - 1, 4);
            tmodeladdress.setValueAt(address.getcity()==null?"":address.getcity(), tmodeladdress.getRowCount() - 1, 5);
            tmodeladdress.setValueAt(address.getstate()==null?"":address.getstate() , tmodeladdress.getRowCount() - 1, 6);
            tmodeladdress.setValueAt(address.getzipcode()==null?"":address.getzipcode(), tmodeladdress.getRowCount() - 1, 7);

        }
        tmodeladdress.addRow(dataaddress);
        tmodeladdress.setValueAt("0", tmodeladdress.getRowCount() - 1, 0);
        GlobalUtils.selectCellTable(jtblAddress, 0, 1);
    }

    private void showPhones() throws CodeException {
        int row = jtblAddress.getSelectedRow();

        GlobalModel.clearRow(tmodelphone);
        posttablephone = -1;

        Op_phones phones = ((Op_address) obj.getOp_Addresss().list().get(row)).getOP_Phones();

        for(Object o : phones.list()) {
            Op_phone phone = (Op_phone) o;

            tmodelphone.addRow(dataphone);

            tmodelphone.setValueAt(phone.getID(), tmodelphone.getRowCount() - 1, 0);
            tmodelphone.setValueAt(phone.getphonetypecode(), tmodelphone.getRowCount() - 1, 1);
            tmodelphone.setValueAt(phone.getOP_PhoneDescription(), tmodelphone.getRowCount() - 1, 2);
            tmodelphone.setValueAt(phone.getphone(), tmodelphone.getRowCount() - 1, 3);


        }
        tmodelphone.addRow(dataphone);
        tmodelphone.setValueAt("0", tmodelphone.getRowCount() - 1, 0);
        GlobalUtils.selectCellTable(jtblPhone, 0, 1);
    }

    public void delete() throws CodeException {
        obj.delete();
        obj.moveFirst();
        showData();
        mf.setIcon(CLASSNAME);
    }

    public void setToolBar(int iFormType, int istatus) {
        mf.setToolBar(iformtype,istatus);        
    }

    public void setData() throws CodeException {
        
	
          obj.fromString(Ar_customer.PROPERTY_ID, jtxtid.getText()) ;
          obj.fromString(Ar_customer.PROPERTY_CUSTMRCODE, jtxtcustmrcode.getText()) ;
          obj.fromString(Ar_customer.PROPERTY_CUSTMRNAME, jtxtcustmrname.getText()) ;
          obj.fromString(Ar_customer.PROPERTY_NATCODE, jtxtnatcode.getText()) ;
          obj.fromString(Ar_customer.PROPERTY_GRPCODE, jtxtgrpcode.getText()) ;
          obj.fromString(Ar_customer.PROPERTY_ENTRYDATE, jtxtentrydate.getText()) ;
          obj.fromString(Ar_customer.PROPERTY_AUDITDATE, jtxtauditdate.getText()) ;
          obj.fromString(Ar_customer.PROPERTY_AUDITUSER, jtxtaudituser.getText()) ;
          obj.fromString(Ar_customer.PROPERTY_CMPNYID, jtxtcmpnyid.getText()) ;

          obj.setaccsetcode(jtxtaccsetcode.getText());
          obj.setcyclcode(jtxtCycleCode.getText());
          obj.settermcode(jtxttermcode.getText());
          obj.settaxcode(jtxttaxcode.getText());
          obj.setintrschrcode(jtxtintrschrcode.getText());
    

          obj.fromString(Ar_customer.PROPERTY_CREDLIMITAMT, jtxtCreaditLimit.getText()) ;
          obj.fromString(Ar_customer.PROPERTY_NOTES, jtxtrNotes.getText());
          obj.fromString(Ar_customer.PROPERTY_INVOSAMT, jtxtinvosamt.getText());
          obj.fromString(Ar_customer.PROPERTY_INVOSCNT, jtxtinvoscnt.getText());


          obj.setactive(jchkActive.isSelected() ? 1 : 0);
          obj.sethold(jchkHold.isSelected() ? 1 : 0);
          
    }

    public void undo() throws CodeException {
        istatus = 0;
        moveFirst();
        showData();
    }

    public void execute() throws CodeException {
       saveData();
    }

    public void printData() throws CodeException {
        Map parameter = new HashMap();
        NavigatorObjectInt noi = (NavigatorObjectInt) obj;        
        String file   = GlobalUtils.getCurrentDir() +"/Reports/" + noi.getClassName() + ".jrxml";
        GlobalUtils.printReport(file,  false);    
    }

    public void importCsv() throws CodeException {
            
        String file1 = "";
        String file2 = GlobalUtils.getCurrentDir() + GlobalUtils.temp + obj.TABLEPROCESS + ".csv";   
        
        JFileChooser chooser = new JFileChooser(".");
        chooser.setDialogTitle("Pilih File ");
        FileFilter filter1 = new ExtFileChooserFilter("CSV", new String[] { "CSV"});
        chooser.setFileFilter(filter1);

        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            File selectedFile = chooser.getSelectedFile();
            
            try {
                file1 = selectedFile.getCanonicalPath();
            
            }catch (Exception e) {}

            GlobalUtils.copyfile(file1, file2 );                

            obj.importCsv();
            
        }else {
          JOptionPane.showMessageDialog(null,"No Selection ");
        }

    }

    public void exportCsv() throws CodeException {
        
    
        if (obj.exportCsv()) {
            
            String file1 = GlobalUtils.getCurrentDir() + GlobalUtils.temp + obj.TABLEPROCESS + ".csv";   
            String file2 = "";
            
            JFileChooser chooser = new JFileChooser(".");
            chooser.setDialogTitle("Pilih Directory ");
    
            if (chooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
                try {
                    file2 = chooser.getSelectedFile().getCanonicalPath() + ".csv";
                        
                    JOptionPane.showMessageDialog(null, GlobalUtils.copyfile(file1, file2 ));                    
                    
                }catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());                    
                }
                
            }else {
              JOptionPane.showMessageDialog(null,"No Selection ");
            }
    
        }
        
    }

    public void importText() throws CodeException {
        String file1 = "";
        String file2 = GlobalUtils.getCurrentDir() + GlobalUtils.temp + obj.TABLEPROCESS + ".txt";   
        
        JFileChooser chooser = new JFileChooser(".");
        chooser.setDialogTitle("Pilih File ");
        FileFilter filter1 = new ExtFileChooserFilter("txt", new String[] { "txt"});
        chooser.setFileFilter(filter1);


        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            File selectedFile = chooser.getSelectedFile();
            
            try {
                file1 = selectedFile.getCanonicalPath();
            
            }catch (Exception e) {}

            GlobalUtils.copyfile(file1, file2 );                

            obj.importCsv();
            
        }else {
          JOptionPane.showMessageDialog(null,"No Selection ");
        }
    }

    public void exportText() throws CodeException {
        if (obj.exportText()) {
            
            String file1 = GlobalUtils.getCurrentDir() + GlobalUtils.temp + obj.TABLEPROCESS + ".txt";   
            String file2 = "";
            
            JFileChooser chooser = new JFileChooser(".");
            chooser.setDialogTitle("Pilih Directory ");
    
            if (chooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
                try {
                    file2 = chooser.getSelectedFile().getCanonicalPath() + ".txt";                        
                    JOptionPane.showMessageDialog(null, GlobalUtils.copyfile(file1, file2 ));                    
                    
                }catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());                    
                }
                
            }else {
              JOptionPane.showMessageDialog(null,"No Selection ");
            }
    
        } 
    }

    
}
