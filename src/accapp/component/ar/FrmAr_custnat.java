/*
 * From Template
 *
 * Created on June 29, 2007, 2:00 PM
 * 
 * 
 * How to Call this Form on FrmMainFrame
 * Sample : 
 *    
 * import accapp.component.ar.FrmAr_custnat;
 * 
 * .......
 * 
 * 
 * FrmAr_custnat frmAr_custnat;
 * 
 * .......
 * 
 try {
        if (frmAr_custnat == null) {
            frmmAr_custnat = new FrmAr_custnat(this);
        }
        
        showForm(frmAr_custnat);
        
    }catch(Exception e) {
        e.printStackTrace();
    }
 * 
 */

package accapp.component.ar;

import accapp.objectclasses.ar.Ar_accset;
import accapp.objectclasses.ar.Ar_accsets;
import accapp.objectclasses.ar.Ar_billcycl;
import accapp.objectclasses.ar.Ar_billcycls;
import common.component.FrmBrowse;
import common.classinterface.NavigatorFormInt;
import common.classinterface.NavigatorObjectInt;
import common.component.FrmMainFrame;

import common.utils.CodeException;
import common.utils.GlobalUtils;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import common.utils.ExtFileChooserFilter;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;
import accapp.objectclasses.ar.Ar_custnat;
import accapp.objectclasses.ar.Ar_custnats;
import accapp.objectclasses.ar.Ar_custnatsts;
import accapp.objectclasses.ar.Ar_custnatstss;
import accapp.objectclasses.ar.Ar_interest;
import accapp.objectclasses.ar.Ar_interests;
import accapp.objectclasses.gl.Gl_account;
import common.tablemodels.GlobalModel;
import java.awt.event.KeyEvent;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author  Generator
 */

public class FrmAr_custnat extends javax.swing.JInternalFrame implements NavigatorFormInt {

    private static int istatus = 0;
    private static int iformtype = 0;
    public static String CLASSNAME="FrmAr_custnat";
    
    FrmMainFrame mf ;
    
    
    public Ar_custnat obj = new Ar_custnat();
    Ar_custnatsts custnatsts=new Ar_custnatsts();

    DefaultTableModel tmodel=null;
    
   
    /** Creates new form Area */
    public FrmAr_custnat() throws CodeException {
        initComponents();
    }
    
    public FrmAr_custnat(FrmMainFrame mf) throws CodeException{
        this.mf = mf;
        initComponents();

        tmodel=(DefaultTableModel) jtblStatistic.getModel();

        jtxtid.setBounds(180, 30, 80, 20);
        jtxtentrydate.setBounds(260, 30, 160, 20);
        jtxtauditdate.setBounds(420, 30, 140, 20);
        jtxtaudituser.setBounds(560, 30, 110, 20);
        jtxtcmpnyid.setBounds(670, 30, 120, 20);

        jtxtid.setEditable(false);
        jtxtentrydate.setEditable(false);
        jtxtauditdate.setEditable(false);
        jtxtaudituser.setEditable(false);
        jtxtcmpnyid.setEditable(false);

        fillYOP();
        fillMOP();
    }

    private void fillMOP(){
        jcbMOP.removeAllItems();

        int i=0;
        for (i=1;i<13;i++){
            if (i<10){
                jcbMOP.addItem("0"+i);
            } else {
                jcbMOP.addItem(i);
            }
        }

    }

    private void fillYOP(){
        jcbYOP.removeAllItems();

        int currentYear=GlobalUtils.CNomorInt(GlobalUtils.getCurrentYear());
        int i=0;
        for (i=currentYear-10;i<currentYear+10;i++){
            jcbYOP.addItem(i);
        }
    }
       
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jHeader = new javax.swing.JLabel();
        HorizontalLine = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jtxtid = new javax.swing.JTextField();
        jtxtentrydate = new javax.swing.JTextField();
        jtxtauditdate = new javax.swing.JTextField();
        jtxtaudituser = new javax.swing.JTextField();
        jtxtcmpnyid = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jlblaccsetcode = new javax.swing.JLabel();
        jtxtaccsetcode = new javax.swing.JTextField();
        jlblcyclcode = new javax.swing.JLabel();
        jtxtcyclcode = new javax.swing.JTextField();
        jlblintrschrcode = new javax.swing.JLabel();
        jtxtintrschrcode = new javax.swing.JTextField();
        jtxtaccsetcodedesc = new javax.swing.JTextField();
        jchckactive = new javax.swing.JCheckBox();
        jtxtcyclcodedesc = new javax.swing.JTextField();
        jtxtintrschrcodedesc = new javax.swing.JTextField();
        jbtnBrowseCycle = new javax.swing.JButton();
        jbtnBrowseAccSetCodeDes = new javax.swing.JButton();
        jbtnIntrbrowse = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jlblyop = new javax.swing.JLabel();
        jlblmop = new javax.swing.JLabel();
        jcbMOP = new javax.swing.JComboBox();
        jcbYOP = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblStatistic = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jlblnatcode = new javax.swing.JLabel();
        jtxtnatcode = new javax.swing.JTextField();
        jtxtdscription = new javax.swing.JTextField();
        jbtnBrowse = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("A/R National Account");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        jHeader.setBackground(new java.awt.Color(102, 102, 102));
        jHeader.setFont(new java.awt.Font("Dialog", 1, 10));
        jHeader.setForeground(new java.awt.Color(255, 255, 255));
        jHeader.setText(" : : National Account");
        jHeader.setAlignmentY(0.0F);
        jHeader.setOpaque(true);
        getContentPane().add(jHeader);
        jHeader.setBounds(30, 30, 130, 20);

        HorizontalLine.setForeground(new java.awt.Color(102, 102, 102));
        HorizontalLine.setAlignmentX(0.0F);
        HorizontalLine.setAlignmentY(0.0F);
        getContentPane().add(HorizontalLine);
        HorizontalLine.setBounds(160, 50, 650, 2);

        jSeparator3.setForeground(new java.awt.Color(102, 102, 102));
        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator3.setAlignmentX(0.0F);
        jSeparator3.setAlignmentY(0.0F);
        getContentPane().add(jSeparator3);
        jSeparator3.setBounds(30, 50, 2, 400);

        jtxtid.setFont(new java.awt.Font("Dialog", 0, 8)); // NOI18N
        jtxtid.setText("id");
        getContentPane().add(jtxtid);
        jtxtid.setBounds(220, 30, 80, 16);

        jtxtentrydate.setFont(new java.awt.Font("Dialog", 0, 8)); // NOI18N
        jtxtentrydate.setText("entrydate");
        getContentPane().add(jtxtentrydate);
        jtxtentrydate.setBounds(300, 30, 80, 16);

        jtxtauditdate.setFont(new java.awt.Font("Dialog", 0, 8)); // NOI18N
        jtxtauditdate.setText("auditdate");
        getContentPane().add(jtxtauditdate);
        jtxtauditdate.setBounds(380, 30, 80, 16);

        jtxtaudituser.setFont(new java.awt.Font("Dialog", 0, 8)); // NOI18N
        jtxtaudituser.setText("audituser");
        getContentPane().add(jtxtaudituser);
        jtxtaudituser.setBounds(460, 30, 80, 16);

        jtxtcmpnyid.setFont(new java.awt.Font("Dialog", 0, 8)); // NOI18N
        jtxtcmpnyid.setText("cmpnyid");
        getContentPane().add(jtxtcmpnyid);
        jtxtcmpnyid.setBounds(540, 30, 80, 16);

        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);
        jTabbedPane1.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N

        jPanel1.setLayout(null);

        jlblaccsetcode.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jlblaccsetcode.setText("Account Set");
        jPanel1.add(jlblaccsetcode);
        jlblaccsetcode.setBounds(20, 40, 140, 14);

        jtxtaccsetcode.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jtxtaccsetcode.setText("accsetcode");
        jtxtaccsetcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtaccsetcodeKeyPressed(evt);
            }
        });
        jPanel1.add(jtxtaccsetcode);
        jtxtaccsetcode.setBounds(210, 40, 110, 20);

        jlblcyclcode.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jlblcyclcode.setText("Biling Cycle");
        jPanel1.add(jlblcyclcode);
        jlblcyclcode.setBounds(20, 120, 140, 14);

        jtxtcyclcode.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jtxtcyclcode.setText("cyclcode");
        jtxtcyclcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtcyclcodeKeyPressed(evt);
            }
        });
        jPanel1.add(jtxtcyclcode);
        jtxtcyclcode.setBounds(210, 120, 80, 20);

        jlblintrschrcode.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jlblintrschrcode.setText("Interest Profile");
        jPanel1.add(jlblintrschrcode);
        jlblintrschrcode.setBounds(20, 150, 140, 14);

        jtxtintrschrcode.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jtxtintrschrcode.setText("intrschrcode");
        jtxtintrschrcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtintrschrcodeKeyPressed(evt);
            }
        });
        jPanel1.add(jtxtintrschrcode);
        jtxtintrschrcode.setBounds(210, 150, 80, 20);

        jtxtaccsetcodedesc.setEditable(false);
        jtxtaccsetcodedesc.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jtxtaccsetcodedesc.setText("accsetcodedesc");
        jPanel1.add(jtxtaccsetcodedesc);
        jtxtaccsetcodedesc.setBounds(360, 40, 250, 20);

        jchckactive.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jchckactive.setText("Active");
        jchckactive.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jchckactiveKeyPressed(evt);
            }
        });
        jPanel1.add(jchckactive);
        jchckactive.setBounds(210, 60, 57, 23);

        jtxtcyclcodedesc.setEditable(false);
        jtxtcyclcodedesc.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jtxtcyclcodedesc.setText("yclcodedesc");
        jPanel1.add(jtxtcyclcodedesc);
        jtxtcyclcodedesc.setBounds(320, 120, 250, 20);

        jtxtintrschrcodedesc.setEditable(false);
        jtxtintrschrcodedesc.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jtxtintrschrcodedesc.setText("intrschrcodedesc");
        jPanel1.add(jtxtintrschrcodedesc);
        jtxtintrschrcodedesc.setBounds(320, 150, 250, 20);

        jbtnBrowseCycle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowseCycleActionPerformed1(evt);
            }
        });
        jPanel1.add(jbtnBrowseCycle);
        jbtnBrowseCycle.setBounds(290, 120, 20, 20);

        jbtnBrowseAccSetCodeDes.setText("...");
        jbtnBrowseAccSetCodeDes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowseAccSetCodeDesActionPerformed(evt);
            }
        });
        jPanel1.add(jbtnBrowseAccSetCodeDes);
        jbtnBrowseAccSetCodeDes.setBounds(330, 40, 20, 20);

        jbtnIntrbrowse.setText("...");
        jbtnIntrbrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnIntrbrowseActionPerformed(evt);
            }
        });
        jPanel1.add(jbtnIntrbrowse);
        jbtnIntrbrowse.setBounds(290, 150, 20, 20);

        jTabbedPane1.addTab("Billing", jPanel1);

        jPanel2.setLayout(null);

        jlblyop.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jlblyop.setText("Year");
        jPanel2.add(jlblyop);
        jlblyop.setBounds(30, 20, 60, 14);

        jlblmop.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jlblmop.setText("Periode");
        jPanel2.add(jlblmop);
        jlblmop.setBounds(190, 20, 80, 14);

        jcbMOP.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jcbMOP.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbMOP.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbMOPItemStateChanged(evt);
            }
        });
        jcbMOP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbMOPActionPerformed(evt);
            }
        });
        jPanel2.add(jcbMOP);
        jcbMOP.setBounds(270, 20, 61, 20);

        jcbYOP.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jcbYOP.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbYOP.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbYOPItemStateChanged(evt);
            }
        });
        jcbYOP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbYOPActionPerformed(evt);
            }
        });
        jPanel2.add(jcbYOP);
        jcbYOP.setBounds(100, 20, 61, 20);

        jtblStatistic.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jtblStatistic.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Invoices", null, null, null},
                {"Total Invoice Paid", null, null, null},
                {"Discounts", null, null, null},
                {"Credit Notes", null, null, null},
                {"Debit Notes", null, null, null},
                {"Adjustments", null, null, null},
                {"Write-Off", null, null, null},
                {"Interest Charges", null, null, null},
                {"Return Checks", null, null, null}
            },
            new String [] {
                "Transaction Types", "Amount", "Count", "Id"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Long.class, java.lang.Long.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtblStatistic.setSurrendersFocusOnKeystroke(true);
        jScrollPane1.setViewportView(jtblStatistic);
        jtblStatistic.getColumnModel().getColumn(0).setPreferredWidth(200);
        jtblStatistic.getColumnModel().getColumn(1).setPreferredWidth(100);
        jtblStatistic.getColumnModel().getColumn(2).setPreferredWidth(100);
        jtblStatistic.getColumnModel().getColumn(3).setMinWidth(0);
        jtblStatistic.getColumnModel().getColumn(3).setPreferredWidth(0);
        jtblStatistic.getColumnModel().getColumn(3).setMaxWidth(0);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(30, 60, 660, 180);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jLabel1.setText("Total Days To Pay");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(30, 260, 160, 14);

        jTextField1.setEditable(false);
        jTextField1.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField1.setText("0");
        jPanel2.add(jTextField1);
        jTextField1.setBounds(200, 260, 120, 20);

        jTextField2.setEditable(false);
        jTextField2.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jTextField2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField2.setText("0");
        jPanel2.add(jTextField2);
        jTextField2.setBounds(570, 260, 120, 20);

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jLabel2.setText("Average Days To Pay");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(400, 260, 160, 14);

        jTabbedPane1.addTab("Statistic", jPanel2);

        getContentPane().add(jTabbedPane1);
        jTabbedPane1.setBounds(60, 120, 710, 320);

        jlblnatcode.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jlblnatcode.setText("National Account No.");
        getContentPane().add(jlblnatcode);
        jlblnatcode.setBounds(60, 90, 140, 14);

        jtxtnatcode.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jtxtnatcode.setText("natcode");
        jtxtnatcode.setNextFocusableComponent(jtxtdscription);
        jtxtnatcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtnatcodeKeyPressed(evt);
            }
        });
        getContentPane().add(jtxtnatcode);
        jtxtnatcode.setBounds(250, 90, 80, 20);

        jtxtdscription.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jtxtdscription.setText("dscription");
        jtxtdscription.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtdscriptionKeyPressed(evt);
            }
        });
        getContentPane().add(jtxtdscription);
        jtxtdscription.setBounds(360, 90, 410, 20);

        jbtnBrowse.setText("...");
        jbtnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowseActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnBrowse);
        jbtnBrowse.setBounds(330, 90, 20, 20);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
         try {
            moveFirst();

         } catch (CodeException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_formInternalFrameOpened

private void kdatePurchaseDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kdatePurchaseDateFocusLost

}//GEN-LAST:event_kdatePurchaseDateFocusLost

private void kdatePurchaseDateCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_kdatePurchaseDateCaretPositionChanged

}//GEN-LAST:event_kdatePurchaseDateCaretPositionChanged

private void kdatePurchaseDatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_kdatePurchaseDatePropertyChange

}//GEN-LAST:event_kdatePurchaseDatePropertyChange

private void jbtnBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBrowseActionPerformed

          try {
	      Ar_custnats brs = new Ar_custnats();
	      FrmBrowse bd = new FrmBrowse(this, brs);
	      bd.setFirstValue(jtxtnatcode);
	      bd.setModal(true);
	      bd.setVisible(true);

	  } catch (CodeException ex) {
	      ex.printStackTrace();
	  }
}//GEN-LAST:event_jbtnBrowseActionPerformed

private void jbtnBrowseIntCodeActionPerformed(java.awt.event.ActionEvent evt) {
    // TODO add your handling code here:
    try {
        Ar_interests brs = new Ar_interests();
        FrmBrowse bd = new FrmBrowse(brs);
        bd.setFirstValue(jtxtintrschrcode);
        bd.setSecondValue(jtxtintrschrcodedesc);
        bd.setModal(true);
        bd.setVisible(true);


    } catch (CodeException e) {
        e.printStackTrace();
    }
}

private void jbtnBrowseCycleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBrowseCycleActionPerformed
    // TODO add your handling code here:
    try {
        Ar_billcycls brs = new Ar_billcycls();
        FrmBrowse bd = new FrmBrowse(brs);
        bd.setFirstValue(jtxtcyclcode);
        bd.setSecondValue(jtxtcyclcodedesc);
        bd.setModal(true);
        bd.setVisible(true);


    } catch (CodeException e) {
        e.printStackTrace();
    }


}//GEN-LAST:event_jbtnBrowseCycleActionPerformed

private void jbtnBrowseAccSetCodeDesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBrowseAccSetCodeDesActionPerformed
    try {
        Ar_accsets brs = new Ar_accsets();
        FrmBrowse bd = new FrmBrowse(brs);
        bd.setFirstValue(jtxtaccsetcode);
        bd.setSecondValue(jtxtaccsetcodedesc);
        bd.setModal(true);
        bd.setVisible(true);


    } catch (CodeException e) {
        e.printStackTrace();
    }
}//GEN-LAST:event_jbtnBrowseAccSetCodeDesActionPerformed

private void jcbYOPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbYOPActionPerformed
        

}//GEN-LAST:event_jcbYOPActionPerformed

private void jcbMOPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbMOPActionPerformed
    // TODO add your handling code here:
    
    
}//GEN-LAST:event_jcbMOPActionPerformed

private void jcbMOPItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbMOPItemStateChanged
    // TODO add your handling code here:
    try {
            // TODO add your handling code here:
        if (jcbMOP.getSelectedItem()!=null){
            if (!jcbMOP.getSelectedItem().toString().equalsIgnoreCase("Item 1")){
                custnatsts = new Ar_custnatsts();
                int curyear=GlobalUtils.toInt(jcbYOP.getSelectedItem().toString());
                int curmonth=GlobalUtils.toInt(jcbMOP.getSelectedItem().toString());
                showdatastatus(custnatsts,curyear,curmonth);
            }
        }
    } catch (CodeException ex) {
        Logger.getLogger(FrmAr_custnat.class.getName()).log(Level.SEVERE, null, ex);
    }

}//GEN-LAST:event_jcbMOPItemStateChanged

private void jcbYOPItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbYOPItemStateChanged
    // TODO add your handling code here:
    
}//GEN-LAST:event_jcbYOPItemStateChanged

private void jtxtnatcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtnatcodeKeyPressed


    if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
        jtxtdscription.requestFocus();
    }

}//GEN-LAST:event_jtxtnatcodeKeyPressed

private void jtxtdscriptionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtdscriptionKeyPressed

    if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
        jtxtaccsetcode.requestFocus();
    }
}//GEN-LAST:event_jtxtdscriptionKeyPressed

private void jtxtaccsetcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtaccsetcodeKeyPressed

    if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
        try{
            Ar_accset aracc = new Ar_accset(Ar_accset.PROPERTY_ACCSETCODE, jtxtaccsetcode.getText().replace("-", ""));
            jtxtaccsetcodedesc.setText(aracc.getARAccountDesc());
        }catch(Exception e) {}


        jchckactive.requestFocus();
    }
}//GEN-LAST:event_jtxtaccsetcodeKeyPressed

private void jchckactiveKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jchckactiveKeyPressed

    if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
        
        jtxtcyclcode.requestFocus();
    }
}//GEN-LAST:event_jchckactiveKeyPressed

private void jtxtcyclcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtcyclcodeKeyPressed

    if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
        try{
            Ar_billcycl bill = new Ar_billcycl(jtxtcyclcode.getText());
            jtxtaccsetcodedesc.setText(bill.getdscrition());
        }catch(Exception e){}

        jtxtintrschrcode.requestFocus();
    }
}//GEN-LAST:event_jtxtcyclcodeKeyPressed

private void jbtnBrowseCycleActionPerformed1(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBrowseCycleActionPerformed1
    try {
        Ar_billcycls brs = new Ar_billcycls();
        FrmBrowse bd = new FrmBrowse(brs);
        bd.setFirstValue(jtxtcyclcode);
        bd.setSecondValue(jtxtcyclcodedesc);
        bd.setModal(true);
        bd.setVisible(true);


    } catch (CodeException e) {
        e.printStackTrace();
    }

}//GEN-LAST:event_jbtnBrowseCycleActionPerformed1

private void jbtnIntrbrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnIntrbrowseActionPerformed
    try {
        Ar_interests brs = new Ar_interests();
        FrmBrowse bd = new FrmBrowse(brs);
        bd.setFirstValue(jtxtintrschrcode);
        bd.setSecondValue(jtxtintrschrcodedesc);
        bd.setModal(true);
        bd.setVisible(true);


    } catch (CodeException e) {
        e.printStackTrace();
    }
}//GEN-LAST:event_jbtnIntrbrowseActionPerformed

private void jtxtintrschrcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtintrschrcodeKeyPressed

    if(evt.getKeyCode() == KeyEvent.VK_ENTER) {

        try{
             Ar_interest interest = new Ar_interest(jtxtintrschrcode.getText());
             jtxtintrschrcodedesc.setText(interest.getdscription());
        }catch(Exception e) {}

        
    }
}//GEN-LAST:event_jtxtintrschrcodeKeyPressed


private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {                                            
    setToolBar(iformtype,istatus);
    mf.setIcon(CLASSNAME);
}                                           

                                                                                 

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new FrmAr_custnat().setVisible(true);
                } catch (CodeException ex) {
                    ex.printStackTrace();
                }
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSeparator HorizontalLine;
    private javax.swing.JLabel jHeader;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JButton jbtnBrowse;
    private javax.swing.JButton jbtnBrowseAccSetCodeDes;
    private javax.swing.JButton jbtnBrowseCycle;
    private javax.swing.JButton jbtnIntrbrowse;
    private javax.swing.JComboBox jcbMOP;
    private javax.swing.JComboBox jcbYOP;
    private javax.swing.JCheckBox jchckactive;
    private javax.swing.JLabel jlblaccsetcode;
    private javax.swing.JLabel jlblcyclcode;
    private javax.swing.JLabel jlblintrschrcode;
    private javax.swing.JLabel jlblmop;
    private javax.swing.JLabel jlblnatcode;
    private javax.swing.JLabel jlblyop;
    private javax.swing.JTable jtblStatistic;
    private javax.swing.JTextField jtxtaccsetcode;
    private javax.swing.JTextField jtxtaccsetcodedesc;
    private javax.swing.JTextField jtxtauditdate;
    private javax.swing.JTextField jtxtaudituser;
    private javax.swing.JTextField jtxtcmpnyid;
    private javax.swing.JTextField jtxtcyclcode;
    private javax.swing.JTextField jtxtcyclcodedesc;
    private javax.swing.JTextField jtxtdscription;
    private javax.swing.JTextField jtxtentrydate;
    private javax.swing.JTextField jtxtid;
    private javax.swing.JTextField jtxtintrschrcode;
    private javax.swing.JTextField jtxtintrschrcodedesc;
    private javax.swing.JTextField jtxtnatcode;
    // End of variables declaration//GEN-END:variables

 
    public void moveFirst() throws CodeException {
        obj.moveFirst();
        showData();
        mf.setIcon(CLASSNAME);
    }

    public void movePrevious() throws CodeException {
        obj.movePrevious();
        showData();
        mf.setIcon(CLASSNAME);
    }

    public void moveNext() throws CodeException {
        obj.moveNext();
        showData();
        mf.setIcon(CLASSNAME);
    }

    public void moveLast() throws CodeException {
        obj.moveLast();
        showData();
        mf.setIcon(CLASSNAME);
    }

    public void searchData() throws CodeException {
        obj = new Ar_custnat(this.jtxtnatcode.getText());
        showData();
        mf.setIcon(CLASSNAME);

    }
    public void newData() throws CodeException {
        obj = new Ar_custnat();
        istatus=1;
        showData();
        setToolBar(iformtype,istatus);
    }

    public void saveData() throws CodeException {
        setData();
        obj.save();
        
        if (istatus==1){
            custnatsts=new Ar_custnatsts();
            custnatsts.fromString(Ar_custnatsts.PROPERTY_NATCODE, obj.getnatcode()) ;
            custnatsts.fromString(Ar_custnatsts.PROPERTY_YOP, GlobalUtils.getCurrentYear());
            custnatsts.fromString(Ar_custnatsts.PROPERTY_MOP, GlobalUtils.getCurrentMonth());
            custnatsts.fromString(Ar_custnatsts.PROPERTY_ENTRYDATE, GlobalUtils.getAuditDate());
            custnatsts.fromString(Ar_custnatsts.PROPERTY_AUDITDATE, GlobalUtils.getAuditDate());
            custnatsts.fromString(Ar_custnatsts.PROPERTY_AUDITUSER, GlobalUtils.getAuditUser());
            custnatsts.fromString(Ar_custnatsts.PROPERTY_CMPNYID, GlobalUtils.company);
            custnatsts.save();
        }
        showData();
        istatus = 0;
        mf.setIcon(CLASSNAME);
    }

    public void showData() throws CodeException {
        setCursor(GlobalUtils.HOURGLASSCURSOR);
	
             jtxtid.setText(obj.toString(Ar_custnat.PROPERTY_ID));
             jtxtnatcode.setText(obj.toString(Ar_custnat.PROPERTY_NATCODE));

             if (obj.getactive()==1){
                 jchckactive.setSelected(true);
             } else {
                 jchckactive.setSelected(false);
             }
             jtxtdscription.setText(obj.toString(Ar_custnat.PROPERTY_DSCRIPTION));
             jtxtaccsetcode.setText(obj.toString(Ar_custnat.PROPERTY_ACCSETCODE));

             jtxtaccsetcodedesc.setText(obj.getAccSetDesc());

             jtxtcyclcode.setText(obj.toString(Ar_custnat.PROPERTY_CYCLCODE));
             jtxtcyclcodedesc.setText(obj.getBillCycleDesc());
             
             jtxtintrschrcode.setText(obj.toString(Ar_custnat.PROPERTY_INTRSCHRCODE));
             jtxtintrschrcodedesc.setText(obj.getInterestDesc());
             
             jtxtentrydate.setText(obj.toString(Ar_custnat.PROPERTY_ENTRYDATE));
             jtxtauditdate.setText(obj.toString(Ar_custnat.PROPERTY_AUDITDATE));
             jtxtaudituser.setText(obj.toString(Ar_custnat.PROPERTY_AUDITUSER));
             jtxtcmpnyid.setText(obj.toString(Ar_custnat.PROPERTY_CMPNYID));

             Ar_custnatsts custnatsts=new Ar_custnatsts();

             int curyear=GlobalUtils.toInt(GlobalUtils.getCurrentYear());

             jcbYOP.setSelectedItem(curyear);
             int curmonth=GlobalUtils.toInt(GlobalUtils.getCurrentMonth());

             if (curmonth<10){
                 jcbMOP.setSelectedItem("0"+curmonth);
             } else {
                jcbMOP.setSelectedItem(curmonth);
             }
             
             showdatastatus(custnatsts,curyear,curmonth);

        setCursor(GlobalUtils.NORMALCURSOR);
    }

    private void showdatastatus(Ar_custnatsts custnatsts,Integer curyear,Integer curmonth) throws CodeException{

         custnatsts.searchData(obj.getnatcode(), curyear, curmonth);
         
         tmodel.setValueAt(GlobalUtils.formatnumber(custnatsts.getinvamt()),0,1);
         tmodel.setValueAt(GlobalUtils.formatnumber(custnatsts.getinvcnt()),0,2);
         tmodel.setValueAt(GlobalUtils.formatnumber(custnatsts.getpayamt()),1,1);
         tmodel.setValueAt(GlobalUtils.formatnumber(custnatsts.getpaycnt()),1,2);
         tmodel.setValueAt(GlobalUtils.formatnumber(custnatsts.getdiscamt()),2,1);
         tmodel.setValueAt(GlobalUtils.formatnumber(custnatsts.getdisccnt()),2,2);
         tmodel.setValueAt(GlobalUtils.formatnumber(custnatsts.getcnamt()),3,1);
         tmodel.setValueAt(GlobalUtils.formatnumber(custnatsts.getcncnt()),3,2);
         tmodel.setValueAt(GlobalUtils.formatnumber(custnatsts.getdnamt()),4,1);
         tmodel.setValueAt(GlobalUtils.formatnumber(custnatsts.getdncnt()),4,2);
         tmodel.setValueAt(GlobalUtils.formatnumber(custnatsts.getadjamt()),5,1);
         tmodel.setValueAt(GlobalUtils.formatnumber(custnatsts.getadjcnt()),5,2);
         tmodel.setValueAt(GlobalUtils.formatnumber(custnatsts.getwroffamt()),6,1);
         tmodel.setValueAt(GlobalUtils.formatnumber(custnatsts.getwroffcnt()),6,2);
         tmodel.setValueAt(GlobalUtils.formatnumber(custnatsts.getinttamt()),7,1);
         tmodel.setValueAt(GlobalUtils.formatnumber(custnatsts.getinttcnt()),7,2);
         tmodel.setValueAt(GlobalUtils.formatnumber(custnatsts.getrtrchckamt()),8,1);
         tmodel.setValueAt(GlobalUtils.formatnumber(custnatsts.getrtrchckcnt()),8,2);

    }
    public void delete() throws CodeException {
        obj.delete();
        obj.moveFirst();
        showData();
        mf.setIcon(CLASSNAME);
    }

    public void setToolBar(int iFormType, int istatus) {
        mf.setToolBar(iformtype,istatus);        
    }

    public void setData() throws CodeException {
        
	
          obj.fromString(Ar_custnat.PROPERTY_ID, jtxtid.getText()) ;
          obj.fromString(Ar_custnat.PROPERTY_NATCODE, jtxtnatcode.getText()) ;
          obj.fromString(Ar_custnat.PROPERTY_GRPCODE, jtxtnatcode.getText()) ;

          if (jchckactive.isSelected()){
              obj.fromString(Ar_custnat.PROPERTY_ACTIVE, "1") ;
          } else {
              obj.fromString(Ar_custnat.PROPERTY_ACTIVE, "0") ;
          }
          obj.fromString(Ar_custnat.PROPERTY_DSCRIPTION, jtxtdscription.getText()) ;
          obj.fromString(Ar_custnat.PROPERTY_ACCSETCODE, jtxtaccsetcode.getText().replace("-", "")) ;
          obj.fromString(Ar_custnat.PROPERTY_CYCLCODE, jtxtcyclcode.getText()) ;
          obj.fromString(Ar_custnat.PROPERTY_INTRSCHRCODE, jtxtintrschrcode.getText()) ;
          if (obj.getID()==0){
              obj.fromString(Ar_custnat.PROPERTY_ENTRYDATE, GlobalUtils.getAuditDate()) ;
          }
          obj.fromString(Ar_custnat.PROPERTY_AUDITDATE, GlobalUtils.getAuditDate()) ;
          obj.fromString(Ar_custnat.PROPERTY_AUDITUSER, GlobalUtils.getAuditUser()) ;
          obj.fromString(Ar_custnat.PROPERTY_CMPNYID, GlobalUtils.company) ;

    }

    public void undo() throws CodeException {
        istatus = 0;
        moveFirst();
        showData();
    }

    public void execute() throws CodeException {
       saveData();
    }

    public void printData() throws CodeException {
        Map parameter = new HashMap();
        NavigatorObjectInt noi = (NavigatorObjectInt) obj;        
        String file   = GlobalUtils.getCurrentDir() +"/Reports/" + noi.getClassName() + ".jrxml";
        GlobalUtils.printReport(file,  false);    
    }

    public void importCsv() throws CodeException {
            
        String file1 = "";
        String file2 = GlobalUtils.getCurrentDir() + GlobalUtils.temp + obj.TABLEPROCESS + ".csv";   
        
        JFileChooser chooser = new JFileChooser(".");
        chooser.setDialogTitle("Pilih File ");
        FileFilter filter1 = new ExtFileChooserFilter("CSV", new String[] { "CSV"});
        chooser.setFileFilter(filter1);

        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            File selectedFile = chooser.getSelectedFile();
            
            try {
                file1 = selectedFile.getCanonicalPath();
            
            }catch (Exception e) {}

            GlobalUtils.copyfile(file1, file2 );                

            obj.importCsv();
            
        }else {
          JOptionPane.showMessageDialog(null,"No Selection ");
        }

    }

    public void exportCsv() throws CodeException {
        
    
        if (obj.exportCsv()) {
            
            String file1 = GlobalUtils.getCurrentDir() + GlobalUtils.temp + obj.TABLEPROCESS + ".csv";   
            String file2 = "";
            
            JFileChooser chooser = new JFileChooser(".");
            chooser.setDialogTitle("Pilih Directory ");
    
            if (chooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
                try {
                    file2 = chooser.getSelectedFile().getCanonicalPath() + ".csv";
                        
                    JOptionPane.showMessageDialog(null, GlobalUtils.copyfile(file1, file2 ));                    
                    
                }catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());                    
                }
                
            }else {
              JOptionPane.showMessageDialog(null,"No Selection ");
            }
    
        }
        
    }

    public void importText() throws CodeException {
        String file1 = "";
        String file2 = GlobalUtils.getCurrentDir() + GlobalUtils.temp + obj.TABLEPROCESS + ".txt";   
        
        JFileChooser chooser = new JFileChooser(".");
        chooser.setDialogTitle("Pilih File ");
        FileFilter filter1 = new ExtFileChooserFilter("txt", new String[] { "txt"});
        chooser.setFileFilter(filter1);


        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            File selectedFile = chooser.getSelectedFile();
            
            try {
                file1 = selectedFile.getCanonicalPath();
            
            }catch (Exception e) {}

            GlobalUtils.copyfile(file1, file2 );                

            obj.importCsv();
            
        }else {
          JOptionPane.showMessageDialog(null,"No Selection ");
        }
    }

    public void exportText() throws CodeException {
        if (obj.exportText()) {
            
            String file1 = GlobalUtils.getCurrentDir() + GlobalUtils.temp + obj.TABLEPROCESS + ".txt";   
            String file2 = "";
            
            JFileChooser chooser = new JFileChooser(".");
            chooser.setDialogTitle("Pilih Directory ");
    
            if (chooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
                try {
                    file2 = chooser.getSelectedFile().getCanonicalPath() + ".txt";                        
                    JOptionPane.showMessageDialog(null, GlobalUtils.copyfile(file1, file2 ));                    
                    
                }catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());                    
                }
                
            }else {
              JOptionPane.showMessageDialog(null,"No Selection ");
            }
    
        } 
    }

    
}
