/*
 * From Template
 *
 * Created on June 29, 2007, 2:00 PM
 * 
 * 
 * How to Call this Form on FrmMainFrame
 * Sample : 
 *    
 * import test.FrmAr_rcph;
 * 
 * .......
 * 
 * 
 * FrmAr_rcph frmAr_rcph;
 * 
 * .......
 * 
 try {
        if (frmAr_rcph == null) {
            frmmAr_rcph = new FrmAr_rcph(this);
        }
        
        showForm(frmAr_rcph);
        
    }catch(Exception e) {
        e.printStackTrace();
    }
 * 
 */

package accapp.component.ar;

import accapp.objectclasses.ar.Ar_rcpbatchlist;
import accapp.objectclasses.ar.Ar_rcpbatchlists;
import common.component.FrmBrowse;
import common.classinterface.NavigatorFormInt;
import common.classinterface.NavigatorObjectInt;
import common.component.FrmMainFrame;

import common.utils.CodeException;
import common.utils.GlobalUtils;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import common.tablemodels.GlobalModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author  Generator
 */

public class FrmAr_rcph extends javax.swing.JInternalFrame implements NavigatorFormInt {

    private static int istatus = 0;
    private static int iformtype = 0;
    public static String CLASSNAME="FrmAr_rcph";
    
    FrmMainFrame mf ;
    
    Ar_rcpbatchlists obj=new Ar_rcpbatchlists();

    DefaultTableModel tablemodel=null;

    boolean onload = false;
   
    /** Creates new form Area */
    public FrmAr_rcph() throws CodeException {
        initComponents();
    }
    
    public FrmAr_rcph(FrmMainFrame mf) throws CodeException{
        this.mf = mf;
        initComponents();

        tablemodel=(DefaultTableModel) jtblDetail.getModel();

        showdata(jTextField1.getText());
    }
     
       
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jHeader = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jbtnBrowse1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblDetail = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("A/R Receipt Batch List");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        jHeader.setBackground(new java.awt.Color(102, 102, 102));
        jHeader.setFont(new java.awt.Font("Dialog", 1, 10));
        jHeader.setForeground(new java.awt.Color(255, 255, 255));
        jHeader.setText(" : : A/R Receipt Batch List");
        jHeader.setAlignmentY(0.0F);
        jHeader.setOpaque(true);
        getContentPane().add(jHeader);
        jHeader.setBounds(30, 30, 150, 20);

        jSeparator3.setForeground(new java.awt.Color(102, 102, 102));
        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator3.setAlignmentX(0.0F);
        jSeparator3.setAlignmentY(0.0F);
        getContentPane().add(jSeparator3);
        jSeparator3.setBounds(30, 50, 2, 400);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 10));
        jLabel1.setText("Starting Batch Number");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(60, 70, 160, 14);

        jTextField1.setFont(new java.awt.Font("Dialog", 0, 10));
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });
        getContentPane().add(jTextField1);
        jTextField1.setBounds(220, 70, 70, 20);

        jbtnBrowse1.setText("...");
        jbtnBrowse1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowse1ActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnBrowse1);
        jbtnBrowse1.setBounds(290, 70, 30, 17);

        jtblDetail.setFont(new java.awt.Font("Dialog", 0, 10));
        jtblDetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Batch", "Batch Date", "Description", "Entries", "Amount", "Ready", "Type", "Status", "Posting Seq. No", "No. Of Errors", "Last Edited", "Bank", "Bank Currency", "Adjustment Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Boolean.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtblDetail.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jtblDetail.setSurrendersFocusOnKeystroke(true);
        jtblDetail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtblDetailMouseClicked(evt);
            }
        });
        jtblDetail.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jtblDetailPropertyChange(evt);
            }
        });
        jtblDetail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtblDetailKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtblDetailKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jtblDetail);
        jtblDetail.getColumnModel().getColumn(0).setPreferredWidth(70);
        jtblDetail.getColumnModel().getColumn(2).setMinWidth(200);
        jtblDetail.getColumnModel().getColumn(4).setPreferredWidth(150);
        jtblDetail.getColumnModel().getColumn(5).setPreferredWidth(60);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(60, 100, 870, 350);

        jButton2.setFont(new java.awt.Font("Dialog", 0, 10));
        jButton2.setText("Open");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(60, 460, 100, 23);

        jButton3.setFont(new java.awt.Font("Dialog", 0, 10));
        jButton3.setText("New");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(160, 460, 100, 23);

        jButton4.setFont(new java.awt.Font("Dialog", 0, 10));
        jButton4.setText("Delete");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(260, 460, 100, 23);

        jButton5.setFont(new java.awt.Font("Dialog", 0, 10));
        jButton5.setText("Post");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5);
        jButton5.setBounds(360, 460, 100, 23);

        jButton6.setFont(new java.awt.Font("Dialog", 0, 10));
        jButton6.setText("Print");
        getContentPane().add(jButton6);
        jButton6.setBounds(460, 460, 100, 23);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
         try {
            moveFirst();

         } catch (CodeException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_formInternalFrameOpened

private void kdatePurchaseDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kdatePurchaseDateFocusLost

}//GEN-LAST:event_kdatePurchaseDateFocusLost

private void kdatePurchaseDateCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_kdatePurchaseDateCaretPositionChanged

}//GEN-LAST:event_kdatePurchaseDateCaretPositionChanged

private void kdatePurchaseDatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_kdatePurchaseDatePropertyChange

}//GEN-LAST:event_kdatePurchaseDatePropertyChange

private void jbtnBrowse1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBrowse1ActionPerformed
    // TODO add your handling code here:
    try {
        Ar_rcpbatchlists brs = new Ar_rcpbatchlists();
        FrmBrowse bd = new FrmBrowse(brs);
        bd.setFirstValue(jTextField1);
        bd.setModal(true);
        bd.setVisible(true);

        obj.searchData(jTextField1.getText());
        showdata(title);

    } catch (CodeException ex) {
        ex.printStackTrace();
    }
}//GEN-LAST:event_jbtnBrowse1ActionPerformed

private void clearselection(int selectedrow){
    int i=0;

    for (i=0;i<jtblDetail.getRowCount();i++){
        if (i!=selectedrow){
            jtblDetail.setValueAt(false, i, 5);
        }
    }
}
private void jtblDetailPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jtblDetailPropertyChange
    // TODO add your handling code here:
    int irow=jtblDetail.getSelectedRow();
    int icol=jtblDetail.getSelectedColumn();

    
    if (irow>-1&&icol==5){
        if (jtblDetail.getValueAt(irow, 7).toString().equalsIgnoreCase("Posted")||jtblDetail.getValueAt(irow, 7).toString().equalsIgnoreCase("Delete")){
            jButton4.setEnabled(false);
            jButton3.setEnabled(false);
        } else {
            if (Boolean.parseBoolean(jtblDetail.getValueAt(irow, 5).toString())){
                jButton4.setEnabled(true);
            } else {
                jButton4.setEnabled(false);
                jButton3.setEnabled(true);
            }
        }
    }
}//GEN-LAST:event_jtblDetailPropertyChange

private void jtblDetailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtblDetailKeyPressed
    
}//GEN-LAST:event_jtblDetailKeyPressed

private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
    // TODO add your handling code here:
    try {
        this.mf.showReceiptEntry((Ar_rcpbatchlist) obj.list().get(0),1);
    } catch (CodeException ex) {
        Logger.getLogger(FrmAr_invh.class.getName()).log(Level.SEVERE, null, ex);
    }
}//GEN-LAST:event_jButton3ActionPerformed

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    // TODO add your handling code here:
    int row=jtblDetail.getSelectedRow();
    if (row>-1){
        try {
            this.mf.showReceiptEntry((Ar_rcpbatchlist) obj.list().get(row),0);
        } catch (CodeException ex) {
            Logger.getLogger(FrmAr_invh.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}//GEN-LAST:event_jButton2ActionPerformed

private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
    // TODO add your handling code here:
        // TODO add your handling code here:
    int row=jtblDetail.getSelectedRow();

    if (row>-1){
        try {
            Ar_rcpbatchlist arinvb=(Ar_rcpbatchlist) obj.list().get(row);
            deletedata(arinvb, row);
        } catch (CodeException ex) {
            Logger.getLogger(FrmAr_invh.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}//GEN-LAST:event_jButton4ActionPerformed

private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
    // TODO add your handling code here:
        // TODO add your handling code here:
    int row=jtblDetail.getSelectedRow();

    if (row>-1){
        try {
            if (Boolean.parseBoolean(jtblDetail.getValueAt(row, 5).toString())){
                Ar_rcpbatchlist arinvb=(Ar_rcpbatchlist) obj.list().get(row);
                if (postingdata(arinvb, row)){
                    jtblDetail.setValueAt(true, row, 5);
                    jtblDetail.setValueAt("Posted", row, 7);

                    arinvb=new Ar_rcpbatchlist(arinvb.getID());
                    jtblDetail.setValueAt(arinvb.getpostngseq(), row, 8);

                    jButton4.setEnabled(false);
                    jButton3.setEnabled(false);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Invalid Procedure, Batch List Should Be Ready To Post to be Processed!!");
            }
        } catch (CodeException ex) {
            Logger.getLogger(FrmAr_invh.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}//GEN-LAST:event_jButton5ActionPerformed

private void jtblDetailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtblDetailKeyReleased
    // TODO add your handling code here:
    int irow=jtblDetail.getSelectedRow();

    if (irow>-1){
        if (evt.getKeyCode()==evt.VK_UP||evt.getKeyCode()==evt.VK_DOWN){
            if (jtblDetail.getValueAt(irow, 7).toString().equalsIgnoreCase("Posted")||jtblDetail.getValueAt(irow, 7).toString().equalsIgnoreCase("Delete")){
                jButton4.setEnabled(false);
                jButton3.setEnabled(false);
            } else {
                if (Boolean.parseBoolean(jtblDetail.getValueAt(irow, 5).toString())){
                    jButton4.setEnabled(true);
                } else {
                    jButton4.setEnabled(false);
                    jButton3.setEnabled(true);
                }
            }
        }
    }

}//GEN-LAST:event_jtblDetailKeyReleased

private void jtblDetailMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtblDetailMouseClicked
    // TODO add your handling code here:
    int irow=jtblDetail.getSelectedRow();
    int icol=jtblDetail.getSelectedColumn();

    if (irow>-1){
        jButton2.setEnabled(true);
        if (jtblDetail.getValueAt(irow, 7).toString().equalsIgnoreCase("Posted")||jtblDetail.getValueAt(irow, 7).toString().equalsIgnoreCase("Deleted")){
            jButton4.setEnabled(false);
            jButton3.setEnabled(true);
            jButton5.setEnabled(false);
            jtblDetail.setValueAt(true, irow, 5);
        } else {
            jButton4.setEnabled(true);
            jButton3.setEnabled(true);
            if (icol==5){
                try {
                    Ar_rcpbatchlist apinvb = (Ar_rcpbatchlist) obj.list().get(irow);
                    if (Boolean.parseBoolean(jtblDetail.getValueAt(irow, 5).toString())){
                        apinvb.ReadtoPostMe(true);
                        jButton5.setEnabled(true);
                    } else {
                        apinvb.ReadtoPostMe(false);
                        jButton5.setEnabled(false);
                    }
                } catch (CodeException ex) {
                        Logger.getLogger(FrmAr_rcph.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }
}//GEN-LAST:event_jtblDetailMouseClicked

private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
    // TODO add your handling code here:
    if (evt.getKeyCode()==evt.VK_ENTER){
        showdata(jTextField1.getText());
    }
}//GEN-LAST:event_jTextField1KeyPressed
private Boolean deletedata(Ar_rcpbatchlist arinvb,int row){
    int idelete;
        try {
            idelete = JOptionPane.showConfirmDialog(null, "Do you want to delete entry# " + arinvb.getbatchno(), "Delete", JOptionPane.YES_NO_OPTION);
            if (idelete == JOptionPane.YES_OPTION) {
                arinvb.delete();
                obj.list().remove(row);
                tablemodel.removeRow(row);
            }
        } catch (CodeException ex) {
            Logger.getLogger(FrmAr_invh.class.getName()).log(Level.SEVERE, null, ex);
        }


    return false;
}
private Boolean postingdata(Ar_rcpbatchlist arinvb,int row){
    int idelete;
        try {
            idelete = JOptionPane.showConfirmDialog(null, "Do you want to post entry# " + arinvb.getbatchno(), "Delete", JOptionPane.YES_NO_OPTION);
            if (idelete == JOptionPane.YES_OPTION) {
                if (arinvb.runARReceiptPosting(arinvb.getbatchno(), arinvb.getbatchno())){
                    return true;
                }
            }
        } catch (CodeException ex) {
            Logger.getLogger(FrmAr_invh.class.getName()).log(Level.SEVERE, null, ex);
        }


    return false;
}
private void showdata(String batchno){
        try {
            obj.searchData(batchno);

            GlobalModel.clearRow(tablemodel);
            for (Object o: obj.list()){
                Ar_rcpbatchlist arrcpbatch=(Ar_rcpbatchlist) o;

                tablemodel.addRow(new Object[14]);
                tablemodel.setValueAt(arrcpbatch.getbatchno(), tablemodel.getRowCount()-1, 0);//Batch Number,
                tablemodel.setValueAt(arrcpbatch.getbatchdate(), tablemodel.getRowCount()-1, 1);//Batch Date,
                tablemodel.setValueAt(arrcpbatch.getbatchdesc(), tablemodel.getRowCount()-1, 2);//Description,
                tablemodel.setValueAt(arrcpbatch.getrcpentrcnt(), tablemodel.getRowCount()-1, 3);//#Entries,
                tablemodel.setValueAt(arrcpbatch.gettotrcpamt(), tablemodel.getRowCount()-1, 4);//Total Amount,
                if(arrcpbatch.getbatchsts().equalsIgnoreCase("2")){
                    tablemodel.setValueAt(true, tablemodel.getRowCount()-1, 5);//Ready To Post,
                } else {
                    tablemodel.setValueAt(false, tablemodel.getRowCount()-1, 5);//Ready To Post,
                }
                tablemodel.setValueAt(arrcpbatch.gettypedescription(), tablemodel.getRowCount()-1, 6);//Type,

                
                tablemodel.setValueAt(arrcpbatch.getstatusdescription(), tablemodel.getRowCount()-1, 7);//Status,
                tablemodel.setValueAt(arrcpbatch.getpostngseq(), tablemodel.getRowCount()-1, 8);//Posting Seq. No,
                tablemodel.setValueAt("0", tablemodel.getRowCount()-1, 9);//No. Of Errors,
                tablemodel.setValueAt(arrcpbatch.getauditdate(), tablemodel.getRowCount()-1, 10);//Last Edited,
                tablemodel.setValueAt(arrcpbatch.getbankcode(), tablemodel.getRowCount()-1, 11);//Bank,
                tablemodel.setValueAt(arrcpbatch.getcurnccode(), tablemodel.getRowCount()-1, 12);//Bank Currency,
                tablemodel.setValueAt(arrcpbatch.getadjustamt(), tablemodel.getRowCount()-1, 13);//Adjustment Amount
            }
            jButton2.setEnabled(false);
            jButton4.setEnabled(false);
            jButton5.setEnabled(false);
            jButton6.setEnabled(false);
        } catch (CodeException ex) {
            Logger.getLogger(FrmAr_rcph.class.getName()).log(Level.SEVERE, null, ex);
        }
}

private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
    if (!onload) {
        onload = true;
    }
    showdata(jTextField1.getText());

    setToolBar(iformtype,istatus);
    mf.setIcon(CLASSNAME);
}                                           

                                                                              

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new FrmAr_rcph().setVisible(true);
                } catch (CodeException ex) {
                    ex.printStackTrace();
                }
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jHeader;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton jbtnBrowse1;
    private javax.swing.JTable jtblDetail;
    // End of variables declaration//GEN-END:variables

 
    public void moveFirst() throws CodeException {
    }

    public void movePrevious() throws CodeException {
    }

    public void moveNext() throws CodeException {
    }

    public void moveLast() throws CodeException {
    }

    public void searchData() throws CodeException {
        showData();
        mf.setIcon(CLASSNAME);

    }
    public void newData() throws CodeException {
    }

    public void saveData() throws CodeException {
        istatus = 0;
        setData();
        obj.save();
        
        showData();
        
        mf.setIcon(CLASSNAME);
    }

    public void showData() throws CodeException {
        
    }

    public void delete() throws CodeException {
    }

    public void setToolBar(int iFormType, int istatus) {
        mf.setToolBar(iformtype,istatus);        
    }

    public void setData() throws CodeException {
    }

    public void undo() throws CodeException {
    }

    public void execute() throws CodeException {
    }

    public void printData() throws CodeException {
    }

    public void importCsv() throws CodeException {
    }

    public void exportCsv() throws CodeException {
        
    }

    public void importText() throws CodeException {
    }

    public void exportText() throws CodeException {
    }

    
}
