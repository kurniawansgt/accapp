/*
 * From Template
 *
 * Created on June 29, 2007, 2:00 PM
 * 
 * 
 * How to Call this Form on FrmMainFrame
 * Sample : 
 *    
 * import accapp.component.ar.FrmAr_custgrp;
 * 
 * .......
 * 
 * 
 * FrmAr_custgrp frmAr_custgrp;
 * 
 * .......
 * 
 try {
        if (frmAr_custgrp == null) {
            frmmAr_custgrp = new FrmAr_custgrp(this);
        }
        
        showForm(frmAr_custgrp);
        
    }catch(Exception e) {
        e.printStackTrace();
    }
 * 
 */

package accapp.component.ar;

import accapp.objectclasses.ar.Ar_accsets;
import accapp.objectclasses.ar.Ar_billcycls;
import common.component.FrmBrowse;
import common.classinterface.NavigatorFormInt;
import common.classinterface.NavigatorObjectInt;
import common.component.FrmMainFrame;

import common.utils.CodeException;
import common.utils.GlobalUtils;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import common.utils.ExtFileChooserFilter;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;
import accapp.objectclasses.ar.Ar_custgrp;
import accapp.objectclasses.ar.Ar_custgrps;
import accapp.objectclasses.ar.Ar_custgrpsts;
import accapp.objectclasses.ar.Ar_interests;
import accapp.objectclasses.op.Op_paymentterms;
import common.print.FrmPrintMasterARCustommerGroup;
import java.awt.event.KeyEvent;
import java.util.Date;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author  Generator
 */

public class FrmAr_custgrp extends javax.swing.JInternalFrame implements NavigatorFormInt {

    private static int istatus = 0;
    private static int iformtype = 0;
    public static String CLASSNAME="FrmAr_custgrp";
    
    FrmMainFrame mf ;

    public Ar_custgrp obj = new Ar_custgrp();


    private Date date = new Date();


    DefaultTableModel tmodel;
   
    /** Creates new form Area */
    public FrmAr_custgrp() throws CodeException {
        initComponents();
    }
    
    public FrmAr_custgrp(FrmMainFrame mf) throws CodeException{
        this.mf = mf;
        initComponents();

        setMonth();

        jtxtyop.setText((date.getYear() + 1900)+"");

        tmodel = (DefaultTableModel) jtblStatistic.getModel();

    
    }

    private void setMonth() {

        for(int i = 0; i < 12; i++) {
            jcmbMonth.addItem((i+1));
        }

    }
       
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jHeader = new javax.swing.JLabel();
        HorizontalLine = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jtxtid = new javax.swing.JTextField();
        jlblgrpcode = new javax.swing.JLabel();
        jtxtgrpcode = new javax.swing.JTextField();
        jtxtdscription = new javax.swing.JTextField();
        jtxtentrydate = new javax.swing.JTextField();
        jtxtauditdate = new javax.swing.JTextField();
        jtxtaudituser = new javax.swing.JTextField();
        jtxtcmpnyid = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jlblaccsetcode = new javax.swing.JLabel();
        jtxtaccsetcode = new javax.swing.JTextField();
        jlblcyclcode = new javax.swing.JLabel();
        jtxtcyclcode = new javax.swing.JTextField();
        jlblintrschrcode = new javax.swing.JLabel();
        jtxtintrschrcode = new javax.swing.JTextField();
        jlbltermcode = new javax.swing.JLabel();
        jtxttermcode = new javax.swing.JTextField();
        jbtnBrowseTermCode = new javax.swing.JButton();
        jbtnBrowseAccountSet = new javax.swing.JButton();
        jbtnBrowseCyclCode = new javax.swing.JButton();
        jbtnBrowseIntrSchr = new javax.swing.JButton();
        jtxttermdesc = new javax.swing.JTextField();
        jtxtaccsetdesc = new javax.swing.JTextField();
        jtxtcycldesc = new javax.swing.JTextField();
        jtxtintrschrdesc = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jcmbMonth = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jtxtyop = new javax.swing.JTextField();
        jbtnFind = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblStatistic = new javax.swing.JTable();
        jchkActive = new javax.swing.JCheckBox();
        jbtnBrowse = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("A/R Customer Group");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        jHeader.setBackground(new java.awt.Color(102, 102, 102));
        jHeader.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jHeader.setForeground(new java.awt.Color(255, 255, 255));
        jHeader.setText(" : : Customer Group");
        jHeader.setAlignmentY(0.0F);
        jHeader.setOpaque(true);
        getContentPane().add(jHeader);
        jHeader.setBounds(30, 30, 130, 20);

        HorizontalLine.setForeground(new java.awt.Color(102, 102, 102));
        HorizontalLine.setAlignmentX(0.0F);
        HorizontalLine.setAlignmentY(0.0F);
        getContentPane().add(HorizontalLine);
        HorizontalLine.setBounds(160, 50, 650, 2);

        jSeparator3.setForeground(new java.awt.Color(102, 102, 102));
        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator3.setAlignmentX(0.0F);
        jSeparator3.setAlignmentY(0.0F);
        getContentPane().add(jSeparator3);
        jSeparator3.setBounds(30, 50, 2, 400);

        jtxtid.setEditable(false);
        jtxtid.setFont(new java.awt.Font("Dialog", 0, 8)); // NOI18N
        jtxtid.setText("id");
        getContentPane().add(jtxtid);
        jtxtid.setBounds(170, 30, 80, 20);

        jlblgrpcode.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jlblgrpcode.setText("Group Code");
        getContentPane().add(jlblgrpcode);
        jlblgrpcode.setBounds(50, 80, 100, 14);

        jtxtgrpcode.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jtxtgrpcode.setText("grpcode");
        jtxtgrpcode.setNextFocusableComponent(jtxtdscription);
        jtxtgrpcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtgrpcodeKeyPressed(evt);
            }
        });
        getContentPane().add(jtxtgrpcode);
        jtxtgrpcode.setBounds(160, 80, 80, 20);

        jtxtdscription.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jtxtdscription.setText("dscription");
        jtxtdscription.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtdscriptionKeyPressed(evt);
            }
        });
        getContentPane().add(jtxtdscription);
        jtxtdscription.setBounds(300, 80, 310, 20);

        jtxtentrydate.setEditable(false);
        jtxtentrydate.setFont(new java.awt.Font("Dialog", 0, 8)); // NOI18N
        jtxtentrydate.setText("entrydate");
        getContentPane().add(jtxtentrydate);
        jtxtentrydate.setBounds(300, 30, 130, 20);

        jtxtauditdate.setEditable(false);
        jtxtauditdate.setFont(new java.awt.Font("Dialog", 0, 8)); // NOI18N
        jtxtauditdate.setText("auditdate");
        getContentPane().add(jtxtauditdate);
        jtxtauditdate.setBounds(440, 30, 130, 20);

        jtxtaudituser.setEditable(false);
        jtxtaudituser.setFont(new java.awt.Font("Dialog", 0, 8)); // NOI18N
        jtxtaudituser.setText("audituser");
        getContentPane().add(jtxtaudituser);
        jtxtaudituser.setBounds(575, 30, 130, 20);

        jtxtcmpnyid.setEditable(false);
        jtxtcmpnyid.setFont(new java.awt.Font("Dialog", 0, 8)); // NOI18N
        jtxtcmpnyid.setText("cmpnyid");
        getContentPane().add(jtxtcmpnyid);
        jtxtcmpnyid.setBounds(710, 30, 100, 20);

        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);
        jTabbedPane1.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N

        jPanel1.setLayout(null);

        jlblaccsetcode.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jlblaccsetcode.setText("Account Set Code");
        jPanel1.add(jlblaccsetcode);
        jlblaccsetcode.setBounds(10, 20, 140, 14);

        jtxtaccsetcode.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jtxtaccsetcode.setText("accsetcode");
        jtxtaccsetcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtaccsetcodeKeyPressed(evt);
            }
        });
        jPanel1.add(jtxtaccsetcode);
        jtxtaccsetcode.setBounds(200, 20, 120, 20);

        jlblcyclcode.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jlblcyclcode.setText("Billing Cycle Code");
        jPanel1.add(jlblcyclcode);
        jlblcyclcode.setBounds(10, 50, 140, 14);

        jtxtcyclcode.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jtxtcyclcode.setText("cyclcode");
        jtxtcyclcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtcyclcodeKeyPressed(evt);
            }
        });
        jPanel1.add(jtxtcyclcode);
        jtxtcyclcode.setBounds(200, 50, 120, 20);

        jlblintrschrcode.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jlblintrschrcode.setText("Interest Profile Code");
        jPanel1.add(jlblintrschrcode);
        jlblintrschrcode.setBounds(10, 80, 140, 14);

        jtxtintrschrcode.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jtxtintrschrcode.setText("intrschrcode");
        jtxtintrschrcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtintrschrcodeKeyPressed(evt);
            }
        });
        jPanel1.add(jtxtintrschrcode);
        jtxtintrschrcode.setBounds(200, 80, 120, 20);

        jlbltermcode.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jlbltermcode.setText("Term Code");
        jPanel1.add(jlbltermcode);
        jlbltermcode.setBounds(10, 110, 140, 14);

        jtxttermcode.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jtxttermcode.setText("termcode");
        jPanel1.add(jtxttermcode);
        jtxttermcode.setBounds(200, 110, 120, 20);

        jbtnBrowseTermCode.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jbtnBrowseTermCode.setText("...");
        jbtnBrowseTermCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowseTermCodeActionPerformed(evt);
            }
        });
        jPanel1.add(jbtnBrowseTermCode);
        jbtnBrowseTermCode.setBounds(320, 110, 25, 17);

        jbtnBrowseAccountSet.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jbtnBrowseAccountSet.setText("...");
        jbtnBrowseAccountSet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowseAccountSetActionPerformed(evt);
            }
        });
        jPanel1.add(jbtnBrowseAccountSet);
        jbtnBrowseAccountSet.setBounds(320, 20, 25, 17);

        jbtnBrowseCyclCode.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jbtnBrowseCyclCode.setText("...");
        jbtnBrowseCyclCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowseCyclCodeActionPerformed(evt);
            }
        });
        jPanel1.add(jbtnBrowseCyclCode);
        jbtnBrowseCyclCode.setBounds(320, 50, 25, 17);

        jbtnBrowseIntrSchr.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jbtnBrowseIntrSchr.setText("...");
        jbtnBrowseIntrSchr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowseIntrSchrActionPerformed(evt);
            }
        });
        jPanel1.add(jbtnBrowseIntrSchr);
        jbtnBrowseIntrSchr.setBounds(320, 80, 25, 17);

        jtxttermdesc.setEditable(false);
        jtxttermdesc.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jtxttermdesc.setText("termdesc");
        jPanel1.add(jtxttermdesc);
        jtxttermdesc.setBounds(360, 110, 270, 20);

        jtxtaccsetdesc.setEditable(false);
        jtxtaccsetdesc.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jtxtaccsetdesc.setText("accsetdesc");
        jPanel1.add(jtxtaccsetdesc);
        jtxtaccsetdesc.setBounds(360, 20, 270, 20);

        jtxtcycldesc.setEditable(false);
        jtxtcycldesc.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jtxtcycldesc.setText("cycldesc");
        jPanel1.add(jtxtcycldesc);
        jtxtcycldesc.setBounds(360, 50, 270, 20);

        jtxtintrschrdesc.setEditable(false);
        jtxtintrschrdesc.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jtxtintrschrdesc.setText("intrschrdesc");
        jPanel1.add(jtxtintrschrdesc);
        jtxtintrschrdesc.setBounds(360, 80, 270, 20);

        jTabbedPane1.addTab("Group", jPanel1);

        jPanel2.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jLabel1.setText("Month");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(20, 10, 80, 14);

        jcmbMonth.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jPanel2.add(jcmbMonth);
        jcmbMonth.setBounds(100, 10, 50, 20);

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jLabel2.setText("Year");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(160, 10, 70, 14);

        jtxtyop.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jtxtyop.setText("yop");
        jPanel2.add(jtxtyop);
        jtxtyop.setBounds(230, 10, 70, 20);

        jbtnFind.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jbtnFind.setText("Find");
        jbtnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnFindActionPerformed(evt);
            }
        });
        jPanel2.add(jbtnFind);
        jbtnFind.setBounds(300, 10, 53, 20);

        jtblStatistic.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jtblStatistic.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Invoices", null, null},
                {"Reciepts", null, null},
                {"Discounts", null, null},
                {"Credit Notes", null, null},
                {"Debit Notes", null, null},
                {"Adjustments", null, null},
                {"Write Offs", null, null},
                {"Interest Charges", null, null},
                {"Return Checks", null, null},
                {"Total Invoices Paid", null, null}
            },
            new String [] {
                "Transaction Type", "Amount", "Count"
            }
        ));
        jtblStatistic.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane1.setViewportView(jtblStatistic);
        jtblStatistic.getColumnModel().getColumn(0).setPreferredWidth(200);
        jtblStatistic.getColumnModel().getColumn(1).setPreferredWidth(150);
        jtblStatistic.getColumnModel().getColumn(2).setPreferredWidth(150);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(20, 50, 620, 220);

        jTabbedPane1.addTab("Statistic", jPanel2);

        getContentPane().add(jTabbedPane1);
        jTabbedPane1.setBounds(50, 110, 670, 330);

        jchkActive.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jchkActive.setText("Active");
        jchkActive.setNextFocusableComponent(jtxtaccsetcode);
        jchkActive.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jchkActiveKeyPressed(evt);
            }
        });
        getContentPane().add(jchkActive);
        jchkActive.setBounds(620, 80, 70, 23);

        jbtnBrowse.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jbtnBrowse.setText("...");
        jbtnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowseActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnBrowse);
        jbtnBrowse.setBounds(240, 80, 25, 17);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
         try {
            moveFirst();

         } catch (CodeException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_formInternalFrameOpened

private void kdatePurchaseDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kdatePurchaseDateFocusLost

}//GEN-LAST:event_kdatePurchaseDateFocusLost

private void kdatePurchaseDateCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_kdatePurchaseDateCaretPositionChanged

}//GEN-LAST:event_kdatePurchaseDateCaretPositionChanged

private void kdatePurchaseDatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_kdatePurchaseDatePropertyChange

}//GEN-LAST:event_kdatePurchaseDatePropertyChange

private void jbtnBrowseAccountSetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBrowseAccountSetActionPerformed
      try {
	      Ar_accsets brs = new Ar_accsets();
	      FrmBrowse bd = new FrmBrowse(brs);
	      bd.setFirstValue(jtxtaccsetcode);
	      bd.setSecondValue(jtxtaccsetdesc);
	      bd.setModal(true);
	      bd.setVisible(true);

	  } catch (CodeException ex) {
	      ex.printStackTrace();
	  }

}//GEN-LAST:event_jbtnBrowseAccountSetActionPerformed

private void jbtnBrowseCyclCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBrowseCyclCodeActionPerformed
      try {
	      Ar_billcycls brs = new Ar_billcycls();
	      FrmBrowse bd = new FrmBrowse( brs);
	      bd.setFirstValue(jtxtcyclcode);
	      bd.setSecondValue(jtxtcycldesc);
	      bd.setModal(true);
	      bd.setVisible(true);

	  } catch (CodeException ex) {
	      ex.printStackTrace();
	  }

}//GEN-LAST:event_jbtnBrowseCyclCodeActionPerformed

private void jbtnBrowseIntrSchrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBrowseIntrSchrActionPerformed
      try {
	      Ar_interests brs = new Ar_interests();
	      FrmBrowse bd = new FrmBrowse( brs);
	      bd.setFirstValue(jtxtintrschrcode);
	      bd.setSecondValue(jtxtintrschrdesc);
	      bd.setModal(true);
	      bd.setVisible(true);

	  } catch (CodeException ex) {
	      ex.printStackTrace();
	  }
}//GEN-LAST:event_jbtnBrowseIntrSchrActionPerformed

private void jbtnBrowseTermCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBrowseTermCodeActionPerformed
      try {
	      Op_paymentterms brs = new Op_paymentterms();
	      FrmBrowse bd = new FrmBrowse( brs);
	      bd.setFirstValue(jtxttermcode);
	      bd.setSecondValue(jtxttermdesc);
	      bd.setModal(true);
	      bd.setVisible(true);

	  } catch (CodeException ex) {
	      ex.printStackTrace();
	  }
}//GEN-LAST:event_jbtnBrowseTermCodeActionPerformed

private void jbtnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnFindActionPerformed

   findStatistic();
   
}//GEN-LAST:event_jbtnFindActionPerformed

private void jbtnBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBrowseActionPerformed
        try {
	      Ar_custgrps brs = new Ar_custgrps();
	      FrmBrowse bd = new FrmBrowse(this, brs);
	      bd.setFirstValue(jtxtgrpcode);
	      bd.setModal(true);
	      bd.setVisible(true);

	  } catch (CodeException ex) {
	      ex.printStackTrace();
	  }
}//GEN-LAST:event_jbtnBrowseActionPerformed

private void jtxtgrpcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtgrpcodeKeyPressed

    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        jtxtdscription.requestFocus();
    }

    
}//GEN-LAST:event_jtxtgrpcodeKeyPressed

private void jtxtdscriptionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtdscriptionKeyPressed

    if(evt.getKeyCode() == KeyEvent.VK_ENTER){
        jchkActive.requestFocus();
    }
    
}//GEN-LAST:event_jtxtdscriptionKeyPressed

private void jchkActiveKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jchkActiveKeyPressed

    if (evt.getKeyCode() == KeyEvent.VK_ENTER){
        jtxtaccsetcode.requestFocus();
    }
    
}//GEN-LAST:event_jchkActiveKeyPressed

private void jtxtaccsetcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtaccsetcodeKeyPressed
    if(evt.getKeyCode() == KeyEvent.VK_ENTER){
        try{
            obj.setaccsetcode(jtxtaccsetcode.getText());
            jtxtaccsetdesc.setText(obj.getAR_accsetDesc());
        }catch(Exception e){}
        
        jtxtcyclcode.requestFocus();
    }

}//GEN-LAST:event_jtxtaccsetcodeKeyPressed

private void jtxtcyclcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtcyclcodeKeyPressed

    if(evt.getKeyCode() == KeyEvent.VK_ENTER){
        try{
            obj.setcyclcode(jtxtcyclcode.getText());
            jtxtcycldesc.setText(obj.getAR_billcyclsDesc());
        }catch(Exception e){}

        
        jtxtintrschrcode.requestFocus();
    }
}//GEN-LAST:event_jtxtcyclcodeKeyPressed

private void jtxtintrschrcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtintrschrcodeKeyPressed

    if(evt.getKeyCode() == KeyEvent.VK_ENTER){
        try{
            obj.setintrschrcode(jtxtintrschrcode.getText());
            jtxtintrschrdesc.setText(obj.getAR_intrschrDesc());
        }catch(Exception e){}

        jtxttermcode.requestFocus();
    }
}//GEN-LAST:event_jtxtintrschrcodeKeyPressed

private void findStatistic() {
     setCursor(GlobalUtils.HOURGLASSCURSOR);

    try{

        Ar_custgrpsts arc = new Ar_custgrpsts();
        arc.searchData(jtxtyop.getText(), jcmbMonth.getSelectedItem()+"", jtxtgrpcode.getText());


        tmodel.setValueAt(arc.getinvamt(), 0, 1);
        tmodel.setValueAt(arc.getinvcnt(), 0, 2);

        tmodel.setValueAt(arc.getpayamt(), 1, 1);
        tmodel.setValueAt(arc.getpaycnt(), 1, 2);

        tmodel.setValueAt(arc.getdiscamt(), 2, 1);
        tmodel.setValueAt(arc.getdisccnt(), 2, 2);

        tmodel.setValueAt(arc.getcnamt(), 3, 1);
        tmodel.setValueAt(arc.getcncnt(), 3, 2);

        tmodel.setValueAt(arc.getdnamt(), 4, 1);
        tmodel.setValueAt(arc.getdncnt(), 4, 2);

        tmodel.setValueAt(arc.getadjamt(), 5, 1);
        tmodel.setValueAt(arc.getadjcnt(), 5, 2);

        tmodel.setValueAt(arc.getwroffamt(), 6, 1);
        tmodel.setValueAt(arc.getwroffcnt(), 6, 2);

        tmodel.setValueAt(arc.getinttamt(), 7, 1);
        tmodel.setValueAt(arc.getinttcnt(), 7, 2);

        tmodel.setValueAt(arc.getrtrchckamt(), 8, 1);
        tmodel.setValueAt(arc.getrtrchckcnt(), 8, 2);

        tmodel.setValueAt(arc.getinvpaidamt(), 9, 1);
        tmodel.setValueAt(arc.getinvpaidcnt(), 9, 2);


    }catch(Exception e) {}
    setCursor(GlobalUtils.NORMALCURSOR);

}
private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {                                            
    setToolBar(iformtype,istatus);
    mf.setIcon(CLASSNAME);
}                                           


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new FrmAr_custgrp().setVisible(true);
                } catch (CodeException ex) {
                    ex.printStackTrace();
                }
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSeparator HorizontalLine;
    private javax.swing.JLabel jHeader;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton jbtnBrowse;
    private javax.swing.JButton jbtnBrowseAccountSet;
    private javax.swing.JButton jbtnBrowseCyclCode;
    private javax.swing.JButton jbtnBrowseIntrSchr;
    private javax.swing.JButton jbtnBrowseTermCode;
    private javax.swing.JButton jbtnFind;
    private javax.swing.JCheckBox jchkActive;
    private javax.swing.JComboBox jcmbMonth;
    private javax.swing.JLabel jlblaccsetcode;
    private javax.swing.JLabel jlblcyclcode;
    private javax.swing.JLabel jlblgrpcode;
    private javax.swing.JLabel jlblintrschrcode;
    private javax.swing.JLabel jlbltermcode;
    private javax.swing.JTable jtblStatistic;
    private javax.swing.JTextField jtxtaccsetcode;
    private javax.swing.JTextField jtxtaccsetdesc;
    private javax.swing.JTextField jtxtauditdate;
    private javax.swing.JTextField jtxtaudituser;
    private javax.swing.JTextField jtxtcmpnyid;
    private javax.swing.JTextField jtxtcyclcode;
    private javax.swing.JTextField jtxtcycldesc;
    private javax.swing.JTextField jtxtdscription;
    private javax.swing.JTextField jtxtentrydate;
    private javax.swing.JTextField jtxtgrpcode;
    private javax.swing.JTextField jtxtid;
    private javax.swing.JTextField jtxtintrschrcode;
    private javax.swing.JTextField jtxtintrschrdesc;
    private javax.swing.JTextField jtxttermcode;
    private javax.swing.JTextField jtxttermdesc;
    private javax.swing.JTextField jtxtyop;
    // End of variables declaration//GEN-END:variables

 
    public void moveFirst() throws CodeException {
        obj.moveFirst();
        showData();
        mf.setIcon(CLASSNAME);
    }

    public void movePrevious() throws CodeException {
        obj.movePrevious();
        showData();
        mf.setIcon(CLASSNAME);
    }

    public void moveNext() throws CodeException {
        obj.moveNext();
        showData();
        mf.setIcon(CLASSNAME);
    }

    public void moveLast() throws CodeException {
        obj.moveLast();
        showData();
        mf.setIcon(CLASSNAME);
    }

    public void searchData() throws CodeException {
        obj = new Ar_custgrp(this.jtxtgrpcode.getText());
        showData();
        mf.setIcon(CLASSNAME);

    }
    public void newData() throws CodeException {
        obj = new Ar_custgrp();
        istatus=1;
        showData();
        setToolBar(iformtype,istatus);
    }

    public void saveData() throws CodeException {
        istatus = 0;
        setData();
        obj.save();
        
        showData();
        
        mf.setIcon(CLASSNAME);
    }

    public void showData() throws CodeException {
        setCursor(GlobalUtils.HOURGLASSCURSOR);
	
             jtxtid.setText(obj.toString(Ar_custgrp.PROPERTY_ID));
             jtxtgrpcode.setText(obj.toString(Ar_custgrp.PROPERTY_GRPCODE));

             jchkActive.setSelected(obj.getactive() == 1 );

             jtxtdscription.setText(obj.toString(Ar_custgrp.PROPERTY_DSCRIPTION));
             jtxtaccsetcode.setText(obj.toString(Ar_custgrp.PROPERTY_ACCSETCODE));
             jtxtaccsetdesc.setText(obj.getAR_accsetDesc());

             jtxtcyclcode.setText(obj.toString(Ar_custgrp.PROPERTY_CYCLCODE));
             jtxtcycldesc.setText(obj.getAR_billcyclsDesc());

             jtxtintrschrcode.setText(obj.toString(Ar_custgrp.PROPERTY_INTRSCHRCODE));
             jtxtintrschrdesc.setText(obj.getintrschrcode());

             jtxttermcode.setText(obj.toString(Ar_custgrp.PROPERTY_TERMCODE));
             jtxttermdesc.setText(obj.getOp_PaymentTermDesc());


             jtxtentrydate.setText(obj.toString(Ar_custgrp.PROPERTY_ENTRYDATE));
             jtxtauditdate.setText(obj.toString(Ar_custgrp.PROPERTY_AUDITDATE));
             jtxtaudituser.setText(obj.toString(Ar_custgrp.PROPERTY_AUDITUSER));
             jtxtcmpnyid.setText(obj.toString(Ar_custgrp.PROPERTY_CMPNYID));
        setCursor(GlobalUtils.NORMALCURSOR);

        findStatistic();
        
    }

    public void delete() throws CodeException {
        obj.delete();
        obj.moveFirst();
        showData();
        mf.setIcon(CLASSNAME);
    }

    public void setToolBar(int iFormType, int istatus) {
        mf.setToolBar(iformtype,istatus);        
    }

    public void setData() throws CodeException {
        
	
          obj.fromString(Ar_custgrp.PROPERTY_ID, jtxtid.getText()) ;
          obj.fromString(Ar_custgrp.PROPERTY_GRPCODE, jtxtgrpcode.getText()) ;
          obj.setactive(jchkActive.isSelected() ? 1 : 0);
          obj.fromString(Ar_custgrp.PROPERTY_DSCRIPTION, jtxtdscription.getText()) ;
          obj.fromString(Ar_custgrp.PROPERTY_ACCSETCODE, jtxtaccsetcode.getText()) ;
          obj.fromString(Ar_custgrp.PROPERTY_CYCLCODE, jtxtcyclcode.getText()) ;
          obj.fromString(Ar_custgrp.PROPERTY_INTRSCHRCODE, jtxtintrschrcode.getText()) ;
          obj.fromString(Ar_custgrp.PROPERTY_TERMCODE, jtxttermcode.getText()) ;
          obj.fromString(Ar_custgrp.PROPERTY_ENTRYDATE, jtxtentrydate.getText()) ;
          obj.fromString(Ar_custgrp.PROPERTY_AUDITDATE, jtxtauditdate.getText()) ;
          obj.fromString(Ar_custgrp.PROPERTY_AUDITUSER, jtxtaudituser.getText()) ;
          obj.fromString(Ar_custgrp.PROPERTY_CMPNYID, jtxtcmpnyid.getText()) ;

    }

    public void undo() throws CodeException {
        istatus = 0;
        moveFirst();
        showData();
    }

    public void execute() throws CodeException {
       saveData();
    }

    public void printData() throws CodeException {
//        Map parameter = new HashMap();
//        NavigatorObjectInt noi = (NavigatorObjectInt) obj;
//        String file   = GlobalUtils.getCurrentDir() +"/Reports/" + noi.getClassName() + ".jrxml";
//        GlobalUtils.printReport(file,  false);
        FrmPrintMasterARCustommerGroup fprint = new FrmPrintMasterARCustommerGroup();
        fprint.setVisible(true);
    }

    public void importCsv() throws CodeException {
            
        String file1 = "";
        String file2 = GlobalUtils.getCurrentDir() + GlobalUtils.temp + obj.TABLEPROCESS + ".csv";   
        
        JFileChooser chooser = new JFileChooser(".");
        chooser.setDialogTitle("Pilih File ");
        FileFilter filter1 = new ExtFileChooserFilter("CSV", new String[] { "CSV"});
        chooser.setFileFilter(filter1);

        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            File selectedFile = chooser.getSelectedFile();
            
            try {
                file1 = selectedFile.getCanonicalPath();
            
            }catch (Exception e) {}

            GlobalUtils.copyfile(file1, file2 );                

            obj.importCsv();
            
        }else {
          JOptionPane.showMessageDialog(null,"No Selection ");
        }

    }

    public void exportCsv() throws CodeException {
        
    
        if (obj.exportCsv()) {
            
            String file1 = GlobalUtils.getCurrentDir() + GlobalUtils.temp + obj.TABLEPROCESS + ".csv";   
            String file2 = "";
            
            JFileChooser chooser = new JFileChooser(".");
            chooser.setDialogTitle("Pilih Directory ");
    
            if (chooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
                try {
                    file2 = chooser.getSelectedFile().getCanonicalPath() + ".csv";
                        
                    JOptionPane.showMessageDialog(null, GlobalUtils.copyfile(file1, file2 ));                    
                    
                }catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());                    
                }
                
            }else {
              JOptionPane.showMessageDialog(null,"No Selection ");
            }
    
        }
        
    }

    public void importText() throws CodeException {
        String file1 = "";
        String file2 = GlobalUtils.getCurrentDir() + GlobalUtils.temp + obj.TABLEPROCESS + ".txt";   
        
        JFileChooser chooser = new JFileChooser(".");
        chooser.setDialogTitle("Pilih File ");
        FileFilter filter1 = new ExtFileChooserFilter("txt", new String[] { "txt"});
        chooser.setFileFilter(filter1);


        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            File selectedFile = chooser.getSelectedFile();
            
            try {
                file1 = selectedFile.getCanonicalPath();
            
            }catch (Exception e) {}

            GlobalUtils.copyfile(file1, file2 );                

            obj.importCsv();
            
        }else {
          JOptionPane.showMessageDialog(null,"No Selection ");
        }
    }

    public void exportText() throws CodeException {
        if (obj.exportText()) {
            
            String file1 = GlobalUtils.getCurrentDir() + GlobalUtils.temp + obj.TABLEPROCESS + ".txt";   
            String file2 = "";
            
            JFileChooser chooser = new JFileChooser(".");
            chooser.setDialogTitle("Pilih Directory ");
    
            if (chooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
                try {
                    file2 = chooser.getSelectedFile().getCanonicalPath() + ".txt";                        
                    JOptionPane.showMessageDialog(null, GlobalUtils.copyfile(file1, file2 ));                    
                    
                }catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());                    
                }
                
            }else {
              JOptionPane.showMessageDialog(null,"No Selection ");
            }
    
        } 
    }

    
}
