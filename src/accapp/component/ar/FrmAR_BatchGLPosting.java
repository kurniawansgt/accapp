/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FrmAP_BatchGLPosting.java
 *
 * Created on Jun 27, 2011, 8:48:18 AM
 */

package accapp.component.ar;

import accapp.objectclasses.ar.Ar_invbatchlist;
import accapp.objectclasses.ar.Ar_optiionaldetail1;
import accapp.objectclasses.ar.Ar_rcpbatchlist;
//import accapp.objectclasses.ar.adjustment.Ar_adjbatchlist;
import accapp.objectclasses.ar.adjustment.Ar_adjbatchlist;
import common.classinterface.NavigatorFormInt;
import common.component.FrmMainFrame;
import common.utils.CodeException;
import javax.swing.JOptionPane;

/**
 *
 * @author wgata
 */
public class FrmAR_BatchGLPosting extends javax.swing.JInternalFrame implements NavigatorFormInt {
    FrmMainFrame mf ;
    private static int istatus = 4;
    private static int iformtype = 1;
    public static String CLASSNAME="FrmAP_BatchGLPosting";
    
    /** Creates new form FrmAP_BatchGLPosting */
    public FrmAR_BatchGLPosting (FrmMainFrame mf) {
        this.mf = mf;
        initComponents();

    }

    private void loadNumber() {
        try {
            Ar_optiionaldetail1 apopt = new Ar_optiionaldetail1(Ar_optiionaldetail1.PROPERTY_DOCNUMID, "12" );
            jtxtInvoiceBatchNo.setText(apopt.getdocnum()+"");

            apopt = new Ar_optiionaldetail1(Ar_optiionaldetail1.PROPERTY_DOCNUMID, "13" );
            jtxtPaymentBatchNo.setText(apopt.getdocnum()+"");

            apopt = new Ar_optiionaldetail1(Ar_optiionaldetail1.PROPERTY_DOCNUMID, "14" );
            jtxtAdjustmentBatchesNo.setText(apopt.getdocnum()+"");
            

        }catch (CodeException e) {}
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jchkInvoiceBatches = new javax.swing.JCheckBox();
        jchkPaymentBatches = new javax.swing.JCheckBox();
        jchkBatches = new javax.swing.JCheckBox();
        jtxtInvoiceBatchNo = new javax.swing.JTextField();
        jtxtPaymentBatchNo = new javax.swing.JTextField();
        jtxtAdjustmentBatchesNo = new javax.swing.JTextField();
        jHeader = new javax.swing.JLabel();
        HorizontalLine = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();

        setTitle("A/R Create GL/Batch");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        getContentPane().setLayout(null);

        jchkInvoiceBatches.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jchkInvoiceBatches.setText("Invoice Batches");
        jchkInvoiceBatches.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jchkInvoiceBatchesActionPerformed(evt);
            }
        });
        getContentPane().add(jchkInvoiceBatches);
        jchkInvoiceBatches.setBounds(60, 70, 160, 23);

        jchkPaymentBatches.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jchkPaymentBatches.setText("Receipt Batches");
        jchkPaymentBatches.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jchkPaymentBatchesActionPerformed(evt);
            }
        });
        getContentPane().add(jchkPaymentBatches);
        jchkPaymentBatches.setBounds(60, 100, 190, 23);

        jchkBatches.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jchkBatches.setText("Adjustment Batches");
        getContentPane().add(jchkBatches);
        jchkBatches.setBounds(60, 130, 180, 23);

        jtxtInvoiceBatchNo.setEditable(false);
        jtxtInvoiceBatchNo.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jtxtInvoiceBatchNo.setText("jtxtInvoiceBatchNo");
        getContentPane().add(jtxtInvoiceBatchNo);
        jtxtInvoiceBatchNo.setBounds(290, 70, 60, 20);

        jtxtPaymentBatchNo.setEditable(false);
        jtxtPaymentBatchNo.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jtxtPaymentBatchNo.setText("jtxtPaymentBatchNo");
        getContentPane().add(jtxtPaymentBatchNo);
        jtxtPaymentBatchNo.setBounds(290, 100, 60, 20);

        jtxtAdjustmentBatchesNo.setEditable(false);
        jtxtAdjustmentBatchesNo.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jtxtAdjustmentBatchesNo.setText("jtxtAdjustmentBatchesNo");
        getContentPane().add(jtxtAdjustmentBatchesNo);
        jtxtAdjustmentBatchesNo.setBounds(290, 130, 60, 20);

        jHeader.setBackground(new java.awt.Color(102, 102, 102));
        jHeader.setFont(new java.awt.Font("Dialog", 1, 10));
        jHeader.setForeground(new java.awt.Color(255, 255, 255));
        jHeader.setText(" : : A/R Create GL/Batch");
        jHeader.setAlignmentY(0.0F);
        jHeader.setOpaque(true);
        getContentPane().add(jHeader);
        jHeader.setBounds(30, 30, 130, 20);

        HorizontalLine.setForeground(new java.awt.Color(102, 102, 102));
        HorizontalLine.setAlignmentX(0.0F);
        HorizontalLine.setAlignmentY(0.0F);
        getContentPane().add(HorizontalLine);
        HorizontalLine.setBounds(160, 50, 650, 2);

        jSeparator3.setForeground(new java.awt.Color(102, 102, 102));
        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator3.setAlignmentX(0.0F);
        jSeparator3.setAlignmentY(0.0F);
        getContentPane().add(jSeparator3);
        jSeparator3.setBounds(30, 50, 2, 400);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jchkInvoiceBatchesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jchkInvoiceBatchesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jchkInvoiceBatchesActionPerformed

    private void jchkPaymentBatchesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jchkPaymentBatchesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jchkPaymentBatchesActionPerformed

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated

        setToolBar(iformtype,istatus);
        //mf.setIcon(CLASSNAME);


        loadNumber();

    }//GEN-LAST:event_formInternalFrameActivated


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSeparator HorizontalLine;
    private javax.swing.JLabel jHeader;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JCheckBox jchkBatches;
    private javax.swing.JCheckBox jchkInvoiceBatches;
    private javax.swing.JCheckBox jchkPaymentBatches;
    private javax.swing.JTextField jtxtAdjustmentBatchesNo;
    private javax.swing.JTextField jtxtInvoiceBatchNo;
    private javax.swing.JTextField jtxtPaymentBatchNo;
    // End of variables declaration//GEN-END:variables

    public void delete() throws CodeException {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void moveFirst() throws CodeException {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void movePrevious() throws CodeException {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void moveNext() throws CodeException {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void moveLast() throws CodeException {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void newData() throws CodeException {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void saveData() throws CodeException {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void printData() throws CodeException {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void showData() throws CodeException {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void setToolBar(int iFormType, int istatus) {
        mf.setToolBar(iformtype,istatus);
    }

    public void setData() throws CodeException {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void undo() throws CodeException {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void execute() throws CodeException {
        Ar_invbatchlist apinv = new Ar_invbatchlist();
        Ar_rcpbatchlist appay=new Ar_rcpbatchlist();
        Ar_adjbatchlist apadj=new Ar_adjbatchlist();
        if(jchkInvoiceBatches.isSelected()) {
            if(apinv.checkAPInvoiceTransfer()) {
                apinv.runARInvoiceToGl();
                JOptionPane.showMessageDialog(null, "Done");
            }else {
                JOptionPane.showMessageDialog(null, "Tidak Ada Yang Diposting");
            }
        }

        if(jchkPaymentBatches.isSelected()) {
            if(appay.checkARReceiptTransfer()) {
                appay.runARReceipToGl();
                JOptionPane.showMessageDialog(null, "Done");
            }else {
                JOptionPane.showMessageDialog(null, "Tidak Ada Yang Diposting");
            }
        }

        if(jchkBatches.isSelected()) {
            if(apadj.checkARAdjustmentTransfer()) {
                apadj.runARAdjustmentToGl();
                JOptionPane.showMessageDialog(null, "Done");
            }else {
                JOptionPane.showMessageDialog(null, "Tidak Ada Yang Diposting");
            }
        }
        

        loadNumber();
    }

    public void searchData() throws CodeException {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void importCsv() throws CodeException {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void exportCsv() throws CodeException {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void importText() throws CodeException {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void exportText() throws CodeException {
        throw new UnsupportedOperationException("Not supported yet.");
    }

}
