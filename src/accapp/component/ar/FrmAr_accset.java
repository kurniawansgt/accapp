/*
 * From Template
 *
 * Created on June 29, 2007, 2:00 PM
 * 
 * 
 * How to Call this Form on FrmMainFrame
 * Sample : 
 *    
 * import accapp.component.ar.FrmAr_accset;
 * 
 * .......
 * 
 * 
 * FrmAr_accset frmAr_accset;
 * 
 * .......
 * 
 try {
        if (frmAr_accset == null) {
            frmmAr_accset = new FrmAr_accset(this);
        }
        
        showForm(frmAr_accset);
        
    }catch(Exception e) {
        e.printStackTrace();
    }
 * 
 */

package accapp.component.ar;

import common.component.FrmBrowse;
import common.classinterface.NavigatorFormInt;
import common.classinterface.NavigatorObjectInt;
import common.component.FrmMainFrame;

import common.utils.CodeException;
import common.utils.GlobalUtils;
import java.awt.event.KeyEvent;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import common.utils.ExtFileChooserFilter;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;
import accapp.objectclasses.ar.Ar_accset;
import accapp.objectclasses.ar.Ar_accsets;
import accapp.objectclasses.gl.Gl_account;
import accapp.objectclasses.gl.Gl_accounts;
import accapp.objectclasses.gl.Gl_currency;
import accapp.objectclasses.gl.Gl_currencys;
import common.print.FrmPrintMasterARAccountSet;

/**
 *
 * @author  Generator
 */

public class FrmAr_accset extends javax.swing.JInternalFrame implements NavigatorFormInt {

    private static int istatus = 0;
    private static int iformtype = 0;
    public static String CLASSNAME="FrmAr_accset";
    
    FrmMainFrame mf ;
    
    
    public Ar_accset obj = new Ar_accset();
    
   
    /** Creates new form Area */
    public FrmAr_accset() throws CodeException {
        initComponents();
    }
    
    public FrmAr_accset(FrmMainFrame mf) throws CodeException{
        this.mf = mf;
        initComponents();
    }
     
       
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jHeader = new javax.swing.JLabel();
        HorizontalLine = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jbtnBrowse = new javax.swing.JButton();
        jtxtid = new javax.swing.JTextField();
        jlblaccsetcode = new javax.swing.JLabel();
        jtxtaccsetcode = new javax.swing.JTextField();
        jtxtdscription = new javax.swing.JTextField();
        jlblaracccode = new javax.swing.JLabel();
        jtxtaracccode = new javax.swing.JTextField();
        jlbldiscacccode = new javax.swing.JLabel();
        jtxtdiscacccode = new javax.swing.JTextField();
        jlblprepayacccode = new javax.swing.JLabel();
        jtxtprepayacccode = new javax.swing.JTextField();
        jlblwrofacccode = new javax.swing.JLabel();
        jtxtwrofacccode = new javax.swing.JTextField();
        jlblcurnccode = new javax.swing.JLabel();
        jtxtcurnccode = new javax.swing.JTextField();
        jtxtentrydate = new javax.swing.JTextField();
        jtxtauditdate = new javax.swing.JTextField();
        jtxtaudituser = new javax.swing.JTextField();
        jtxtcmpnyid = new javax.swing.JTextField();
        jchkActive = new javax.swing.JCheckBox();
        jbtnBrowseCurrency = new javax.swing.JButton();
        jbtnBrowseArAcc = new javax.swing.JButton();
        jbtnBrowseDiscAcc = new javax.swing.JButton();
        jbtnBrowsePrepayAcc = new javax.swing.JButton();
        jbtnBrowseWrofAcc = new javax.swing.JButton();
        jtxtCurncCodeDesc = new javax.swing.JTextField();
        jtxtArAccDesc = new javax.swing.JTextField();
        jtxtDiscAccDesc = new javax.swing.JTextField();
        jtxtPrepayAccDesc = new javax.swing.JTextField();
        jtxtWrofAcccodeDesc = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("A/R Account Set");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        jHeader.setBackground(new java.awt.Color(102, 102, 102));
        jHeader.setFont(new java.awt.Font("Dialog", 1, 10));
        jHeader.setForeground(new java.awt.Color(255, 255, 255));
        jHeader.setText(" : : Account Set");
        jHeader.setAlignmentY(0.0F);
        jHeader.setOpaque(true);
        getContentPane().add(jHeader);
        jHeader.setBounds(30, 30, 130, 20);

        HorizontalLine.setForeground(new java.awt.Color(102, 102, 102));
        HorizontalLine.setAlignmentX(0.0F);
        HorizontalLine.setAlignmentY(0.0F);
        getContentPane().add(HorizontalLine);
        HorizontalLine.setBounds(160, 50, 650, 6);

        jSeparator3.setForeground(new java.awt.Color(102, 102, 102));
        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator3.setAlignmentX(0.0F);
        jSeparator3.setAlignmentY(0.0F);
        getContentPane().add(jSeparator3);
        jSeparator3.setBounds(30, 50, 6, 400);

        jbtnBrowse.setFont(new java.awt.Font("Dialog", 0, 10));
        jbtnBrowse.setText("...");
        jbtnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowseActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnBrowse);
        jbtnBrowse.setBounds(340, 100, 30, 20);

        jtxtid.setEditable(false);
        jtxtid.setFont(new java.awt.Font("Dialog", 0, 8));
        jtxtid.setText("id");
        getContentPane().add(jtxtid);
        jtxtid.setBounds(170, 30, 80, 20);

        jlblaccsetcode.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblaccsetcode.setText("Account Set Code");
        getContentPane().add(jlblaccsetcode);
        jlblaccsetcode.setBounds(70, 100, 140, 13);

        jtxtaccsetcode.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtaccsetcode.setText("accsetcode");
        jtxtaccsetcode.setToolTipText("Account Set Code");
        jtxtaccsetcode.setNextFocusableComponent(jtxtdscription);
        jtxtaccsetcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtaccsetcodeKeyPressed(evt);
            }
        });
        getContentPane().add(jtxtaccsetcode);
        jtxtaccsetcode.setBounds(260, 100, 80, 23);

        jtxtdscription.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtdscription.setText("dscription");
        jtxtdscription.setToolTipText("Account Set Description");
        jtxtdscription.setNextFocusableComponent(jchkActive);
        jtxtdscription.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtdscriptionKeyPressed(evt);
            }
        });
        getContentPane().add(jtxtdscription);
        jtxtdscription.setBounds(380, 100, 290, 23);

        jlblaracccode.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblaracccode.setForeground(new java.awt.Color(249, 18, 18));
        jlblaracccode.setText("Receiveables Control*");
        getContentPane().add(jlblaracccode);
        jlblaracccode.setBounds(70, 160, 140, 13);

        jtxtaracccode.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtaracccode.setText("aracccode");
        jtxtaracccode.setToolTipText("A/R Account (COA)");
        jtxtaracccode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtaracccodeKeyPressed(evt);
            }
        });
        getContentPane().add(jtxtaracccode);
        jtxtaracccode.setBounds(260, 160, 170, 23);

        jlbldiscacccode.setFont(new java.awt.Font("Dialog", 1, 10));
        jlbldiscacccode.setForeground(new java.awt.Color(249, 18, 18));
        jlbldiscacccode.setText("Receipt Discount*");
        getContentPane().add(jlbldiscacccode);
        jlbldiscacccode.setBounds(70, 190, 140, 13);

        jtxtdiscacccode.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtdiscacccode.setText("discacccode");
        jtxtdiscacccode.setToolTipText("Discount Account (COA)");
        jtxtdiscacccode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtdiscacccodeKeyPressed(evt);
            }
        });
        getContentPane().add(jtxtdiscacccode);
        jtxtdiscacccode.setBounds(260, 190, 170, 23);

        jlblprepayacccode.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblprepayacccode.setForeground(new java.awt.Color(249, 18, 18));
        jlblprepayacccode.setText("Prepayment Liability*");
        getContentPane().add(jlblprepayacccode);
        jlblprepayacccode.setBounds(70, 220, 140, 13);

        jtxtprepayacccode.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtprepayacccode.setText("prepayacccode");
        jtxtprepayacccode.setToolTipText("Prepayment Account (COA)");
        jtxtprepayacccode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtprepayacccodeKeyPressed(evt);
            }
        });
        getContentPane().add(jtxtprepayacccode);
        jtxtprepayacccode.setBounds(260, 220, 170, 23);

        jlblwrofacccode.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblwrofacccode.setForeground(new java.awt.Color(249, 18, 18));
        jlblwrofacccode.setText("Write offs*");
        getContentPane().add(jlblwrofacccode);
        jlblwrofacccode.setBounds(70, 250, 140, 13);

        jtxtwrofacccode.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtwrofacccode.setText("wrofacccode");
        jtxtwrofacccode.setToolTipText("Write Off Account (COA)");
        jtxtwrofacccode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtwrofacccodeKeyPressed(evt);
            }
        });
        getContentPane().add(jtxtwrofacccode);
        jtxtwrofacccode.setBounds(260, 250, 170, 23);

        jlblcurnccode.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jlblcurnccode.setForeground(new java.awt.Color(249, 18, 18));
        jlblcurnccode.setText("Currency Code*");
        getContentPane().add(jlblcurnccode);
        jlblcurnccode.setBounds(70, 290, 140, 13);

        jtxtcurnccode.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtcurnccode.setText("curnccode");
        jtxtcurnccode.setToolTipText("Currenty Account (COA)");
        jtxtcurnccode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtcurnccodeKeyPressed(evt);
            }
        });
        getContentPane().add(jtxtcurnccode);
        jtxtcurnccode.setBounds(260, 290, 50, 23);

        jtxtentrydate.setEditable(false);
        jtxtentrydate.setFont(new java.awt.Font("Dialog", 0, 8));
        jtxtentrydate.setText("entrydate");
        getContentPane().add(jtxtentrydate);
        jtxtentrydate.setBounds(300, 30, 130, 20);

        jtxtauditdate.setEditable(false);
        jtxtauditdate.setFont(new java.awt.Font("Dialog", 0, 8));
        jtxtauditdate.setText("auditdate");
        getContentPane().add(jtxtauditdate);
        jtxtauditdate.setBounds(440, 30, 120, 20);

        jtxtaudituser.setEditable(false);
        jtxtaudituser.setFont(new java.awt.Font("Dialog", 0, 8));
        jtxtaudituser.setText("audituser");
        getContentPane().add(jtxtaudituser);
        jtxtaudituser.setBounds(570, 30, 130, 20);

        jtxtcmpnyid.setEditable(false);
        jtxtcmpnyid.setFont(new java.awt.Font("Dialog", 0, 8));
        jtxtcmpnyid.setText("cmpnyid");
        getContentPane().add(jtxtcmpnyid);
        jtxtcmpnyid.setBounds(710, 30, 100, 20);

        jchkActive.setFont(new java.awt.Font("Dialog", 0, 10));
        jchkActive.setText("Active");
        jchkActive.setNextFocusableComponent(jtxtaracccode);
        jchkActive.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jchkActiveKeyPressed(evt);
            }
        });
        getContentPane().add(jchkActive);
        jchkActive.setBounds(260, 130, 98, 24);

        jbtnBrowseCurrency.setFont(new java.awt.Font("Dialog", 0, 10));
        jbtnBrowseCurrency.setText("...");
        jbtnBrowseCurrency.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowseCurrencyActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnBrowseCurrency);
        jbtnBrowseCurrency.setBounds(310, 290, 30, 20);

        jbtnBrowseArAcc.setFont(new java.awt.Font("Dialog", 0, 10));
        jbtnBrowseArAcc.setText("...");
        jbtnBrowseArAcc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowseArAccActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnBrowseArAcc);
        jbtnBrowseArAcc.setBounds(430, 160, 30, 20);

        jbtnBrowseDiscAcc.setFont(new java.awt.Font("Dialog", 0, 10));
        jbtnBrowseDiscAcc.setText("...");
        jbtnBrowseDiscAcc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowseDiscAccActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnBrowseDiscAcc);
        jbtnBrowseDiscAcc.setBounds(430, 190, 30, 20);

        jbtnBrowsePrepayAcc.setFont(new java.awt.Font("Dialog", 0, 10));
        jbtnBrowsePrepayAcc.setText("...");
        jbtnBrowsePrepayAcc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowsePrepayAccActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnBrowsePrepayAcc);
        jbtnBrowsePrepayAcc.setBounds(430, 220, 30, 20);

        jbtnBrowseWrofAcc.setFont(new java.awt.Font("Dialog", 0, 10));
        jbtnBrowseWrofAcc.setText("...");
        jbtnBrowseWrofAcc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowseWrofAccActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnBrowseWrofAcc);
        jbtnBrowseWrofAcc.setBounds(430, 250, 30, 20);

        jtxtCurncCodeDesc.setEditable(false);
        jtxtCurncCodeDesc.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtCurncCodeDesc.setText("CurncCodeDesc");
        getContentPane().add(jtxtCurncCodeDesc);
        jtxtCurncCodeDesc.setBounds(350, 290, 270, 23);

        jtxtArAccDesc.setEditable(false);
        jtxtArAccDesc.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtArAccDesc.setText("ArAccDesc");
        getContentPane().add(jtxtArAccDesc);
        jtxtArAccDesc.setBounds(480, 160, 270, 23);

        jtxtDiscAccDesc.setEditable(false);
        jtxtDiscAccDesc.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtDiscAccDesc.setText("DiscAccDesc");
        getContentPane().add(jtxtDiscAccDesc);
        jtxtDiscAccDesc.setBounds(480, 190, 270, 23);

        jtxtPrepayAccDesc.setEditable(false);
        jtxtPrepayAccDesc.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtPrepayAccDesc.setText("PrepayAccDesc");
        getContentPane().add(jtxtPrepayAccDesc);
        jtxtPrepayAccDesc.setBounds(480, 220, 270, 23);

        jtxtWrofAcccodeDesc.setEditable(false);
        jtxtWrofAcccodeDesc.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtWrofAcccodeDesc.setText("WrofAcccodeDesc");
        getContentPane().add(jtxtWrofAcccodeDesc);
        jtxtWrofAcccodeDesc.setBounds(480, 250, 270, 23);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
         try {
            moveFirst();

         } catch (CodeException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_formInternalFrameOpened

private void kdatePurchaseDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kdatePurchaseDateFocusLost

}//GEN-LAST:event_kdatePurchaseDateFocusLost

private void kdatePurchaseDateCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_kdatePurchaseDateCaretPositionChanged

}//GEN-LAST:event_kdatePurchaseDateCaretPositionChanged

private void kdatePurchaseDatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_kdatePurchaseDatePropertyChange

}//GEN-LAST:event_kdatePurchaseDatePropertyChange

private void jbtnBrowseArAccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBrowseArAccActionPerformed
          try {
	      Gl_accounts brs = new Gl_accounts();
	      FrmBrowse bd = new FrmBrowse(brs);
	      bd.setFirstValue(jtxtaracccode);
              bd.setSecondValue(jtxtArAccDesc);
	      bd.setModal(true);
	      bd.setVisible(true);

	  } catch (CodeException ex) {
	      ex.printStackTrace();
	  }
}//GEN-LAST:event_jbtnBrowseArAccActionPerformed

private void jbtnBrowseDiscAccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBrowseDiscAccActionPerformed
          try {
	      Gl_accounts brs = new Gl_accounts();
	      FrmBrowse bd = new FrmBrowse(brs);
              bd.setFirstValue(jtxtdiscacccode);
	      bd.setSecondValue(jtxtDiscAccDesc);
	      bd.setModal(true);
	      bd.setVisible(true);

	  } catch (CodeException ex) {
	      ex.printStackTrace();
	  }
}//GEN-LAST:event_jbtnBrowseDiscAccActionPerformed

private void jbtnBrowsePrepayAccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBrowsePrepayAccActionPerformed
          try {
	      Gl_accounts brs = new Gl_accounts();
	      FrmBrowse bd = new FrmBrowse(brs);
	      bd.setFirstValue(jtxtprepayacccode);
              bd.setSecondValue(jtxtPrepayAccDesc);
	      bd.setModal(true);
	      bd.setVisible(true);

	  } catch (CodeException ex) {
	      ex.printStackTrace();
	  }
}//GEN-LAST:event_jbtnBrowsePrepayAccActionPerformed

private void jbtnBrowseWrofAccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBrowseWrofAccActionPerformed
        try {
	      Gl_accounts brs = new Gl_accounts();
	      FrmBrowse bd = new FrmBrowse(brs);
	      bd.setFirstValue(jtxtwrofacccode);
              bd.setSecondValue(jtxtWrofAcccodeDesc);
	      bd.setModal(true);
	      bd.setVisible(true);

	  } catch (CodeException ex) {
	      ex.printStackTrace();
	  }
}//GEN-LAST:event_jbtnBrowseWrofAccActionPerformed

private void jbtnBrowseCurrencyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBrowseCurrencyActionPerformed
      try {
	      Gl_currencys brs = new Gl_currencys();
	      FrmBrowse bd = new FrmBrowse(brs);
	      bd.setFirstValue(jtxtcurnccode);
              bd.setSecondValue(jtxtCurncCodeDesc);
	      bd.setModal(true);
	      bd.setVisible(true);

	  } catch (CodeException ex) {
	      ex.printStackTrace();
	  }

}//GEN-LAST:event_jbtnBrowseCurrencyActionPerformed

private void jtxtaccsetcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtaccsetcodeKeyPressed

    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        jtxtdscription.requestFocus();
    }

}//GEN-LAST:event_jtxtaccsetcodeKeyPressed

private void jtxtdscriptionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtdscriptionKeyPressed

    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        jchkActive.requestFocus();
    }

    
}//GEN-LAST:event_jtxtdscriptionKeyPressed

private void jchkActiveKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jchkActiveKeyPressed

    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        jtxtaracccode.requestFocus();
    }

}//GEN-LAST:event_jchkActiveKeyPressed

private void jtxtaracccodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtaracccodeKeyPressed

    if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
        try {
            Gl_account acc = new Gl_account(jtxtaracccode.getText().replace("-", "-"));
            jtxtaracccode.setText(acc.getaccfmttd());
            jtxtArAccDesc.setText(acc.getaccdesc());
        }catch(Exception e) {}

        jtxtdiscacccode.requestFocus();
    }
    

}//GEN-LAST:event_jtxtaracccodeKeyPressed

private void jtxtdiscacccodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtdiscacccodeKeyPressed

    if(evt.getKeyCode() == KeyEvent.VK_ENTER) {

        try{
            Gl_account acc = new Gl_account(jtxtdiscacccode.getText().replace("-", "-"));
            jtxtdiscacccode.setText(acc.getaccfmttd());
            jtxtDiscAccDesc.setText(acc.getaccdesc());

        }catch(Exception e) {}
        jtxtprepayacccode.requestFocus();
    }

}//GEN-LAST:event_jtxtdiscacccodeKeyPressed

private void jtxtprepayacccodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtprepayacccodeKeyPressed

    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        try{
            Gl_account acc = new Gl_account(jtxtprepayacccode.getText().replace("-", "-"));
            jtxtprepayacccode.setText(acc.getaccfmttd());
            jtxtPrepayAccDesc.setText(acc.getaccdesc());

        }catch(Exception e) {}


        jtxtwrofacccode.requestFocus();
    }
}//GEN-LAST:event_jtxtprepayacccodeKeyPressed

private void jtxtwrofacccodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtwrofacccodeKeyPressed

    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        try{
            Gl_account acc = new Gl_account(jtxtwrofacccode.getText().replace("-", "-"));
            jtxtwrofacccode.setText(acc.getaccfmttd());
            jtxtwrofacccode.setText(acc.getaccdesc());

        }catch(Exception e) {}

        jtxtcurnccode.requestFocus();
    }
}//GEN-LAST:event_jtxtwrofacccodeKeyPressed

private void jtxtcurnccodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtcurnccodeKeyPressed

    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        try{
            Gl_currency curr = new Gl_currency(jtxtcurnccode.getText());
            jtxtCurncCodeDesc.setText(curr.getcurncdesc());
        }catch(Exception e) {}
    }
}//GEN-LAST:event_jtxtcurnccodeKeyPressed


private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {                                            
    setToolBar(iformtype,istatus);
    mf.setIcon(CLASSNAME);
}                                           

private void jbtnBrowseActionPerformed(java.awt.event.ActionEvent evt) {                                           
      try {
	      Ar_accsets brs = new Ar_accsets();
	      FrmBrowse bd = new FrmBrowse(this, brs);
	      bd.setFirstValue(jtxtaccsetcode);
	      bd.setModal(true);
	      bd.setVisible(true);            
	      
	  } catch (CodeException ex) {
	      ex.printStackTrace();
	  }
}                                                                                 

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new FrmAr_accset().setVisible(true);
                } catch (CodeException ex) {
                    ex.printStackTrace();
                }
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSeparator HorizontalLine;
    private javax.swing.JLabel jHeader;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JButton jbtnBrowse;
    private javax.swing.JButton jbtnBrowseArAcc;
    private javax.swing.JButton jbtnBrowseCurrency;
    private javax.swing.JButton jbtnBrowseDiscAcc;
    private javax.swing.JButton jbtnBrowsePrepayAcc;
    private javax.swing.JButton jbtnBrowseWrofAcc;
    private javax.swing.JCheckBox jchkActive;
    private javax.swing.JLabel jlblaccsetcode;
    private javax.swing.JLabel jlblaracccode;
    private javax.swing.JLabel jlblcurnccode;
    private javax.swing.JLabel jlbldiscacccode;
    private javax.swing.JLabel jlblprepayacccode;
    private javax.swing.JLabel jlblwrofacccode;
    private javax.swing.JTextField jtxtArAccDesc;
    private javax.swing.JTextField jtxtCurncCodeDesc;
    private javax.swing.JTextField jtxtDiscAccDesc;
    private javax.swing.JTextField jtxtPrepayAccDesc;
    private javax.swing.JTextField jtxtWrofAcccodeDesc;
    private javax.swing.JTextField jtxtaccsetcode;
    private javax.swing.JTextField jtxtaracccode;
    private javax.swing.JTextField jtxtauditdate;
    private javax.swing.JTextField jtxtaudituser;
    private javax.swing.JTextField jtxtcmpnyid;
    private javax.swing.JTextField jtxtcurnccode;
    private javax.swing.JTextField jtxtdiscacccode;
    private javax.swing.JTextField jtxtdscription;
    private javax.swing.JTextField jtxtentrydate;
    private javax.swing.JTextField jtxtid;
    private javax.swing.JTextField jtxtprepayacccode;
    private javax.swing.JTextField jtxtwrofacccode;
    // End of variables declaration//GEN-END:variables

 
    public void moveFirst() throws CodeException {
        obj.moveFirst();
        showData();
        mf.setIcon(CLASSNAME);
    }

    public void movePrevious() throws CodeException {
        obj.movePrevious();
        showData();
        mf.setIcon(CLASSNAME);
    }

    public void moveNext() throws CodeException {
        obj.moveNext();
        showData();
        mf.setIcon(CLASSNAME);
    }

    public void moveLast() throws CodeException {
        obj.moveLast();
        showData();
        mf.setIcon(CLASSNAME);
    }

    public void searchData() throws CodeException {
        obj = new Ar_accset(this.jtxtaccsetcode.getText());
        showData();
        mf.setIcon(CLASSNAME);

    }
    public void newData() throws CodeException {
        obj = new Ar_accset();
        istatus=1;
        showData();
        setToolBar(iformtype,istatus);
    }

    private void validasi() throws CodeException {


         if (!jtxtaracccode.getText().equals("")) {
             Gl_account glacc = new Gl_account(jtxtaracccode.getText().replace("-",""));
             if (glacc.getID() == Gl_account.NULLID){
                 throw new CodeException("Receiveable Control Code " + jtxtaracccode.getText() + " Tidak Diketemukan ");
             }
         } else {
             throw new CodeException("Receiveable Control Code Cannot Be Empty");
         }

         if (!jtxtdiscacccode.getText().equals("")) {
             Gl_account glacc = new Gl_account(jtxtdiscacccode.getText().replace("-",""));
             if (glacc.getID() == Gl_account.NULLID){
                 throw new CodeException("Receipt Discount Code " + jtxtdiscacccode.getText() + " Tidak Diketemukan ");
             }
         } else {
             throw new CodeException("Receipt Discount Code Cannot Be Empty");
         }

         if (!jtxtprepayacccode.getText().equals("")) {
             Gl_account glacc = new Gl_account(jtxtprepayacccode.getText().replace("-",""));
             if (glacc.getID() == Gl_account.NULLID){
                 throw new CodeException("Prepayment Liability Code " + jtxtprepayacccode.getText() + " Tidak Diketemukan ");
             }
         } else {
             throw new CodeException("Prepayment Liability Code Cannot Be Empty");
         }

         if (!jtxtwrofacccode.getText().equals("")) {
             Gl_account glacc = new Gl_account(jtxtwrofacccode.getText().replace("-",""));
             if (glacc.getID() == Gl_account.NULLID){
                 throw new CodeException("Write offs Code " + jtxtwrofacccode.getText() + " Tidak Diketemukan ");
             }
         } else {
             throw new CodeException("Write offs Code Cannot Be Empty");
         }

         if (!jtxtcurnccode.getText().equals("")) {
             Gl_currency glacc = new Gl_currency(jtxtcurnccode.getText() );
             if (glacc.getID() == Gl_account.NULLID){
                 throw new CodeException("Currency Code Code " + jtxtcurnccode.getText() + " Tidak Diketemukan ");
             }
         } else {
             throw new CodeException("Currency Code Code Cannot Be Empty");
         }
    }

    public void saveData() throws CodeException {

        validasi();
                
        istatus = 0;
        setData();
        obj.save();
        
        showData();
        
        mf.setIcon(CLASSNAME);
    }

    public void showData() throws CodeException {
        setCursor(GlobalUtils.HOURGLASSCURSOR);
	
             jtxtid.setText(obj.toString(Ar_accset.PROPERTY_ID));
             jtxtaccsetcode.setText(obj.getaccsetcode());
             jtxtdscription.setText(obj.toString(Ar_accset.PROPERTY_DSCRIPTION));

             jchkActive.setSelected(obj.getactive()==1);

             jtxtaracccode.setText(Gl_account.getAccFormat(obj.toString(Ar_accset.PROPERTY_ARACCCODE)));
             jtxtArAccDesc.setText(obj.getARAccountDesc());

             jtxtdiscacccode.setText(Gl_account.getAccFormat(obj.toString(Ar_accset.PROPERTY_DISCACCCODE)));
             jtxtDiscAccDesc.setText(obj.getDiscAccountDesc());
             
             jtxtprepayacccode.setText(Gl_account.getAccFormat(obj.toString(Ar_accset.PROPERTY_PREPAYACCCODE)));
             jtxtPrepayAccDesc.setText(obj.getPrepayAccountDesc());

             jtxtwrofacccode.setText(Gl_account.getAccFormat(obj.toString(Ar_accset.PROPERTY_WROFACCCODE)));
             jtxtWrofAcccodeDesc.setText(obj.getWrofAccountDesc());

             jtxtcurnccode.setText(obj.toString(Ar_accset.PROPERTY_CURNCCODE));
             jtxtCurncCodeDesc.setText(obj.getCurncDesc());


             System.out.println(obj.toString(Ar_accset.PROPERTY_ENTRYDATE)+ "------" + obj.getentrydate());
             
             jtxtentrydate.setText(obj.toString(Ar_accset.PROPERTY_ENTRYDATE));
             jtxtauditdate.setText(obj.toString(Ar_accset.PROPERTY_AUDITDATE));
             jtxtaudituser.setText(obj.toString(Ar_accset.PROPERTY_AUDITUSER));

             
             jtxtcmpnyid.setText(obj.toString(Ar_accset.PROPERTY_CMPNYID));
        setCursor(GlobalUtils.NORMALCURSOR);
    }

    public void delete() throws CodeException {
        obj.delete();
        obj.moveFirst();
        showData();
        mf.setIcon(CLASSNAME);
    }

    public void setToolBar(int iFormType, int istatus) {
        mf.setToolBar(iformtype,istatus);        
    }

    public void setData() throws CodeException {
        
	
          obj.fromString(Ar_accset.PROPERTY_ID, jtxtid.getText()) ;
          obj.fromString(Ar_accset.PROPERTY_ACCSETCODE, jtxtaccsetcode.getText()) ;
          obj.fromString(Ar_accset.PROPERTY_DSCRIPTION, jtxtdscription.getText()) ;

          obj.setactive(jchkActive.isSelected() ? 1 : 0);

          obj.fromString(Ar_accset.PROPERTY_ARACCCODE, jtxtaracccode.getText().replace("-", "")) ;
          obj.fromString(Ar_accset.PROPERTY_DISCACCCODE, jtxtdiscacccode.getText().replace("-", "")) ;
          obj.fromString(Ar_accset.PROPERTY_PREPAYACCCODE, jtxtprepayacccode.getText().replace("-", "")) ;
          obj.fromString(Ar_accset.PROPERTY_WROFACCCODE, jtxtwrofacccode.getText().replace("-", "")) ;
          obj.fromString(Ar_accset.PROPERTY_CURNCCODE, jtxtcurnccode.getText()) ;

    }

    public void undo() throws CodeException {
        istatus = 0;
        moveFirst();
        showData();
    }

    public void execute() throws CodeException {
       saveData();
    }

    public void printData() throws CodeException {
        FrmPrintMasterARAccountSet fprint = new FrmPrintMasterARAccountSet();
        fprint.jtxtAccSetCode.setText(jtxtaccsetcode.getText());
        fprint.setVisible(true);   
    }

    public void importCsv() throws CodeException {
            
        String file1 = "";
        String file2 = GlobalUtils.getCurrentDir() + GlobalUtils.temp + obj.TABLEPROCESS + ".csv";   
        
        JFileChooser chooser = new JFileChooser(".");
        chooser.setDialogTitle("Pilih File ");
        FileFilter filter1 = new ExtFileChooserFilter("CSV", new String[] { "CSV"});
        chooser.setFileFilter(filter1);

        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            File selectedFile = chooser.getSelectedFile();
            
            try {
                file1 = selectedFile.getCanonicalPath();
            
            }catch (Exception e) {}

            GlobalUtils.copyfile(file1, file2 );                

            obj.importCsv();
            
        }else {
          JOptionPane.showMessageDialog(null,"No Selection ");
        }

    }

    public void exportCsv() throws CodeException {
        
    
        if (obj.exportCsv()) {
            
            String file1 = GlobalUtils.getCurrentDir() + GlobalUtils.temp + obj.TABLEPROCESS + ".csv";   
            String file2 = "";
            
            JFileChooser chooser = new JFileChooser(".");
            chooser.setDialogTitle("Pilih Directory ");
    
            if (chooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
                try {
                    file2 = chooser.getSelectedFile().getCanonicalPath() + ".csv";
                        
                    JOptionPane.showMessageDialog(null, GlobalUtils.copyfile(file1, file2 ));                    
                    
                }catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());                    
                }
                
            }else {
              JOptionPane.showMessageDialog(null,"No Selection ");
            }
    
        }
        
    }

    public void importText() throws CodeException {
        String file1 = "";
        String file2 = GlobalUtils.getCurrentDir() + GlobalUtils.temp + obj.TABLEPROCESS + ".txt";   
        
        JFileChooser chooser = new JFileChooser(".");
        chooser.setDialogTitle("Pilih File ");
        FileFilter filter1 = new ExtFileChooserFilter("txt", new String[] { "txt"});
        chooser.setFileFilter(filter1);


        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            File selectedFile = chooser.getSelectedFile();
            
            try {
                file1 = selectedFile.getCanonicalPath();
            
            }catch (Exception e) {}

            GlobalUtils.copyfile(file1, file2 );                

            obj.importCsv();
            
        }else {
          JOptionPane.showMessageDialog(null,"No Selection ");
        }
    }

    public void exportText() throws CodeException {
        if (obj.exportText()) {
            
            String file1 = GlobalUtils.getCurrentDir() + GlobalUtils.temp + obj.TABLEPROCESS + ".txt";   
            String file2 = "";
            
            JFileChooser chooser = new JFileChooser(".");
            chooser.setDialogTitle("Pilih Directory ");
    
            if (chooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
                try {
                    file2 = chooser.getSelectedFile().getCanonicalPath() + ".txt";                        
                    JOptionPane.showMessageDialog(null, GlobalUtils.copyfile(file1, file2 ));                    
                    
                }catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());                    
                }
                
            }else {
              JOptionPane.showMessageDialog(null,"No Selection ");
            }
    
        } 
    }

    
}
