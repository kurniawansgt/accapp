/*
 * From Template
 *
 * Created on June 29, 2007, 2:00 PM
 * 
 * 
 * How to Call this Form on FrmMainFrame
 * Sample : 
 *    
 * import test.FrmSetting_financial_rpt;
 * 
 * .......
 * 
 * 
 * FrmSetting_financial_rpt frmSetting_financial_rpt;
 * 
 * .......
 * 
 try {
        if (frmSetting_financial_rpt == null) {
            frmmSetting_financial_rpt = new FrmSetting_financial_rpt(this);
        }
        
        showForm(frmSetting_financial_rpt);
        
    }catch(Exception e) {
        e.printStackTrace();
    }
 * 
 */

package accapp.component.gl;

import common.component.FrmBrowse;
import common.classinterface.NavigatorFormInt;
import common.classinterface.NavigatorObjectInt;
import common.component.FrmMainFrame;

import common.utils.CodeException;
import common.utils.GlobalUtils;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import common.utils.ExtFileChooserFilter;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;
import accapp.objectclasses.gl.Setting_financial_rpt;
import accapp.objectclasses.gl.Setting_financial_rpt_detail1;
import accapp.objectclasses.gl.Setting_financial_rpt_detail1s;
import accapp.objectclasses.gl.Setting_financial_rpts;
import common.tablemodels.GlobalModel;
import common.tablemodels.MyTableCellEditor;
import java.awt.event.KeyEvent;
import javax.swing.JComboBox;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author  Generator
 */

public class FrmSetting_financial_rpt extends javax.swing.JInternalFrame implements NavigatorFormInt {

    private static int istatus = 0;
    private static int iformtype = 0;
    public static String CLASSNAME="FrmSetting_financial_rpt";
    
    FrmMainFrame mf ;
    Object[] datadetail;
    DefaultTableModel tmodeldetail;
    
    public Setting_financial_rpt obj = new Setting_financial_rpt();
    Setting_financial_rpt_detail1s cbhds=new Setting_financial_rpt_detail1s();
   
    /** Creates new form Area */
    public FrmSetting_financial_rpt() throws CodeException {
        initComponents();
    }
    
    public FrmSetting_financial_rpt(FrmMainFrame mf) throws CodeException{
        this.mf = mf;
        initComponents();

        datadetail = new Object[jtblDetail.getRowCount()];
        tmodeldetail = (DefaultTableModel) jtblDetail.getModel();

        jtxtid.setBounds(180, 30, 80, 20);
        jtxtentrydate.setBounds(260, 30, 160, 20);
        jtxtauditdate.setBounds(420, 30, 140, 20);
        jtxtaudituser.setBounds(560, 30, 110, 20);
        jtxtcmpnyid.setBounds(670, 30, 120, 20);

        jtxtid.setEditable(false);
        jtxtentrydate.setEditable(false);
        jtxtauditdate.setEditable(false);
        jtxtaudituser.setEditable(false);
        jtxtcmpnyid.setEditable(false);

        JComboBox cbo=new JComboBox();
        cbo.addItem("Header");
        cbo.addItem("Detail");
        cbo.addItem("Footer");
        TableColumn col = jtblDetail.getColumnModel().getColumn(1);
        col.setCellEditor(new MyTableCellEditor(1,2,cbo));
    }
     
       
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jHeader = new javax.swing.JLabel();
        HorizontalLine = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jbtnBrowse = new javax.swing.JButton();
        jtxtid = new javax.swing.JTextField();
        jlbldocentry = new javax.swing.JLabel();
        jlblreportname = new javax.swing.JLabel();
        jtxtreportname = new javax.swing.JTextField();
        jlblreportdesc = new javax.swing.JLabel();
        jtxtreportdesc = new javax.swing.JTextField();
        jtxtcratedate = new javax.swing.JTextField();
        jtxtentrydate = new javax.swing.JTextField();
        jtxtauditdate = new javax.swing.JTextField();
        jtxtaudituser = new javax.swing.JTextField();
        jtxtcmpnyid = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblDetail = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Setting_financial_rpt");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        jHeader.setBackground(new java.awt.Color(102, 102, 102));
        jHeader.setFont(new java.awt.Font("Dialog", 1, 10));
        jHeader.setForeground(new java.awt.Color(255, 255, 255));
        jHeader.setText(" : : Setting_financial_rpt");
        jHeader.setAlignmentY(0.0F);
        jHeader.setOpaque(true);
        getContentPane().add(jHeader);
        jHeader.setBounds(30, 30, 130, 20);

        HorizontalLine.setForeground(new java.awt.Color(102, 102, 102));
        HorizontalLine.setAlignmentX(0.0F);
        HorizontalLine.setAlignmentY(0.0F);
        getContentPane().add(HorizontalLine);
        HorizontalLine.setBounds(160, 50, 650, 6);

        jSeparator3.setForeground(new java.awt.Color(102, 102, 102));
        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator3.setAlignmentX(0.0F);
        jSeparator3.setAlignmentY(0.0F);
        getContentPane().add(jSeparator3);
        jSeparator3.setBounds(30, 50, 6, 400);

        jbtnBrowse.setText("...");
        jbtnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowseActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnBrowse);
        jbtnBrowse.setBounds(420, 80, 30, 17);

        jtxtid.setText("id");
        getContentPane().add(jtxtid);
        jtxtid.setBounds(270, 30, 80, 28);

        jlbldocentry.setText("Create Date");
        getContentPane().add(jlbldocentry);
        jlbldocentry.setBounds(70, 120, 140, 18);

        jlblreportname.setText("Report Name");
        getContentPane().add(jlblreportname);
        jlblreportname.setBounds(70, 80, 140, 18);

        jtxtreportname.setText("reportname");
        getContentPane().add(jtxtreportname);
        jtxtreportname.setBounds(260, 80, 160, 28);

        jlblreportdesc.setText("Description");
        getContentPane().add(jlblreportdesc);
        jlblreportdesc.setBounds(70, 100, 140, 18);

        jtxtreportdesc.setText("reportdesc");
        getContentPane().add(jtxtreportdesc);
        jtxtreportdesc.setBounds(260, 100, 490, 28);

        jtxtcratedate.setText("cratedate");
        getContentPane().add(jtxtcratedate);
        jtxtcratedate.setBounds(260, 120, 80, 28);

        jtxtentrydate.setText("entrydate");
        getContentPane().add(jtxtentrydate);
        jtxtentrydate.setBounds(350, 30, 80, 28);

        jtxtauditdate.setText("auditdate");
        getContentPane().add(jtxtauditdate);
        jtxtauditdate.setBounds(430, 30, 80, 28);

        jtxtaudituser.setText("audituser");
        getContentPane().add(jtxtaudituser);
        jtxtaudituser.setBounds(510, 30, 80, 28);

        jtxtcmpnyid.setText("cmpnyid");
        getContentPane().add(jtxtcmpnyid);
        jtxtcmpnyid.setBounds(590, 30, 80, 28);

        jtblDetail.setFont(new java.awt.Font("Dialog", 0, 10));
        jtblDetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Row No.", "Column Type", "Level No", "Text Header", "Formulation", "Summary", "Text Formulation", "Vis. Order", "Show"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.String.class, java.lang.Integer.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jtblDetail.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jtblDetail.setSurrendersFocusOnKeystroke(true);
        jtblDetail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtblDetailFocusGained(evt);
            }
        });
        jtblDetail.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jtblDetailPropertyChange(evt);
            }
        });
        jtblDetail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtblDetailKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtblDetailKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jtblDetail);
        jtblDetail.getColumnModel().getColumn(0).setMinWidth(75);
        jtblDetail.getColumnModel().getColumn(0).setPreferredWidth(75);
        jtblDetail.getColumnModel().getColumn(0).setMaxWidth(75);
        jtblDetail.getColumnModel().getColumn(2).setMaxWidth(75);
        jtblDetail.getColumnModel().getColumn(3).setMinWidth(200);
        jtblDetail.getColumnModel().getColumn(6).setMinWidth(200);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(70, 150, 730, 240);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
         try {
            moveFirst();

         } catch (CodeException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_formInternalFrameOpened

private void kdatePurchaseDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kdatePurchaseDateFocusLost

}//GEN-LAST:event_kdatePurchaseDateFocusLost

private void kdatePurchaseDateCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_kdatePurchaseDateCaretPositionChanged

}//GEN-LAST:event_kdatePurchaseDateCaretPositionChanged

private void kdatePurchaseDatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_kdatePurchaseDatePropertyChange

}//GEN-LAST:event_kdatePurchaseDatePropertyChange

private void jtblDetailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtblDetailFocusGained
    // TODO add your handling code here:
}//GEN-LAST:event_jtblDetailFocusGained

private void cekCbhd() throws CodeException {

    int row = jtblDetail.getSelectedRow();
    int col = jtblDetail.getSelectedColumn();


    Setting_financial_rpt_detail1 detail1;
    if (row > cbhds.size() - 1) {
        detail1 = new Setting_financial_rpt_detail1();
        cbhds.add(detail1);
    }else{
        detail1 = (Setting_financial_rpt_detail1) cbhds.list().get(row);
    }

    long idcbhd = 0 ;
    try{
        idcbhd = Long.parseLong(tmodeldetail.getValueAt(row, 0)+"");
    }catch (Exception e){}

    detail1.setrowno(GlobalUtils.toInt(GlobalUtils.churuf(tmodeldetail.getValueAt(row, 0))));
    String coltype="1";
    if (GlobalUtils.churuf(tmodeldetail.getValueAt(row, 1)).equalsIgnoreCase("Header")){
        coltype="1";
    }
    if (GlobalUtils.churuf(tmodeldetail.getValueAt(row, 1)).equalsIgnoreCase("Detail")){
        coltype="2";
    }
    if (GlobalUtils.churuf(tmodeldetail.getValueAt(row, 1)).equalsIgnoreCase("Footer")){
        coltype="3";
    }
    detail1.setcolumntype(coltype);
    detail1.setlevelno(GlobalUtils.toInt(GlobalUtils.churuf(tmodeldetail.getValueAt(row, 2))));
    detail1.settextheader(GlobalUtils.churuf(tmodeldetail.getValueAt(row, 3)));
    if (Boolean.parseBoolean(GlobalUtils.churuf(tmodeldetail.getValueAt(row, 4)))){
        detail1.setallowformulation("Y");
    } else {
        detail1.setallowformulation("N");
    }
    if (Boolean.parseBoolean(GlobalUtils.churuf(tmodeldetail.getValueAt(row, 5)))){
        detail1.setsummary("Y");
    } else {
        detail1.setsummary("N");
    }
    detail1.settextformulation(GlobalUtils.churuf(tmodeldetail.getValueAt(row, 6)));
    detail1.setvisorder(GlobalUtils.toInt(GlobalUtils.churuf(tmodeldetail.getValueAt(row, 7))));

    if (Boolean.parseBoolean(GlobalUtils.churuf(GlobalUtils.churuf(tmodeldetail.getValueAt(row, 8))))){
        detail1.setshowdata("Y");
    } else {
        detail1.setshowdata("N");
    }

    cbhds.list().set(row, detail1);

}

private void jtblDetailPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jtblDetailPropertyChange
    // TODO add your handling code here:
    // TODO add your handling code here:
        // TODO add your handling code here:
    int row = jtblDetail.getSelectedRow();
    int col = jtblDetail.getSelectedColumn();


    try{
        if (row > -1) {
            cekCbhd();
        }
    }catch (Exception e){
        e.printStackTrace();
    }
}//GEN-LAST:event_jtblDetailPropertyChange

private void jtblDetailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtblDetailKeyPressed
    // TODO add your handling code here:
    int row = jtblDetail.getSelectedRow();
    int col = jtblDetail.getSelectedColumn();

    if (evt.getKeyCode() == KeyEvent.VK_INSERT) {
        tmodeldetail.addRow(datadetail);
        tmodeldetail.setValueAt("0", tmodeldetail.getRowCount() - 1, 0);
        tmodeldetail.setValueAt(tmodeldetail.getRowCount(), tmodeldetail.getRowCount() - 1, 1);
        tmodeldetail.setValueAt("", tmodeldetail.getRowCount() - 1, 2);
        tmodeldetail.setValueAt("", tmodeldetail.getRowCount() - 1, 3);
        tmodeldetail.setValueAt("Unlocked", tmodeldetail.getRowCount() - 1, 4);


        GlobalUtils.selectCellTable(jtblDetail, tmodeldetail.getRowCount() - 1, 1);

    }
    if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
    try{
        int iquestion = JOptionPane.showConfirmDialog(null, "Anda Ingin Menghapus Baris Ke " + (row+1) +" of "+ obj.getDetail().size(), "Hapus ", JOptionPane.YES_NO_OPTION);
        if ( iquestion == JOptionPane.YES_OPTION) {

            obj.removeDetail(row);


            if (obj.getID()>0){
                saveData();
            } else {
                tmodeldetail.removeRow(row);
            }

            if (row+1 < tmodeldetail.getRowCount()) {
                GlobalUtils.selectCellTable(jtblDetail, row, 1);
            }else{
                GlobalUtils.selectCellTable(jtblDetail, tmodeldetail.getRowCount()-1, 1);
            }
            showDataDetail();
        }
    }catch(Exception e){e.printStackTrace();}
    }
}//GEN-LAST:event_jtblDetailKeyPressed

private void showDataDetail() throws CodeException{
        GlobalModel.clearRow(tmodeldetail);
        cbhds=obj.getDetail();

        for (Object o:cbhds.list()){
            Setting_financial_rpt_detail1 detail1=(Setting_financial_rpt_detail1) o;

            tmodeldetail.addRow(datadetail);
            tmodeldetail.setValueAt(detail1.getrowno() , tmodeldetail.getRowCount() - 1, 0);
            String coltype="Header";
            switch (GlobalUtils.toInt(detail1.getcolumntype())){
                case 1:
                    coltype="Header";
                    break;
                case 2:
                    coltype="Detail";
                    break;
                case 3:
                    coltype="Footer";
                    break;
            }
            tmodeldetail.setValueAt(coltype, tmodeldetail.getRowCount() - 1, 1);
            tmodeldetail.setValueAt(detail1.getlevelno(), tmodeldetail.getRowCount() - 1, 2);
            tmodeldetail.setValueAt(detail1.gettextheader(), tmodeldetail.getRowCount() - 1, 3);
            
            Boolean allowformula=false;
            if (detail1.getallowformulation().equalsIgnoreCase("Y")){
                allowformula=true;
            }
            
            Boolean summary=false;
            if (detail1.getsummary().equalsIgnoreCase("Y")){
                summary=true;
            }
            tmodeldetail.setValueAt(allowformula, tmodeldetail.getRowCount() - 1, 4);
            tmodeldetail.setValueAt(summary, tmodeldetail.getRowCount() - 1, 5);
            tmodeldetail.setValueAt(detail1.gettextformulation(), tmodeldetail.getRowCount() - 1, 6);
            tmodeldetail.setValueAt(detail1.getvisorder(), tmodeldetail.getRowCount() - 1, 7);
            if (detail1.getshowdata().equalsIgnoreCase("Y")){
                tmodeldetail.setValueAt(true, tmodeldetail.getRowCount() - 1, 8);
            } else {
                tmodeldetail.setValueAt(false, tmodeldetail.getRowCount() - 1, 8);
            }

        }

        tmodeldetail.addRow(datadetail);
        tmodeldetail.setValueAt("" , tmodeldetail.getRowCount() - 1, 0);
        tmodeldetail.setValueAt("Header" , tmodeldetail.getRowCount() - 1, 1);
        tmodeldetail.setValueAt("", tmodeldetail.getRowCount() - 1, 2);
        tmodeldetail.setValueAt("", tmodeldetail.getRowCount() - 1, 3);
        tmodeldetail.setValueAt(false, tmodeldetail.getRowCount() - 1, 4);
        tmodeldetail.setValueAt(false, tmodeldetail.getRowCount() - 1, 5);
        tmodeldetail.setValueAt("", tmodeldetail.getRowCount() - 1, 6);
        tmodeldetail.setValueAt("", tmodeldetail.getRowCount() - 1, 7);

    }

private void jtblDetailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtblDetailKeyReleased
    // TODO add your handling code here:

}//GEN-LAST:event_jtblDetailKeyReleased


private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {                                            
    setToolBar(iformtype,istatus);
    mf.setIcon(CLASSNAME);
}                                           

private void jbtnBrowseActionPerformed(java.awt.event.ActionEvent evt) {                                           
      try {
	      Setting_financial_rpts brs = new Setting_financial_rpts();
	      FrmBrowse bd = new FrmBrowse(this, brs);
              bd.setFirstValue(jtxtreportname);
	      bd.setModal(true);
	      bd.setVisible(true);            
	      
	  } catch (CodeException ex) {
	      ex.printStackTrace();
	  }
}                                                                                 

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new FrmSetting_financial_rpt().setVisible(true);
                } catch (CodeException ex) {
                    ex.printStackTrace();
                }
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSeparator HorizontalLine;
    private javax.swing.JLabel jHeader;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JButton jbtnBrowse;
    private javax.swing.JLabel jlbldocentry;
    private javax.swing.JLabel jlblreportdesc;
    private javax.swing.JLabel jlblreportname;
    private javax.swing.JTable jtblDetail;
    private javax.swing.JTextField jtxtauditdate;
    private javax.swing.JTextField jtxtaudituser;
    private javax.swing.JTextField jtxtcmpnyid;
    private javax.swing.JTextField jtxtcratedate;
    private javax.swing.JTextField jtxtentrydate;
    private javax.swing.JTextField jtxtid;
    private javax.swing.JTextField jtxtreportdesc;
    private javax.swing.JTextField jtxtreportname;
    // End of variables declaration//GEN-END:variables

 
    public void moveFirst() throws CodeException {
        obj.moveFirst();
        showData();
        mf.setIcon(CLASSNAME);
    }

    public void movePrevious() throws CodeException {
        obj.movePrevious();
        showData();
        mf.setIcon(CLASSNAME);
    }

    public void moveNext() throws CodeException {
        obj.moveNext();
        showData();
        mf.setIcon(CLASSNAME);
    }

    public void moveLast() throws CodeException {
        obj.moveLast();
        showData();
        mf.setIcon(CLASSNAME);
    }

    public void searchData() throws CodeException {
        obj = new Setting_financial_rpt(Setting_financial_rpt.PROPERTY_REPORTNAME, this.jtxtreportname.getText());
        showData();
        mf.setIcon(CLASSNAME);

    }
    public void newData() throws CodeException {
        obj = new Setting_financial_rpt();
        istatus=1;
        showData();
        setToolBar(iformtype,istatus);
    }

    public void saveData() throws CodeException {
        istatus = 0;
        setData();
        obj.save();
        
        showData();
        
        mf.setIcon(CLASSNAME);
    }

    public void showData() throws CodeException {
        setCursor(GlobalUtils.HOURGLASSCURSOR);
	
             jtxtid.setText(obj.toString(Setting_financial_rpt.PROPERTY_ID));
             jtxtreportname.setText(obj.toString(Setting_financial_rpt.PROPERTY_REPORTNAME));
             jtxtreportdesc.setText(obj.toString(Setting_financial_rpt.PROPERTY_REPORTDESC));
             jtxtcratedate.setText(obj.toString(Setting_financial_rpt.PROPERTY_CRATEDATE));
             jtxtentrydate.setText(obj.toString(Setting_financial_rpt.PROPERTY_ENTRYDATE));
             jtxtauditdate.setText(obj.toString(Setting_financial_rpt.PROPERTY_AUDITDATE));
             jtxtaudituser.setText(obj.toString(Setting_financial_rpt.PROPERTY_AUDITUSER));
             jtxtcmpnyid.setText(obj.toString(Setting_financial_rpt.PROPERTY_CMPNYID));

             showDataDetail();
             
        setCursor(GlobalUtils.NORMALCURSOR);
    }

    public void delete() throws CodeException {
        obj.delete();
        obj.moveFirst();
        showData();
        mf.setIcon(CLASSNAME);
    }

    public void setToolBar(int iFormType, int istatus) {
        mf.setToolBar(iformtype,istatus);        
    }

    public void setData() throws CodeException {
        
	
          obj.fromString(Setting_financial_rpt.PROPERTY_ID, jtxtid.getText()) ;
          obj.fromString(Setting_financial_rpt.PROPERTY_REPORTNAME, jtxtreportname.getText()) ;
          obj.fromString(Setting_financial_rpt.PROPERTY_REPORTDESC, jtxtreportdesc.getText()) ;
          obj.fromString(Setting_financial_rpt.PROPERTY_CRATEDATE, jtxtcratedate.getText()) ;
          obj.fromString(Setting_financial_rpt.PROPERTY_ENTRYDATE, jtxtentrydate.getText()) ;
          obj.fromString(Setting_financial_rpt.PROPERTY_AUDITDATE, jtxtauditdate.getText()) ;
          obj.fromString(Setting_financial_rpt.PROPERTY_AUDITUSER, jtxtaudituser.getText()) ;
          obj.fromString(Setting_financial_rpt.PROPERTY_CMPNYID, jtxtcmpnyid.getText()) ;

    }

    public void undo() throws CodeException {
        istatus = 0;
        moveFirst();
        showData();
    }

    public void execute() throws CodeException {
       saveData();
    }

    public void printData() throws CodeException {
        Map parameter = new HashMap();
        NavigatorObjectInt noi = (NavigatorObjectInt) obj;        
        String file   = GlobalUtils.getCurrentDir() +"/Reports/" + noi.getClassName() + ".jrxml";
        GlobalUtils.printReport(file,  false);    
    }

    public void importCsv() throws CodeException {
            
        String file1 = "";
        String file2 = GlobalUtils.getCurrentDir() + GlobalUtils.temp + obj.TABLEPROCESS + ".csv";   
        
        JFileChooser chooser = new JFileChooser(".");
        chooser.setDialogTitle("Pilih File ");
        FileFilter filter1 = new ExtFileChooserFilter("CSV", new String[] { "CSV"});
        chooser.setFileFilter(filter1);

        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            File selectedFile = chooser.getSelectedFile();
            
            try {
                file1 = selectedFile.getCanonicalPath();
            
            }catch (Exception e) {}

            GlobalUtils.copyfile(file1, file2 );                

            obj.importCsv();
            
        }else {
          JOptionPane.showMessageDialog(null,"No Selection ");
        }

    }

    public void exportCsv() throws CodeException {
        
    
        if (obj.exportCsv()) {
            
            String file1 = GlobalUtils.getCurrentDir() + GlobalUtils.temp + obj.TABLEPROCESS + ".csv";   
            String file2 = "";
            
            JFileChooser chooser = new JFileChooser(".");
            chooser.setDialogTitle("Pilih Directory ");
    
            if (chooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
                try {
                    file2 = chooser.getSelectedFile().getCanonicalPath() + ".csv";
                        
                    JOptionPane.showMessageDialog(null, GlobalUtils.copyfile(file1, file2 ));                    
                    
                }catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());                    
                }
                
            }else {
              JOptionPane.showMessageDialog(null,"No Selection ");
            }
    
        }
        
    }

    public void importText() throws CodeException {
        String file1 = "";
        String file2 = GlobalUtils.getCurrentDir() + GlobalUtils.temp + obj.TABLEPROCESS + ".txt";   
        
        JFileChooser chooser = new JFileChooser(".");
        chooser.setDialogTitle("Pilih File ");
        FileFilter filter1 = new ExtFileChooserFilter("txt", new String[] { "txt"});
        chooser.setFileFilter(filter1);


        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            File selectedFile = chooser.getSelectedFile();
            
            try {
                file1 = selectedFile.getCanonicalPath();
            
            }catch (Exception e) {}

            GlobalUtils.copyfile(file1, file2 );                

            obj.importCsv();
            
        }else {
          JOptionPane.showMessageDialog(null,"No Selection ");
        }
    }

    public void exportText() throws CodeException {
        if (obj.exportText()) {
            
            String file1 = GlobalUtils.getCurrentDir() + GlobalUtils.temp + obj.TABLEPROCESS + ".txt";   
            String file2 = "";
            
            JFileChooser chooser = new JFileChooser(".");
            chooser.setDialogTitle("Pilih Directory ");
    
            if (chooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
                try {
                    file2 = chooser.getSelectedFile().getCanonicalPath() + ".txt";                        
                    JOptionPane.showMessageDialog(null, GlobalUtils.copyfile(file1, file2 ));                    
                    
                }catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());                    
                }
                
            }else {
              JOptionPane.showMessageDialog(null,"No Selection ");
            }
    
        } 
    }

    
}
