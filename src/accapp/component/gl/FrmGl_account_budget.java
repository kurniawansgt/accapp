/*
 * From Template
 *
 * Created on June 29, 2007, 2:00 PM
 * 
 * 
 * How to Call this Form on FrmMainFrame
 * Sample : 
 *    
 * import test.FrmGl_account_budget;
 * 
 * .......
 * 
 * 
 * FrmGl_account_budget frmGl_account_budget;
 * 
 * .......
 * 
 try {
        if (frmGl_account_budget == null) {
            frmmGl_account_budget = new FrmGl_account_budget(this);
        }
        
        showForm(frmGl_account_budget);
        
    }catch(Exception e) {
        e.printStackTrace();
    }
 * 
 */

package accapp.component.gl;

import accapp.component.browse.FrmBrowseAccountActive;
import common.component.FrmBrowse;
import common.classinterface.NavigatorFormInt;
import common.classinterface.NavigatorObjectInt;
import common.component.FrmMainFrame;

import common.utils.CodeException;
import common.utils.GlobalUtils;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import common.utils.ExtFileChooserFilter;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;
import accapp.objectclasses.gl.Gl_account_budget;
import accapp.objectclasses.gl.Gl_account_budgets;
import accapp.objectclasses.gl.Gl_accounts;
import accapp.objectclasses.gl.Gl_currencys;
import accapp.objectclasses.gl.Gl_fiscalhs;
import accapp.objectclasses.gl.Gl_option;
import common.tablemodels.GlobalModel;
import common.utils.selectallJTable;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author  Generator
 */

public class FrmGl_account_budget extends javax.swing.JInternalFrame implements NavigatorFormInt {

    private static int istatus = 0;
    private static int iformtype = 0;
    public static String CLASSNAME="FrmGl_account_budget";
    
    FrmMainFrame mf ;
    
    
    public Gl_account_budgets obj = new Gl_account_budgets();
    DefaultTableModel tmodeldetail;
   
    /** Creates new form Area */
    public FrmGl_account_budget() throws CodeException {
        initComponents();
    }
    
    public FrmGl_account_budget(FrmMainFrame mf) throws CodeException{
        this.mf = mf;
        initComponents();
        tmodeldetail=(DefaultTableModel) jtblDetail.getModel();

        jtxtyop.setText(GlobalUtils.getCurrentYear());

        Gl_option opt=new Gl_option(GlobalUtils.company);
        jtxtcurnccode.setText(opt.getcurnccode());
    }
     
       
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jHeader = new javax.swing.JLabel();
        HorizontalLine = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jlblid = new javax.swing.JLabel();
        jtxtaccountcode = new javax.swing.JTextField();
        jlblyop = new javax.swing.JLabel();
        jtxtaccformated = new javax.swing.JTextField();
        jlblmop = new javax.swing.JLabel();
        jtxtmop = new javax.swing.JTextField();
        jlblacccode = new javax.swing.JLabel();
        jtxtyop = new javax.swing.JTextField();
        jtxtcurnccode = new javax.swing.JTextField();
        jbtnBrowse = new javax.swing.JButton();
        jbtnBrowse2 = new javax.swing.JButton();
        jbtnBrowse3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblDetail = new selectallJTable(tmodeldetail);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Budget Maintenance");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        getContentPane().setLayout(null);

        jHeader.setBackground(new java.awt.Color(102, 102, 102));
        jHeader.setFont(new java.awt.Font("Dialog", 1, 10));
        jHeader.setForeground(new java.awt.Color(255, 255, 255));
        jHeader.setText(" : : Budget Maintenance");
        jHeader.setAlignmentY(0.0F);
        jHeader.setOpaque(true);
        getContentPane().add(jHeader);
        jHeader.setBounds(30, 30, 180, 20);

        HorizontalLine.setForeground(new java.awt.Color(102, 102, 102));
        HorizontalLine.setAlignmentX(0.0F);
        HorizontalLine.setAlignmentY(0.0F);
        getContentPane().add(HorizontalLine);
        HorizontalLine.setBounds(160, 50, 650, 6);

        jSeparator3.setForeground(new java.awt.Color(102, 102, 102));
        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator3.setAlignmentX(0.0F);
        jSeparator3.setAlignmentY(0.0F);
        getContentPane().add(jSeparator3);
        jSeparator3.setBounds(30, 50, 6, 400);

        jlblid.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jlblid.setText("Account");
        getContentPane().add(jlblid);
        jlblid.setBounds(70, 80, 140, 13);

        jtxtaccountcode.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        getContentPane().add(jtxtaccountcode);
        jtxtaccountcode.setBounds(260, 80, 170, 23);

        jlblyop.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jlblyop.setText("Account Formated");
        getContentPane().add(jlblyop);
        jlblyop.setBounds(70, 110, 140, 13);

        jtxtaccformated.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        getContentPane().add(jtxtaccformated);
        jtxtaccformated.setBounds(260, 110, 170, 23);

        jlblmop.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jlblmop.setText("Fiscal Year");
        getContentPane().add(jlblmop);
        jlblmop.setBounds(70, 140, 140, 13);

        jtxtmop.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        getContentPane().add(jtxtmop);
        jtxtmop.setBounds(480, 80, 280, 23);

        jlblacccode.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jlblacccode.setText("Currency");
        getContentPane().add(jlblacccode);
        jlblacccode.setBounds(390, 140, 70, 18);

        jtxtyop.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        getContentPane().add(jtxtyop);
        jtxtyop.setBounds(260, 140, 80, 23);

        jtxtcurnccode.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        getContentPane().add(jtxtcurnccode);
        jtxtcurnccode.setBounds(460, 140, 80, 23);

        jbtnBrowse.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jbtnBrowse.setText("...");
        jbtnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowseActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnBrowse);
        jbtnBrowse.setBounds(540, 140, 30, 17);

        jbtnBrowse2.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jbtnBrowse2.setText("...");
        jbtnBrowse2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowse2ActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnBrowse2);
        jbtnBrowse2.setBounds(440, 80, 30, 17);

        jbtnBrowse3.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jbtnBrowse3.setText("...");
        jbtnBrowse3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowse3ActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnBrowse3);
        jbtnBrowse3.setBounds(350, 140, 30, 17);

        jtblDetail.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jtblDetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Fiscal Periode", "End Date", "Budget Amount", "Inquiry Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtblDetail.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jtblDetail.setSurrendersFocusOnKeystroke(true);
        jtblDetail.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jtblDetailPropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(jtblDetail);
        jtblDetail.getColumnModel().getColumn(0).setMinWidth(150);
        jtblDetail.getColumnModel().getColumn(1).setMinWidth(100);
        jtblDetail.getColumnModel().getColumn(2).setMinWidth(200);
        jtblDetail.getColumnModel().getColumn(3).setMinWidth(200);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(70, 180, 680, 260);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
         try {
            moveFirst();

         } catch (CodeException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_formInternalFrameOpened

private void kdatePurchaseDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kdatePurchaseDateFocusLost

}//GEN-LAST:event_kdatePurchaseDateFocusLost

private void kdatePurchaseDateCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_kdatePurchaseDateCaretPositionChanged

}//GEN-LAST:event_kdatePurchaseDateCaretPositionChanged

private void kdatePurchaseDatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_kdatePurchaseDatePropertyChange

}//GEN-LAST:event_kdatePurchaseDatePropertyChange

private void jbtnBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBrowseActionPerformed
    // TODO add your handling code here:
    try {
        Gl_currencys brs = new Gl_currencys();
        FrmBrowse bd = new FrmBrowse(this, brs);
        bd.setFirstValue(jtxtcurnccode);
        bd.setModal(true);
        bd.setVisible(true);

    } catch (CodeException ex) {
        ex.printStackTrace();
    }
}//GEN-LAST:event_jbtnBrowseActionPerformed

private void jbtnBrowse2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBrowse2ActionPerformed
    // TODO add your handling code here:
    try {
        Gl_accounts brs = new Gl_accounts();
        FrmBrowse bd = new FrmBrowse(this, brs);
        bd.setFirstValue(jtxtaccountcode);
        bd.setSecondValue(jtxtaccformated);
        bd.setThirdValue(jtxtmop);
        bd.setModal(true);
        bd.setVisible(true);

        showData();
    } catch (CodeException ex) {
        ex.printStackTrace();
    }
}//GEN-LAST:event_jbtnBrowse2ActionPerformed

private void jbtnBrowse3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBrowse3ActionPerformed
    // TODO add your handling code here:
    try {
        Gl_fiscalhs brs = new Gl_fiscalhs();
        FrmBrowse bd = new FrmBrowse(this, brs);
        bd.setFirstValue(jtxtyop);
        bd.setModal(true);
        bd.setVisible(true);

        showData();

    } catch (CodeException ex) {
        ex.printStackTrace();
    }
}//GEN-LAST:event_jbtnBrowse3ActionPerformed

private void jtblDetailPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jtblDetailPropertyChange
    // TODO add your handling code here:
        int row = jtblDetail.getSelectedRow();
    int col = jtblDetail.getSelectedColumn();


    try{
        //if(posttable != row) {

        if (col==2){
           // tmodeldetail.setValueAt(GlobalUtils.getlastdateofmonth(GlobalUtils.churuf(tmodeldetail.getValueAt(row, 2))), row, 3);
        }
        if (row > -1) {

            cekCbhd();

        }


        //}
    }catch (Exception e){
        e.printStackTrace();
    }
}//GEN-LAST:event_jtblDetailPropertyChange

private void cekCbhd() throws CodeException {

    int row = jtblDetail.getSelectedRow();
    int col = jtblDetail.getSelectedColumn();


    Gl_account_budget cbhd;
    if (row > obj.size() - 1) {

    }else{
        cbhd = (Gl_account_budget) obj.list().get(row);
        cbhd.setbudget_amt(GlobalUtils.toDbl(GlobalUtils.churuf(tmodeldetail.getValueAt(row, 2))));
        cbhd.setupdated(true);
        obj.list().set(row, cbhd);
    }




}

private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {                                            
    setToolBar(iformtype,istatus);
    mf.setIcon(CLASSNAME);
}                                           

                                                                           

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new FrmGl_account_budget().setVisible(true);
                } catch (CodeException ex) {
                    ex.printStackTrace();
                }
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSeparator HorizontalLine;
    private javax.swing.JLabel jHeader;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JButton jbtnBrowse;
    private javax.swing.JButton jbtnBrowse2;
    private javax.swing.JButton jbtnBrowse3;
    private javax.swing.JLabel jlblacccode;
    private javax.swing.JLabel jlblid;
    private javax.swing.JLabel jlblmop;
    private javax.swing.JLabel jlblyop;
    private javax.swing.JTable jtblDetail;
    private javax.swing.JTextField jtxtaccformated;
    private javax.swing.JTextField jtxtaccountcode;
    private javax.swing.JTextField jtxtcurnccode;
    private javax.swing.JTextField jtxtmop;
    private javax.swing.JTextField jtxtyop;
    // End of variables declaration//GEN-END:variables

 
    public void moveFirst() throws CodeException {
        mf.setIcon(CLASSNAME);
    }

    public void movePrevious() throws CodeException {
        mf.setIcon(CLASSNAME);
    }

    public void moveNext() throws CodeException {
        mf.setIcon(CLASSNAME);
    }

    public void moveLast() throws CodeException {
        mf.setIcon(CLASSNAME);
    }

    public void searchData() throws CodeException {
        mf.setIcon(CLASSNAME);

    }
    public void newData() throws CodeException {
        istatus=1;
        setToolBar(iformtype,istatus);
    }

    public void saveData() throws CodeException {
        istatus = 0;

        for (Object o:obj.list()){
            Gl_account_budget glaccbud = (Gl_account_budget) o;
            if (glaccbud.isupdated()){
                glaccbud.save();
            }
        }
        
        showData();
        
        mf.setIcon(CLASSNAME);
    }

    public void showData() throws CodeException {
        setCursor(GlobalUtils.HOURGLASSCURSOR);

        GlobalModel.clearRow(tmodeldetail);
        obj = new Gl_account_budgets();
        obj.searchData(jtxtaccountcode.getText(),GlobalUtils.toInt(jtxtyop.getText()),jtxtcurnccode.getText());
        for (Object o:obj.list()){
            Gl_account_budget oglacbud=(Gl_account_budget) o;
            tmodeldetail.addRow(new Object[tmodeldetail.getColumnCount()]);
            tmodeldetail.setValueAt(oglacbud.getmop(), tmodeldetail.getRowCount()-1, 0);
            tmodeldetail.setValueAt(GlobalUtils.formatDate(oglacbud.getenddate(),"yyyy-MM-dd"), tmodeldetail.getRowCount()-1, 1);
            tmodeldetail.setValueAt(oglacbud.getbudget_amt(), tmodeldetail.getRowCount()-1, 2);
            tmodeldetail.setValueAt(oglacbud.getinquiry_amt(), tmodeldetail.getRowCount()-1, 3);
        }
             
        setCursor(GlobalUtils.NORMALCURSOR);
    }

    public void delete() throws CodeException {
        mf.setIcon(CLASSNAME);
    }

    public void setToolBar(int iFormType, int istatus) {
        mf.setToolBar(iformtype,istatus);        
    }

    public void setData() throws CodeException {
        
	

    }

    public void undo() throws CodeException {
        istatus = 0;
        moveFirst();
        showData();
    }

    public void execute() throws CodeException {
       saveData();
    }

    public void printData() throws CodeException {
        Map parameter = new HashMap();
        NavigatorObjectInt noi = (NavigatorObjectInt) obj;        
        String file   = GlobalUtils.getCurrentDir() +"/Reports/" + noi.getClassName() + ".jrxml";
        GlobalUtils.printReport(file,  false);    
    }

    public void importCsv() throws CodeException {
            
        
    }

    public void exportCsv() throws CodeException {
        
    }

    public void importText() throws CodeException {
        
    }

    public void exportText() throws CodeException {
        
    }

    
}
