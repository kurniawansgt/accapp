/*
 * From Template
 *
 * Created on June 29, 2007, 2:00 PM
 * 
 * 
 * How to Call this Form on FrmMainFrame
 * Sample : 
 *    
 * import accapp.component.cashbook.FrmCb_batchcontrol;
 * 
 * .......
 * 
 * 
 * FrmCb_batchcontrol frmCb_batchcontrol;
 * 
 * .......
 * 
 try {
        if (frmCb_batchcontrol == null) {
            frmmCb_batchcontrol = new FrmCb_batchcontrol(this);
        }
        
        showForm(frmCb_batchcontrol);
        
    }catch(Exception e) {
        e.printStackTrace();
    }
 * 
 */

package accapp.component.cashbook;

import accapp.objectclasses.cashbook.Cb_bank;
import accapp.objectclasses.cashbook.Cb_banks;
import common.component.FrmBrowse;
import common.classinterface.NavigatorFormInt;
import common.classinterface.NavigatorObjectInt;
import common.component.FrmMainFrame;

import common.utils.CodeException;
import common.utils.GlobalUtils;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import common.utils.ExtFileChooserFilter;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;
import accapp.objectclasses.cashbook.Cb_batchcontrol;
import accapp.objectclasses.cashbook.Cb_batchcontrols;
import common.tablemodels.GlobalModel;
import java.awt.event.KeyEvent;
import java.text.DecimalFormat;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author  Generator
 */

public class FrmCb_batchcontrol extends javax.swing.JInternalFrame implements NavigatorFormInt {

    private static int istatus = 0;
    private static int iformtype = 0;
    public static String CLASSNAME="FrmCb_batchcontrol";
    
    FrmMainFrame mf ;
    
    
    public Cb_batchcontrol obj = new Cb_batchcontrol();
   
    Cb_batchcontrols cbcs ;
    Object[] data;
    DefaultTableModel tmodel;


    DecimalFormat decform = new DecimalFormat("##0");


    int posttable = 0;
    
    /** Creates new form Area */
    public FrmCb_batchcontrol() throws CodeException {
        initComponents();
    }
    
    public FrmCb_batchcontrol(FrmMainFrame mf) throws CodeException{
        this.mf = mf;
        initComponents();


        cbcs= new Cb_batchcontrols(0);
        data = new Object[jtblCB_batchcontrol.getRowCount()];

        tmodel = (DefaultTableModel) jtblCB_batchcontrol.getModel();

        loadCollections();
        
    }

    private void cariBatchOnTable(double batchno) {
        for(int i = 0;  i < tmodel.getRowCount(); i++ ) {
            try{
                    if (Double.parseDouble(tmodel.getValueAt(i, 1)+"") == batchno) {
                        GlobalUtils.selectCellTable(jtblCB_batchcontrol, i, 1);
                        posttable = i;
                        break;
                    }
            }catch (Exception e) {}
        }
    }

    private void loadCollections() throws CodeException{

        cbcs = new Cb_batchcontrols(0);
        GlobalModel.clearRow(tmodel);
        for(Object o : cbcs.list()) {

            tmodel.addRow(data);
            loadRow((Cb_batchcontrol) o, tmodel.getRowCount() - 1);
        }
        
    }


    private void loadRow(Cb_batchcontrol cbc, int row) throws CodeException {
        /*
         0  "Id",
         1  "Batch Number",
         2  "Bank",
         3  "Description",
         4  "Ready",
         5  "Batch Type",
         6  "Status",
         7  "Entry Type",
         8  "Total Debit",   5
         9  "Total Credit",  6
         10 "Number Of Enum" 4
       */


       tmodel.setValueAt(cbc.getID(), row, 0);
       tmodel.setValueAt(decform.format(cbc.getbatchno()), row, 1);
       tmodel.setValueAt(cbc.getbankcode(), row, 2);
       tmodel.setValueAt(cbc.getbtchdesc(), row, 3);
       tmodel.setValueAt(cbc.getentrycnt(), row, 4);
       tmodel.setValueAt(cbc.getdebittot(), row, 5);
       tmodel.setValueAt(cbc.getcredittot(), row, 6);
       tmodel.setValueAt(cbc.getreadytpost()==1, row, 7);
       tmodel.setValueAt(cbc.getbatchtype().equals("N") ? "Normal Entries" : "Transfer", row, 8);
       tmodel.setValueAt(cbc.getbatchsts(), row, 9);
       tmodel.setValueAt(cbc.getentrytype().equals("E") ? "Entered" : "Generated", row, 10);
       

    }
     
       
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jHeader = new javax.swing.JLabel();
        HorizontalLine = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jbtnBrowse = new javax.swing.JButton();
        jtxtid = new javax.swing.JTextField();
        jlblbatchno = new javax.swing.JLabel();
        jtxtbatchno = new javax.swing.JTextField();
        jlblbankcode = new javax.swing.JLabel();
        jtxtbankcode = new javax.swing.JTextField();
        jtxtbtchdesc = new javax.swing.JTextField();
        jtxtentrydate = new javax.swing.JTextField();
        jtxtauditdate = new javax.swing.JTextField();
        jtxtaudituser = new javax.swing.JTextField();
        jtxtcmpnyid = new javax.swing.JTextField();
        jtabpaneChoice = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblCB_batchcontrol = new javax.swing.JTable();
        jbtnPost = new javax.swing.JButton();
        jbtnReload = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jlblsrceledgr = new javax.swing.JLabel();
        jtxtsrceledgr = new javax.swing.JTextField();
        jlblbatchdate = new javax.swing.JLabel();
        jtxtbatchdate = new javax.swing.JTextField();
        jlbllastedited = new javax.swing.JLabel();
        jtxtlastedited = new javax.swing.JTextField();
        jlblbatchtype = new javax.swing.JLabel();
        jlblentrytype = new javax.swing.JLabel();
        jlblbatchsts = new javax.swing.JLabel();
        jtxtbatchsts = new javax.swing.JTextField();
        jlblpostngseq = new javax.swing.JLabel();
        jtxtpostngseq = new javax.swing.JTextField();
        jlbldebittot = new javax.swing.JLabel();
        jtxtdebittot = new javax.swing.JTextField();
        jlblcredittot = new javax.swing.JLabel();
        jtxtcredittot = new javax.swing.JTextField();
        jlblentrycnt = new javax.swing.JLabel();
        jtxtentrycnt = new javax.swing.JTextField();
        jlblposteddate = new javax.swing.JLabel();
        jtxtposteddate = new javax.swing.JTextField();
        jlbladjustamt = new javax.swing.JLabel();
        jtxtadjustamt = new javax.swing.JTextField();
        jchkactiveswtch = new javax.swing.JCheckBox();
        jchkreadytpost = new javax.swing.JCheckBox();
        jcmbbatchtype = new javax.swing.JComboBox();
        jcmbentrytype = new javax.swing.JComboBox();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jbtnBrowseBank = new javax.swing.JButton();
        jtxtbankname = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Batch Control");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        jHeader.setBackground(new java.awt.Color(102, 102, 102));
        jHeader.setFont(new java.awt.Font("Dialog", 1, 10));
        jHeader.setForeground(new java.awt.Color(255, 255, 255));
        jHeader.setText(" : : Cb_batchcontrol");
        jHeader.setAlignmentY(0.0F);
        jHeader.setOpaque(true);
        getContentPane().add(jHeader);
        jHeader.setBounds(30, 30, 130, 20);

        HorizontalLine.setForeground(new java.awt.Color(102, 102, 102));
        HorizontalLine.setAlignmentX(0.0F);
        HorizontalLine.setAlignmentY(0.0F);
        getContentPane().add(HorizontalLine);
        HorizontalLine.setBounds(160, 50, 650, 2);

        jSeparator3.setForeground(new java.awt.Color(102, 102, 102));
        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator3.setAlignmentX(0.0F);
        jSeparator3.setAlignmentY(0.0F);
        getContentPane().add(jSeparator3);
        jSeparator3.setBounds(30, 50, 2, 400);

        jbtnBrowse.setText("...");
        jbtnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowseActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnBrowse);
        jbtnBrowse.setBounds(280, 70, 30, 17);

        jtxtid.setEditable(false);
        jtxtid.setFont(new java.awt.Font("Dialog", 0, 8));
        jtxtid.setText("id");
        getContentPane().add(jtxtid);
        jtxtid.setBounds(170, 30, 70, 16);

        jlblbatchno.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblbatchno.setText("Batch Number");
        getContentPane().add(jlblbatchno);
        jlblbatchno.setBounds(60, 70, 100, 14);

        jtxtbatchno.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtbatchno.setText("batchno");
        jtxtbatchno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtbatchnoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtxtbatchnoKeyReleased(evt);
            }
        });
        getContentPane().add(jtxtbatchno);
        jtxtbatchno.setBounds(180, 70, 90, 20);

        jlblbankcode.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblbankcode.setText("Bank Code");
        getContentPane().add(jlblbankcode);
        jlblbankcode.setBounds(60, 100, 100, 14);

        jtxtbankcode.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtbankcode.setText("bankcode");
        jtxtbankcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtbankcodeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtxtbankcodeKeyReleased(evt);
            }
        });
        getContentPane().add(jtxtbankcode);
        jtxtbankcode.setBounds(180, 100, 90, 20);

        jtxtbtchdesc.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtbtchdesc.setText("btchdesc");
        jtxtbtchdesc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtxtbtchdescKeyReleased(evt);
            }
        });
        getContentPane().add(jtxtbtchdesc);
        jtxtbtchdesc.setBounds(320, 70, 420, 20);

        jtxtentrydate.setEditable(false);
        jtxtentrydate.setFont(new java.awt.Font("Dialog", 0, 8));
        jtxtentrydate.setText("entrydate");
        getContentPane().add(jtxtentrydate);
        jtxtentrydate.setBounds(250, 30, 170, 16);

        jtxtauditdate.setEditable(false);
        jtxtauditdate.setFont(new java.awt.Font("Dialog", 0, 8));
        jtxtauditdate.setText("auditdate");
        getContentPane().add(jtxtauditdate);
        jtxtauditdate.setBounds(430, 30, 170, 16);

        jtxtaudituser.setEditable(false);
        jtxtaudituser.setFont(new java.awt.Font("Dialog", 0, 8));
        jtxtaudituser.setText("audituser");
        getContentPane().add(jtxtaudituser);
        jtxtaudituser.setBounds(610, 30, 150, 16);

        jtxtcmpnyid.setEditable(false);
        jtxtcmpnyid.setFont(new java.awt.Font("Dialog", 0, 8));
        jtxtcmpnyid.setText("cmpnyid");
        getContentPane().add(jtxtcmpnyid);
        jtxtcmpnyid.setBounds(770, 30, 80, 16);

        jtabpaneChoice.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);

        jPanel1.setLayout(null);

        jtblCB_batchcontrol.setFont(new java.awt.Font("Dialog", 0, 10));
        jtblCB_batchcontrol.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Batch No.", "Bank", "Description", "Entry", "Total Debit", "Total Credit", "Ready", "Batch Type", "Status", "Entry Type"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtblCB_batchcontrol.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jtblCB_batchcontrol.setColumnSelectionAllowed(true);
        jtblCB_batchcontrol.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtblCB_batchcontrolMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtblCB_batchcontrol);
        jtblCB_batchcontrol.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        jtblCB_batchcontrol.getColumnModel().getColumn(0).setMinWidth(0);
        jtblCB_batchcontrol.getColumnModel().getColumn(0).setPreferredWidth(0);
        jtblCB_batchcontrol.getColumnModel().getColumn(0).setMaxWidth(0);
        jtblCB_batchcontrol.getColumnModel().getColumn(1).setResizable(false);
        jtblCB_batchcontrol.getColumnModel().getColumn(1).setPreferredWidth(80);
        jtblCB_batchcontrol.getColumnModel().getColumn(3).setPreferredWidth(200);
        jtblCB_batchcontrol.getColumnModel().getColumn(4).setPreferredWidth(60);
        jtblCB_batchcontrol.getColumnModel().getColumn(5).setPreferredWidth(100);
        jtblCB_batchcontrol.getColumnModel().getColumn(6).setPreferredWidth(100);
        jtblCB_batchcontrol.getColumnModel().getColumn(8).setPreferredWidth(120);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(10, 10, 780, 290);

        jbtnPost.setFont(new java.awt.Font("Dialog", 0, 10));
        jbtnPost.setForeground(new java.awt.Color(153, 0, 51));
        jbtnPost.setText("Post");
        jPanel1.add(jbtnPost);
        jbtnPost.setBounds(110, 310, 100, 23);

        jbtnReload.setFont(new java.awt.Font("Dialog", 0, 10));
        jbtnReload.setText("Reload");
        jPanel1.add(jbtnReload);
        jbtnReload.setBounds(10, 310, 100, 23);

        jtabpaneChoice.addTab("List", jPanel1);

        jPanel2.setLayout(null);

        jlblsrceledgr.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblsrceledgr.setText("Source Ledger");
        jPanel2.add(jlblsrceledgr);
        jlblsrceledgr.setBounds(40, 160, 150, 14);

        jtxtsrceledgr.setEditable(false);
        jtxtsrceledgr.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtsrceledgr.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        jtxtsrceledgr.setText("srceledgr");
        jPanel2.add(jtxtsrceledgr);
        jtxtsrceledgr.setBounds(230, 160, 40, 20);

        jlblbatchdate.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblbatchdate.setText("Batch Date");
        jPanel2.add(jlblbatchdate);
        jlblbatchdate.setBounds(40, 280, 150, 14);

        jtxtbatchdate.setEditable(false);
        jtxtbatchdate.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtbatchdate.setText("batchdate");
        jPanel2.add(jtxtbatchdate);
        jtxtbatchdate.setBounds(230, 280, 140, 20);

        jlbllastedited.setFont(new java.awt.Font("Dialog", 1, 10));
        jlbllastedited.setText("Last Edited");
        jPanel2.add(jlbllastedited);
        jlbllastedited.setBounds(440, 290, 150, 14);

        jtxtlastedited.setEditable(false);
        jtxtlastedited.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtlastedited.setText("lastedited");
        jPanel2.add(jtxtlastedited);
        jtxtlastedited.setBounds(560, 290, 150, 20);

        jlblbatchtype.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblbatchtype.setText("Batch Type");
        jPanel2.add(jlblbatchtype);
        jlblbatchtype.setBounds(40, 60, 150, 14);

        jlblentrytype.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblentrytype.setText("Entry Type");
        jPanel2.add(jlblentrytype);
        jlblentrytype.setBounds(430, 60, 150, 14);

        jlblbatchsts.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblbatchsts.setText("Status (Open, Posted, Error)");
        jPanel2.add(jlblbatchsts);
        jlblbatchsts.setBounds(40, 100, 150, 14);

        jtxtbatchsts.setEditable(false);
        jtxtbatchsts.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtbatchsts.setText("batchsts");
        jPanel2.add(jtxtbatchsts);
        jtxtbatchsts.setBounds(230, 100, 130, 20);

        jlblpostngseq.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblpostngseq.setText("Posting Sequence");
        jPanel2.add(jlblpostngseq);
        jlblpostngseq.setBounds(40, 250, 150, 14);

        jtxtpostngseq.setEditable(false);
        jtxtpostngseq.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtpostngseq.setText("postngseq");
        jPanel2.add(jtxtpostngseq);
        jtxtpostngseq.setBounds(230, 250, 80, 20);

        jlbldebittot.setFont(new java.awt.Font("Dialog", 1, 10));
        jlbldebittot.setText("Total Debit");
        jPanel2.add(jlbldebittot);
        jlbldebittot.setBounds(430, 160, 150, 14);

        jtxtdebittot.setEditable(false);
        jtxtdebittot.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtdebittot.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtxtdebittot.setText("debittot");
        jPanel2.add(jtxtdebittot);
        jtxtdebittot.setBounds(560, 160, 170, 20);

        jlblcredittot.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblcredittot.setText("Total Credit");
        jPanel2.add(jlblcredittot);
        jlblcredittot.setBounds(430, 190, 150, 14);

        jtxtcredittot.setEditable(false);
        jtxtcredittot.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtcredittot.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtxtcredittot.setText("credittot");
        jPanel2.add(jtxtcredittot);
        jtxtcredittot.setBounds(560, 190, 170, 20);

        jlblentrycnt.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblentrycnt.setText("Number of enum");
        jPanel2.add(jlblentrycnt);
        jlblentrycnt.setBounds(230, 20, 150, 14);

        jtxtentrycnt.setEditable(false);
        jtxtentrycnt.setText("entrycnt");
        jPanel2.add(jtxtentrycnt);
        jtxtentrycnt.setBounds(380, 20, 80, 20);

        jlblposteddate.setFont(new java.awt.Font("Dialog", 1, 10));
        jlblposteddate.setText("Posted Date");
        jPanel2.add(jlblposteddate);
        jlblposteddate.setBounds(440, 250, 150, 14);

        jtxtposteddate.setEditable(false);
        jtxtposteddate.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtposteddate.setText("posteddate");
        jPanel2.add(jtxtposteddate);
        jtxtposteddate.setBounds(560, 250, 170, 20);

        jlbladjustamt.setFont(new java.awt.Font("Dialog", 1, 10));
        jlbladjustamt.setText("Adjustment");
        jPanel2.add(jlbladjustamt);
        jlbladjustamt.setBounds(40, 190, 150, 14);

        jtxtadjustamt.setEditable(false);
        jtxtadjustamt.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtadjustamt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtxtadjustamt.setText("adjustamt");
        jPanel2.add(jtxtadjustamt);
        jtxtadjustamt.setBounds(230, 190, 170, 20);

        jchkactiveswtch.setFont(new java.awt.Font("Dialog", 1, 10));
        jchkactiveswtch.setText("Active Switch");
        jchkactiveswtch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jchkactiveswtchActionPerformed(evt);
            }
        });
        jPanel2.add(jchkactiveswtch);
        jchkactiveswtch.setBounds(560, 20, 130, 23);

        jchkreadytpost.setFont(new java.awt.Font("Dialog", 1, 10));
        jchkreadytpost.setText("Ready To Post");
        jchkreadytpost.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jchkreadytpostMouseClicked(evt);
            }
        });
        jPanel2.add(jchkreadytpost);
        jchkreadytpost.setBounds(40, 20, 130, 23);

        jcmbbatchtype.setFont(new java.awt.Font("Dialog", 0, 10));
        jcmbbatchtype.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Normal Entries", "Transfer" }));
        jcmbbatchtype.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcmbbatchtypeItemStateChanged(evt);
            }
        });
        jPanel2.add(jcmbbatchtype);
        jcmbbatchtype.setBounds(230, 60, 130, 22);

        jcmbentrytype.setFont(new java.awt.Font("Dialog", 0, 10));
        jcmbentrytype.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Entered", "Generated" }));
        jcmbentrytype.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcmbentrytypeItemStateChanged(evt);
            }
        });
        jPanel2.add(jcmbentrytype);
        jcmbentrytype.setBounds(560, 60, 130, 22);
        jPanel2.add(jSeparator1);
        jSeparator1.setBounds(40, 142, 740, 10);
        jPanel2.add(jSeparator2);
        jSeparator2.setBounds(40, 220, 740, 2);

        jtabpaneChoice.addTab("Detail", jPanel2);

        getContentPane().add(jtabpaneChoice);
        jtabpaneChoice.setBounds(60, 140, 800, 380);

        jbtnBrowseBank.setText("...");
        jbtnBrowseBank.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowseBankActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnBrowseBank);
        jbtnBrowseBank.setBounds(280, 100, 30, 17);

        jtxtbankname.setEditable(false);
        jtxtbankname.setFont(new java.awt.Font("Dialog", 0, 10));
        jtxtbankname.setText("bankname");
        getContentPane().add(jtxtbankname);
        jtxtbankname.setBounds(320, 100, 300, 20);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
         try {
            moveLast();

         } catch (CodeException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_formInternalFrameOpened

private void kdatePurchaseDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kdatePurchaseDateFocusLost

}//GEN-LAST:event_kdatePurchaseDateFocusLost

private void kdatePurchaseDateCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_kdatePurchaseDateCaretPositionChanged

}//GEN-LAST:event_kdatePurchaseDateCaretPositionChanged

private void kdatePurchaseDatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_kdatePurchaseDatePropertyChange

}//GEN-LAST:event_kdatePurchaseDatePropertyChange

private void jchkactiveswtchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jchkactiveswtchActionPerformed
    // TODO add your handling code here:
}//GEN-LAST:event_jchkactiveswtchActionPerformed

private void jtxtbatchnoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtbatchnoKeyPressed

    try {
        
        tmodel.setValueAt(jtxtbatchno.getText(), tmodel.getRowCount()-1,1);
        
        if(evt.getKeyCode() == evt.VK_ENTER) {
            searchData();
        }

        jtxtbtchdesc.requestFocus();

    }catch (Exception e) {

    }

}//GEN-LAST:event_jtxtbatchnoKeyPressed

private void jtxtbtchdescKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtbtchdescKeyReleased

    tmodel.setValueAt(jtxtbtchdesc.getText(), jtblCB_batchcontrol.getSelectedRow(), 3);
    
}//GEN-LAST:event_jtxtbtchdescKeyReleased

private void jtxtbatchnoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtbatchnoKeyReleased
    tmodel.setValueAt(jtxtbatchno.getText(), jtblCB_batchcontrol.getSelectedRow(),1);
}//GEN-LAST:event_jtxtbatchnoKeyReleased

private void jtxtbankcodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtbankcodeKeyReleased
    tmodel.setValueAt(jtxtbankcode.getText(), jtblCB_batchcontrol.getSelectedRow(),2);
}//GEN-LAST:event_jtxtbankcodeKeyReleased

private void jchkreadytpostMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jchkreadytpostMouseClicked
    tmodel.setValueAt(jchkreadytpost.isSelected(), jtblCB_batchcontrol.getSelectedRow(), 4);
}//GEN-LAST:event_jchkreadytpostMouseClicked

private void jcmbbatchtypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcmbbatchtypeItemStateChanged
    tmodel.setValueAt(jcmbbatchtype.getSelectedItem()+"", jtblCB_batchcontrol.getSelectedRow(), 5);
    
}//GEN-LAST:event_jcmbbatchtypeItemStateChanged

private void jcmbentrytypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcmbentrytypeItemStateChanged

    tmodel.setValueAt(jcmbentrytype.getSelectedItem()+"", jtblCB_batchcontrol.getSelectedRow(), 7);

}//GEN-LAST:event_jcmbentrytypeItemStateChanged

private void jtblCB_batchcontrolMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtblCB_batchcontrolMouseClicked

    int icol=jtblCB_batchcontrol.getSelectedColumn();
    int irow=jtblCB_batchcontrol.getSelectedRow();
    if (irow>-1){
        try {
            if(posttable != jtblCB_batchcontrol.getSelectedRow()) {
                jtxtbatchno.setText(tmodel.getValueAt(jtblCB_batchcontrol.getSelectedRow(), 1) +"");
                    searchData();
            }

            boolean readytopost = obj.getreadytpost() == 1 ? true: false;
            boolean tblreadytopost = Boolean.parseBoolean(tmodel.getValueAt(jtblCB_batchcontrol.getSelectedRow(), 4) + "");

            if (icol==8){
                if(readytopost != tblreadytopost){
                    jchkreadytpost.setSelected(tblreadytopost);
                    saveData();
                }
            }

        }catch(Exception e) {}
    }
}//GEN-LAST:event_jtblCB_batchcontrolMouseClicked

private void jbtnBrowseBankActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBrowseBankActionPerformed

          try {
	      Cb_banks brs = new Cb_banks();
	      FrmBrowse bd = new FrmBrowse(brs);
	      bd.setFirstValue(jtxtbankcode);
	      bd.setSecondValue(jtxtbankname);
	      bd.setModal(true);
	      bd.setVisible(true);

	  } catch (CodeException ex) {
	      ex.printStackTrace();
	  }
    
}//GEN-LAST:event_jbtnBrowseBankActionPerformed

private void jtxtbankcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtbankcodeKeyPressed

    if(evt.getKeyCode() == KeyEvent.VK_ENTER){
        try{
            Cb_bank bank = new Cb_bank(jtxtbankcode.getText());
            jtxtbankname.setText(bank.getbankname());
        }catch(Exception e){}
    }
    
}//GEN-LAST:event_jtxtbankcodeKeyPressed


private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
        try {
            loadCollections();
        } catch (CodeException ex) {
            Logger.getLogger(FrmCb_batchcontrol.class.getName()).log(Level.SEVERE, null, ex);
        }
    setToolBar(iformtype,istatus);
    mf.setIcon(CLASSNAME);
}                                           

private void jbtnBrowseActionPerformed(java.awt.event.ActionEvent evt) {                                           
      try {
	      Cb_batchcontrols brs = new Cb_batchcontrols();
	      FrmBrowse bd = new FrmBrowse(this, brs);
	      bd.setFirstValue(jtxtbatchno);
	      bd.setModal(true);
	      bd.setVisible(true);            
	      
	  } catch (CodeException ex) {
	      ex.printStackTrace();
	  }
}                                                                                 

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new FrmCb_batchcontrol().setVisible(true);
                } catch (CodeException ex) {
                    ex.printStackTrace();
                }
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSeparator HorizontalLine;
    private javax.swing.JLabel jHeader;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JButton jbtnBrowse;
    private javax.swing.JButton jbtnBrowseBank;
    private javax.swing.JButton jbtnPost;
    private javax.swing.JButton jbtnReload;
    private javax.swing.JCheckBox jchkactiveswtch;
    private javax.swing.JCheckBox jchkreadytpost;
    private javax.swing.JComboBox jcmbbatchtype;
    private javax.swing.JComboBox jcmbentrytype;
    private javax.swing.JLabel jlbladjustamt;
    private javax.swing.JLabel jlblbankcode;
    private javax.swing.JLabel jlblbatchdate;
    private javax.swing.JLabel jlblbatchno;
    private javax.swing.JLabel jlblbatchsts;
    private javax.swing.JLabel jlblbatchtype;
    private javax.swing.JLabel jlblcredittot;
    private javax.swing.JLabel jlbldebittot;
    private javax.swing.JLabel jlblentrycnt;
    private javax.swing.JLabel jlblentrytype;
    private javax.swing.JLabel jlbllastedited;
    private javax.swing.JLabel jlblposteddate;
    private javax.swing.JLabel jlblpostngseq;
    private javax.swing.JLabel jlblsrceledgr;
    private javax.swing.JTabbedPane jtabpaneChoice;
    private javax.swing.JTable jtblCB_batchcontrol;
    private javax.swing.JTextField jtxtadjustamt;
    private javax.swing.JTextField jtxtauditdate;
    private javax.swing.JTextField jtxtaudituser;
    private javax.swing.JTextField jtxtbankcode;
    private javax.swing.JTextField jtxtbankname;
    private javax.swing.JTextField jtxtbatchdate;
    private javax.swing.JTextField jtxtbatchno;
    private javax.swing.JTextField jtxtbatchsts;
    private javax.swing.JTextField jtxtbtchdesc;
    private javax.swing.JTextField jtxtcmpnyid;
    private javax.swing.JTextField jtxtcredittot;
    private javax.swing.JTextField jtxtdebittot;
    private javax.swing.JTextField jtxtentrycnt;
    private javax.swing.JTextField jtxtentrydate;
    private javax.swing.JTextField jtxtid;
    private javax.swing.JTextField jtxtlastedited;
    private javax.swing.JTextField jtxtposteddate;
    private javax.swing.JTextField jtxtpostngseq;
    private javax.swing.JTextField jtxtsrceledgr;
    // End of variables declaration//GEN-END:variables

 
    public void moveFirst() throws CodeException {
        obj.moveFirst();
        showData();
         try{
            cariBatchOnTable(Double.parseDouble(jtxtbatchno.getText()));
         }catch (Exception e){}
        mf.setIcon(CLASSNAME);
    }

    public void movePrevious() throws CodeException {
        obj.movePrevious();
        showData();
         try{
            cariBatchOnTable(Double.parseDouble(jtxtbatchno.getText()));
         }catch (Exception e){}
        mf.setIcon(CLASSNAME);
    }

    public void moveNext() throws CodeException {
        obj.moveNext();
        showData();
         try{
            cariBatchOnTable(Double.parseDouble(jtxtbatchno.getText()));
         }catch (Exception e){}
        mf.setIcon(CLASSNAME);
    }

    public void moveLast() throws CodeException {
        obj.moveLast();
        showData();
         try{
            cariBatchOnTable(Double.parseDouble(jtxtbatchno.getText()));
         }catch (Exception e){}
        mf.setIcon(CLASSNAME);
    }

    public void searchData() throws CodeException {
        obj = new Cb_batchcontrol(this.jtxtbatchno.getText());
        showData();
         try{
            cariBatchOnTable(Double.parseDouble(jtxtbatchno.getText()));
         }catch (Exception e){}
        mf.setIcon(CLASSNAME);

    }
    public void newData() throws CodeException {
        /*obj = new Cb_batchcontrol();
        
        tmodel.addRow(data);
        tmodel.setValueAt(obj.getID(), tmodel.getRowCount()-1,0);

        try{
            GlobalUtils.selectCellTable(jtblCB_batchcontrol, tmodel.getRowCount(), 1);
            GlobalUtils.scrollTableRowTo(jtblCB_batchcontrol, tmodel.getRowCount());
        }catch(Exception e) {}
        istatus=1;
        
        showData();
        setToolBar(iformtype,istatus);
         *
         *
         */
    }

    public void saveData() throws CodeException {
        Cb_bank cbb=new Cb_bank(jtxtbankcode.getText());
        if (cbb.getID()>0){
            istatus = 0;
            setData();
            obj.save();

            showData();
        } else {
            JOptionPane.showMessageDialog(this,"Invalid procedure, Bank Code "+jtxtbankcode.getText()+" Doesnt Exits");
        }
        
        mf.setIcon(CLASSNAME);
    }

    public void showData() throws CodeException {
        setCursor(GlobalUtils.HOURGLASSCURSOR);
	
             jtxtid.setText(obj.toString(Cb_batchcontrol.PROPERTY_ID));
             jtxtbatchno.setText(decform.format(obj.getbatchno()));
             jchkactiveswtch.setSelected(obj.getactiveswtch() == 1);
             jtxtbankcode.setText(obj.toString(Cb_batchcontrol.PROPERTY_BANKCODE));

             try{
                 jtxtbankname.setText(obj.getBank().getbankname());
             }catch(Exception e) {
                 e.printStackTrace();
                   jtxtbankname.setText("");
             }

             if (obj.getID()>0){
                 jtxtbankcode.setEditable(false);
                 jbtnBrowseBank.setEnabled(false);

             } else {
                 jtxtbankcode.setEditable(true);
                 jbtnBrowseBank.setEnabled(true);
             }

             jtxtbtchdesc.setText(obj.toString(Cb_batchcontrol.PROPERTY_BTCHDESC));
             jtxtsrceledgr.setText(obj.toString(Cb_batchcontrol.PROPERTY_SRCELEDGR));
             jtxtbatchdate.setText(obj.toString(Cb_batchcontrol.PROPERTY_BATCHDATE));
             jtxtlastedited.setText(obj.toString(Cb_batchcontrol.PROPERTY_LASTEDITED));

             try {
                 if (obj.getbatchtype().equals("N")) {
                    jcmbbatchtype.setSelectedItem(jcmbbatchtype.getItemAt(0)+"");
                 }else {
                    jcmbbatchtype.setSelectedItem(jcmbbatchtype.getItemAt(1)+"");
                 }
            }catch(Exception e) {}


             try{
                 if(obj.getentrytype().equals("E")) {
                    jcmbentrytype.setSelectedItem(jcmbentrytype.getItemAt(0)+"");
                 }else{
                    jcmbentrytype.setSelectedItem(jcmbentrytype.getItemAt(0)+"");
                 }

             }catch(Exception e) {}


             jtxtbatchsts.setText(obj.toString(Cb_batchcontrol.PROPERTY_BATCHSTS));
             jtxtpostngseq.setText(obj.toString(Cb_batchcontrol.PROPERTY_POSTNGSEQ));
             jtxtdebittot.setText(GlobalUtils.formatnumber(obj.getdebittot()));
             jtxtcredittot.setText(GlobalUtils.formatnumber(obj.getcredittot()));
             jtxtentrycnt.setText(obj.toString(Cb_batchcontrol.PROPERTY_ENTRYCNT));

             jtxtposteddate.setText(obj.toString(Cb_batchcontrol.PROPERTY_POSTEDDATE));

             jchkreadytpost.setSelected(obj.getreadytpost() == 1);
             
             jtxtadjustamt.setText(obj.toString(Cb_batchcontrol.PROPERTY_ADJUSTAMT));
             jtxtentrydate.setText(obj.toString(Cb_batchcontrol.PROPERTY_ENTRYDATE));
             jtxtauditdate.setText(obj.toString(Cb_batchcontrol.PROPERTY_AUDITDATE));
             jtxtaudituser.setText(obj.toString(Cb_batchcontrol.PROPERTY_AUDITUSER));
             jtxtcmpnyid.setText(obj.toString(Cb_batchcontrol.PROPERTY_CMPNYID));


        setCursor(GlobalUtils.NORMALCURSOR);
    }

    public void delete() throws CodeException {
        obj.delete();
        obj.moveFirst();
        showData();
        mf.setIcon(CLASSNAME);
    }

    public void setToolBar(int iFormType, int istatus) {
        mf.setToolBar(iformtype,istatus);        
    }

    public void setData() throws CodeException {
        
	
          obj.fromString(Cb_batchcontrol.PROPERTY_ID, jtxtid.getText()) ;
          obj.fromString(Cb_batchcontrol.PROPERTY_BATCHNO, jtxtbatchno.getText()) ;

          obj.setactiveswtch(jchkactiveswtch.isSelected()? 1 : 0);

          obj.fromString(Cb_batchcontrol.PROPERTY_BANKCODE, jtxtbankcode.getText()) ;
          obj.fromString(Cb_batchcontrol.PROPERTY_BTCHDESC, jtxtbtchdesc.getText()) ;
          obj.fromString(Cb_batchcontrol.PROPERTY_SRCELEDGR, jtxtsrceledgr.getText()) ;
          obj.fromString(Cb_batchcontrol.PROPERTY_BATCHDATE, jtxtbatchdate.getText()) ;
          obj.fromString(Cb_batchcontrol.PROPERTY_LASTEDITED, jtxtlastedited.getText()) ;

          obj.setbatchtype((jcmbbatchtype.getSelectedItem()+"").substring(0,1));
          obj.setentrytype((jcmbentrytype.getSelectedItem()+"").substring(0,1));
          obj.fromString(Cb_batchcontrol.PROPERTY_BATCHSTS, jtxtbatchsts.getText()) ;
          obj.fromString(Cb_batchcontrol.PROPERTY_POSTNGSEQ, jtxtpostngseq.getText()) ;
          obj.setdebittot(GlobalUtils.toDbl(jtxtdebittot.getText())) ;
          obj.setcredittot(GlobalUtils.toDbl(jtxtcredittot.getText())) ;
          obj.fromString(Cb_batchcontrol.PROPERTY_ENTRYCNT, jtxtentrycnt.getText()) ;
          obj.fromString(Cb_batchcontrol.PROPERTY_POSTEDDATE, jtxtposteddate.getText()) ;

          obj.setreadytpost(jchkreadytpost.isSelected()? 1:0);

          obj.fromString(Cb_batchcontrol.PROPERTY_ADJUSTAMT, jtxtadjustamt.getText()) ;
          obj.fromString(Cb_batchcontrol.PROPERTY_ENTRYDATE, jtxtentrydate.getText()) ;
          obj.fromString(Cb_batchcontrol.PROPERTY_AUDITDATE, jtxtauditdate.getText()) ;
          obj.fromString(Cb_batchcontrol.PROPERTY_AUDITUSER, jtxtaudituser.getText()) ;
          obj.fromString(Cb_batchcontrol.PROPERTY_CMPNYID, jtxtcmpnyid.getText()) ;

    }

    public void undo() throws CodeException {
        istatus = 0;
        
        moveFirst();
        showData();
    }

    public void execute() throws CodeException {
       saveData();
    }

    public void printData() throws CodeException {
        Map parameter = new HashMap();
        NavigatorObjectInt noi = (NavigatorObjectInt) obj;        
        String file   = GlobalUtils.getCurrentDir() +"/Reports/" + noi.getClassName() + ".jrxml";
        GlobalUtils.printReport(file,  false);    
    }

    public void importCsv() throws CodeException {
            
        String file1 = "";
        String file2 = GlobalUtils.getCurrentDir() + GlobalUtils.temp + obj.TABLEPROCESS + ".csv";   
        
        JFileChooser chooser = new JFileChooser(".");
        chooser.setDialogTitle("Pilih File ");
        FileFilter filter1 = new ExtFileChooserFilter("CSV", new String[] { "CSV"});
        chooser.setFileFilter(filter1);

        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            File selectedFile = chooser.getSelectedFile();
            
            try {
                file1 = selectedFile.getCanonicalPath();
            
            }catch (Exception e) {}

            GlobalUtils.copyfile(file1, file2 );                

            obj.importCsv();
            
        }else {
          JOptionPane.showMessageDialog(null,"No Selection ");
        }

    }

    public void exportCsv() throws CodeException {
        
    
        if (obj.exportCsv()) {
            
            String file1 = GlobalUtils.getCurrentDir() + GlobalUtils.temp + obj.TABLEPROCESS + ".csv";   
            String file2 = "";
            
            JFileChooser chooser = new JFileChooser(".");
            chooser.setDialogTitle("Pilih Directory ");
    
            if (chooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
                try {
                    file2 = chooser.getSelectedFile().getCanonicalPath() + ".csv";
                        
                    JOptionPane.showMessageDialog(null, GlobalUtils.copyfile(file1, file2 ));                    
                    
                }catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());                    
                }
                
            }else {
              JOptionPane.showMessageDialog(null,"No Selection ");
            }
    
        }
        
    }

    public void importText() throws CodeException {
        String file1 = "";
        String file2 = GlobalUtils.getCurrentDir() + GlobalUtils.temp + obj.TABLEPROCESS + ".txt";   
        
        JFileChooser chooser = new JFileChooser(".");
        chooser.setDialogTitle("Pilih File ");
        FileFilter filter1 = new ExtFileChooserFilter("txt", new String[] { "txt"});
        chooser.setFileFilter(filter1);


        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            File selectedFile = chooser.getSelectedFile();
            
            try {
                file1 = selectedFile.getCanonicalPath();
            
            }catch (Exception e) {}

            GlobalUtils.copyfile(file1, file2 );                

            obj.importCsv();
            
        }else {
          JOptionPane.showMessageDialog(null,"No Selection ");
        }
    }

    public void exportText() throws CodeException {
        if (obj.exportText()) {
            
            String file1 = GlobalUtils.getCurrentDir() + GlobalUtils.temp + obj.TABLEPROCESS + ".txt";   
            String file2 = "";
            
            JFileChooser chooser = new JFileChooser(".");
            chooser.setDialogTitle("Pilih Directory ");
    
            if (chooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
                try {
                    file2 = chooser.getSelectedFile().getCanonicalPath() + ".txt";                        
                    JOptionPane.showMessageDialog(null, GlobalUtils.copyfile(file1, file2 ));                    
                    
                }catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());                    
                }
                
            }else {
              JOptionPane.showMessageDialog(null,"No Selection ");
            }
    
        } 
    }

    
}
