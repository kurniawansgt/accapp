/*
 * From Template
 *
 * Created on June 29, 2007, 2:00 PM
 * 
 * 
 * How to Call this Form on FrmMainFrame
 * Sample : 
 *    
 * import accapp.component.cashbook.FrmCb_source;
 * 
 * .......
 * 
 * 
 * FrmCb_source frmCb_source;
 * 
 * .......
 * 
 try {
        if (frmCb_source == null) {
            frmmCb_source = new FrmCb_source(this);
        }
        
        showForm(frmCb_source);
        
    }catch(Exception e) {
        e.printStackTrace();
    }
 * 
 */

package accapp.component.cashbook;

import common.component.FrmBrowse;
import common.classinterface.NavigatorFormInt;
import common.classinterface.NavigatorObjectInt;
import common.component.FrmMainFrame;

import common.utils.CodeException;
import common.utils.GlobalUtils;
import java.awt.event.KeyEvent;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import common.utils.ExtFileChooserFilter;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;
import accapp.objectclasses.cashbook.Cb_source;
import accapp.objectclasses.cashbook.Cb_sources;
import accapp.objectclasses.gl.Gl_account;
import accapp.objectclasses.gl.Gl_accounts;
import accapp.objectclasses.op.Op_tax;
import accapp.objectclasses.op.Op_taxs;

/**
 *
 * @author  Generator
 */

public class FrmCb_source extends javax.swing.JInternalFrame implements NavigatorFormInt {

    private static int istatus = 0;
    private static int iformtype = 0;
    public static String CLASSNAME="FrmCb_source";
    
    FrmMainFrame mf ;
    
    
    public Cb_source obj = new Cb_source();
    
   
    /** Creates new form Area */
    public FrmCb_source() throws CodeException {
        initComponents();
    }
    
    public FrmCb_source(FrmMainFrame mf) throws CodeException{
        this.mf = mf;
        initComponents();
    }
     
       
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jHeader = new javax.swing.JLabel();
        HorizontalLine = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jbtnBrowse = new javax.swing.JButton();
        jtxtid = new javax.swing.JTextField();
        jlblsrcecode = new javax.swing.JLabel();
        jtxtsrcecode = new javax.swing.JTextField();
        jlbldscription = new javax.swing.JLabel();
        jtxtdscription = new javax.swing.JTextField();
        jtxtentrydate = new javax.swing.JTextField();
        jtxtauditdate = new javax.swing.JTextField();
        jtxtaudituser = new javax.swing.JTextField();
        jtxtcmpnyid = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jlblacccode = new javax.swing.JLabel();
        jtxtacccode = new javax.swing.JTextField();
        jbtnBrowseAcc = new javax.swing.JButton();
        jlbltaxcode = new javax.swing.JLabel();
        jtxttaxcode = new javax.swing.JTextField();
        jlblamount = new javax.swing.JLabel();
        jtxtamount = new javax.swing.JTextField();
        jlbltaxtype = new javax.swing.JLabel();
        jlblcomments = new javax.swing.JLabel();
        jlblacccodef = new javax.swing.JLabel();
        jtxtacccodef = new javax.swing.JTextField();
        jcmbTaxtype = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtxtcomments = new javax.swing.JTextArea();
        jbtnBrowseTax = new javax.swing.JButton();
        jtxtaccdesc = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("C/B Source Code");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        jHeader.setBackground(new java.awt.Color(102, 102, 102));
        jHeader.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jHeader.setForeground(new java.awt.Color(255, 255, 255));
        jHeader.setText(" : : Source Code");
        jHeader.setAlignmentY(0.0F);
        jHeader.setOpaque(true);
        getContentPane().add(jHeader);
        jHeader.setBounds(30, 30, 130, 20);

        HorizontalLine.setForeground(new java.awt.Color(102, 102, 102));
        HorizontalLine.setAlignmentX(0.0F);
        HorizontalLine.setAlignmentY(0.0F);
        getContentPane().add(HorizontalLine);
        HorizontalLine.setBounds(160, 50, 650, 2);

        jSeparator3.setForeground(new java.awt.Color(102, 102, 102));
        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator3.setAlignmentX(0.0F);
        jSeparator3.setAlignmentY(0.0F);
        getContentPane().add(jSeparator3);
        jSeparator3.setBounds(30, 50, 2, 400);

        jbtnBrowse.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jbtnBrowse.setText("...");
        jbtnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowseActionPerformed(evt);
            }
        });
        getContentPane().add(jbtnBrowse);
        jbtnBrowse.setBounds(340, 90, 30, 25);

        jtxtid.setEditable(false);
        jtxtid.setFont(new java.awt.Font("Dialog", 0, 8)); // NOI18N
        jtxtid.setText("id");
        getContentPane().add(jtxtid);
        jtxtid.setBounds(170, 30, 80, 20);

        jlblsrcecode.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jlblsrcecode.setText("Source Code");
        getContentPane().add(jlblsrcecode);
        jlblsrcecode.setBounds(70, 90, 140, 14);

        jtxtsrcecode.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jtxtsrcecode.setText("srcecode");
        jtxtsrcecode.setNextFocusableComponent(jtxtdscription);
        getContentPane().add(jtxtsrcecode);
        jtxtsrcecode.setBounds(260, 90, 80, 20);

        jlbldscription.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jlbldscription.setText("Description");
        getContentPane().add(jlbldscription);
        jlbldscription.setBounds(70, 120, 140, 14);

        jtxtdscription.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jtxtdscription.setText("dscription");
        jtxtdscription.setNextFocusableComponent(jtxtacccodef);
        getContentPane().add(jtxtdscription);
        jtxtdscription.setBounds(260, 120, 400, 20);

        jtxtentrydate.setEditable(false);
        jtxtentrydate.setFont(new java.awt.Font("Dialog", 0, 8)); // NOI18N
        jtxtentrydate.setText("entrydate");
        getContentPane().add(jtxtentrydate);
        jtxtentrydate.setBounds(260, 30, 150, 20);

        jtxtauditdate.setEditable(false);
        jtxtauditdate.setFont(new java.awt.Font("Dialog", 0, 8)); // NOI18N
        jtxtauditdate.setText("auditdate");
        getContentPane().add(jtxtauditdate);
        jtxtauditdate.setBounds(420, 30, 150, 20);

        jtxtaudituser.setEditable(false);
        jtxtaudituser.setFont(new java.awt.Font("Dialog", 0, 8)); // NOI18N
        jtxtaudituser.setText("audituser");
        getContentPane().add(jtxtaudituser);
        jtxtaudituser.setBounds(580, 30, 90, 20);

        jtxtcmpnyid.setEditable(false);
        jtxtcmpnyid.setFont(new java.awt.Font("Dialog", 0, 8)); // NOI18N
        jtxtcmpnyid.setText("cmpnyid");
        getContentPane().add(jtxtcmpnyid);
        jtxtcmpnyid.setBounds(680, 30, 130, 20);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Entry Defaults"));
        jPanel1.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jPanel1.setLayout(null);

        jlblacccode.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jlblacccode.setText("Account Code");
        jPanel1.add(jlblacccode);
        jlblacccode.setBounds(20, 70, 110, 14);

        jtxtacccode.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jtxtacccode.setText("acccode");
        jtxtacccode.setNextFocusableComponent(jtxttaxcode);
        jtxtacccode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtacccodeKeyPressed(evt);
            }
        });
        jPanel1.add(jtxtacccode);
        jtxtacccode.setBounds(140, 70, 180, 20);

        jbtnBrowseAcc.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jbtnBrowseAcc.setText("...");
        jbtnBrowseAcc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowseAccActionPerformed(evt);
            }
        });
        jPanel1.add(jbtnBrowseAcc);
        jbtnBrowseAcc.setBounds(320, 70, 30, 17);

        jlbltaxcode.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jlbltaxcode.setText("Tax Code");
        jPanel1.add(jlbltaxcode);
        jlbltaxcode.setBounds(20, 100, 80, 14);

        jtxttaxcode.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jtxttaxcode.setText("taxcode");
        jtxttaxcode.setNextFocusableComponent(jcmbTaxtype);
        jPanel1.add(jtxttaxcode);
        jtxttaxcode.setBounds(140, 100, 80, 20);

        jlblamount.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jlblamount.setText("Amount");
        jPanel1.add(jlblamount);
        jlblamount.setBounds(20, 140, 110, 14);

        jtxtamount.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jtxtamount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtxtamount.setText("amount");
        jPanel1.add(jtxtamount);
        jtxtamount.setBounds(140, 140, 140, 20);

        jlbltaxtype.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jlbltaxtype.setText("Tax Type");
        jPanel1.add(jlbltaxtype);
        jlbltaxtype.setBounds(270, 100, 70, 14);

        jlblcomments.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jlblcomments.setText("Comments");
        jPanel1.add(jlblcomments);
        jlblcomments.setBounds(20, 170, 110, 14);

        jlblacccodef.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jlblacccodef.setText("Definition");
        jPanel1.add(jlblacccodef);
        jlblacccodef.setBounds(20, 40, 100, 14);

        jtxtacccodef.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jtxtacccodef.setText("acccodef");
        jPanel1.add(jtxtacccodef);
        jtxtacccodef.setBounds(140, 40, 380, 20);

        jcmbTaxtype.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jcmbTaxtype.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Inclusive", "Exclusive", "Tax" }));
        jPanel1.add(jcmbTaxtype);
        jcmbTaxtype.setBounds(350, 100, 110, 20);

        jtxtcomments.setColumns(20);
        jtxtcomments.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jtxtcomments.setRows(5);
        jScrollPane1.setViewportView(jtxtcomments);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(140, 170, 380, 76);

        jbtnBrowseTax.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jbtnBrowseTax.setText("...");
        jbtnBrowseTax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBrowseTaxActionPerformed(evt);
            }
        });
        jPanel1.add(jbtnBrowseTax);
        jbtnBrowseTax.setBounds(220, 100, 30, 17);

        jtxtaccdesc.setEditable(false);
        jtxtaccdesc.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        jtxtaccdesc.setText("accdesc");
        jPanel1.add(jtxtaccdesc);
        jtxtaccdesc.setBounds(350, 70, 290, 20);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(70, 160, 670, 310);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
         try {
            moveFirst();

         } catch (CodeException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_formInternalFrameOpened

private void kdatePurchaseDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kdatePurchaseDateFocusLost

}//GEN-LAST:event_kdatePurchaseDateFocusLost

private void kdatePurchaseDateCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_kdatePurchaseDateCaretPositionChanged

}//GEN-LAST:event_kdatePurchaseDateCaretPositionChanged

private void kdatePurchaseDatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_kdatePurchaseDatePropertyChange

}//GEN-LAST:event_kdatePurchaseDatePropertyChange

private void jbtnBrowseAccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBrowseAccActionPerformed
      try {
          Gl_accounts brs = new Gl_accounts();
          FrmBrowse bd = new FrmBrowse(brs);
          bd.setFirstValue(jtxtacccode);
          bd.setSecondValue(jtxtaccdesc);
          bd.setModal(true);
          bd.setVisible(true);

      } catch (CodeException ex) {
          ex.printStackTrace();
      }
}//GEN-LAST:event_jbtnBrowseAccActionPerformed

private void jbtnBrowseTaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBrowseTaxActionPerformed
      try {
          Op_taxs brs = new Op_taxs();
          FrmBrowse bd = new FrmBrowse(brs);
          bd.setFirstValue(jtxttaxcode);
          bd.setModal(true);
          bd.setVisible(true);

      } catch (CodeException ex) {
          ex.printStackTrace();
      }
}//GEN-LAST:event_jbtnBrowseTaxActionPerformed

private void jtxtacccodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtacccodeKeyPressed

    if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
        try{
            obj.setacccode(jtxtacccode.getText());
            jtxtaccdesc.setText(obj.getAccountDescription());
        }catch (Exception e) {}

    }

}//GEN-LAST:event_jtxtacccodeKeyPressed


private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {                                            
    setToolBar(iformtype,istatus);
    mf.setIcon(CLASSNAME);
}                                           

private void jbtnBrowseActionPerformed(java.awt.event.ActionEvent evt) {                                           
      try {
	      Cb_sources brs = new Cb_sources();
	      FrmBrowse bd = new FrmBrowse(this, brs);
	      bd.setFirstValue(jtxtsrcecode);
	      bd.setModal(true);
	      bd.setVisible(true);            
	      
	  } catch (CodeException ex) {
	      ex.printStackTrace();
	  }
}                                                                                 

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new FrmCb_source().setVisible(true);
                } catch (CodeException ex) {
                    ex.printStackTrace();
                }
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSeparator HorizontalLine;
    private javax.swing.JLabel jHeader;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JButton jbtnBrowse;
    private javax.swing.JButton jbtnBrowseAcc;
    private javax.swing.JButton jbtnBrowseTax;
    private javax.swing.JComboBox jcmbTaxtype;
    private javax.swing.JLabel jlblacccode;
    private javax.swing.JLabel jlblacccodef;
    private javax.swing.JLabel jlblamount;
    private javax.swing.JLabel jlblcomments;
    private javax.swing.JLabel jlbldscription;
    private javax.swing.JLabel jlblsrcecode;
    private javax.swing.JLabel jlbltaxcode;
    private javax.swing.JLabel jlbltaxtype;
    private javax.swing.JTextField jtxtacccode;
    private javax.swing.JTextField jtxtacccodef;
    private javax.swing.JTextField jtxtaccdesc;
    private javax.swing.JTextField jtxtamount;
    private javax.swing.JTextField jtxtauditdate;
    private javax.swing.JTextField jtxtaudituser;
    private javax.swing.JTextField jtxtcmpnyid;
    private javax.swing.JTextArea jtxtcomments;
    private javax.swing.JTextField jtxtdscription;
    private javax.swing.JTextField jtxtentrydate;
    private javax.swing.JTextField jtxtid;
    private javax.swing.JTextField jtxtsrcecode;
    private javax.swing.JTextField jtxttaxcode;
    // End of variables declaration//GEN-END:variables

 
    public void moveFirst() throws CodeException {
        obj.moveFirst();
        showData();
        mf.setIcon(CLASSNAME);
    }

    public void movePrevious() throws CodeException {
        obj.movePrevious();
        showData();
        mf.setIcon(CLASSNAME);
    }

    public void moveNext() throws CodeException {
        obj.moveNext();
        showData();
        mf.setIcon(CLASSNAME);
    }

    public void moveLast() throws CodeException {
        obj.moveLast();
        showData();
        mf.setIcon(CLASSNAME);
    }

    public void searchData() throws CodeException {
        obj = new Cb_source(this.jtxtsrcecode.getText());
        showData();
        mf.setIcon(CLASSNAME);

    }
    public void newData() throws CodeException {
        obj = new Cb_source();
        istatus=1;
        showData();
        setToolBar(iformtype,istatus);
    }


    private void validasi() throws CodeException  {
        if (!jtxtacccode.getText().equals("")) {
              Gl_account glacc = new Gl_account(Gl_account.getNonAccFormat(jtxtacccode.getText()));

              if(glacc.getID() == Gl_account.NULLID) {
                  throw new CodeException("Code " + jtxtacccode.getText() + " Tidak Diketemukan ");
              }
        }

        if (!jtxttaxcode.getText().equals("")) {
              Op_tax tax = new Op_tax(jtxttaxcode.getText());
              if(tax.getID() == Op_tax.NULLID) {
                  throw new CodeException("Code " + jtxttaxcode.getText() + " Tidak Diketemukan ");
              }
        }

        
    }
    public void saveData() throws CodeException {

        validasi();
        
        istatus = 0;
        setData();
        obj.save();
        
        showData();
        
        mf.setIcon(CLASSNAME);
    }

    public void showData() throws CodeException {
        setCursor(GlobalUtils.HOURGLASSCURSOR);
	
             jtxtid.setText(obj.toString(Cb_source.PROPERTY_ID));
             jtxtsrcecode.setText(obj.toString(Cb_source.PROPERTY_SRCECODE));
             jtxtdscription.setText(obj.toString(Cb_source.PROPERTY_DSCRIPTION));

             jtxtacccode.setText(Gl_account.getAccFormat(obj.toString(Cb_source.PROPERTY_ACCCODE)));
             jtxtaccdesc.setText(obj.getAccountDescription());
             jtxttaxcode.setText(obj.toString(Cb_source.PROPERTY_TAXCODE));
             jtxtamount.setText(obj.toString(Cb_source.PROPERTY_AMOUNT));
             jtxtcomments.setText(obj.toString(Cb_source.PROPERTY_COMMENTS));
             jtxtacccodef.setText(obj.toString(Cb_source.PROPERTY_ACCCODEF));

             try{
                jcmbTaxtype.setSelectedIndex((int) obj.gettaxtype());
             }catch (Exception e){}

             jtxtentrydate.setText(obj.toString(Cb_source.PROPERTY_ENTRYDATE));
             jtxtauditdate.setText(obj.toString(Cb_source.PROPERTY_AUDITDATE));
             jtxtaudituser.setText(obj.toString(Cb_source.PROPERTY_AUDITUSER));
             jtxtcmpnyid.setText(obj.toString(Cb_source.PROPERTY_CMPNYID));

             setCursor(GlobalUtils.NORMALCURSOR);
    }

    public void delete() throws CodeException {
        obj.delete();
        obj.moveFirst();
        showData();
        mf.setIcon(CLASSNAME);
    }

    public void setToolBar(int iFormType, int istatus) {
        mf.setToolBar(iformtype,istatus);        
    }

    public void setData() throws CodeException {
        
	
          obj.fromString(Cb_source.PROPERTY_ID, jtxtid.getText()) ;
          obj.fromString(Cb_source.PROPERTY_SRCECODE, jtxtsrcecode.getText()) ;
          obj.fromString(Cb_source.PROPERTY_DSCRIPTION, jtxtdscription.getText()) ;

          obj.fromString(Cb_source.PROPERTY_ACCCODE, Gl_account.getNonAccFormat(jtxtacccode.getText())) ;

          obj.fromString(Cb_source.PROPERTY_TAXCODE, jtxttaxcode.getText()) ;
          obj.fromString(Cb_source.PROPERTY_AMOUNT, jtxtamount.getText()) ;
          obj.fromString(Cb_source.PROPERTY_COMMENTS, jtxtcomments.getText()) ;
          obj.fromString(Cb_source.PROPERTY_ACCCODEF, jtxtacccodef.getText()) ;

          obj.settaxtype(jcmbTaxtype.getSelectedIndex());

          obj.fromString(Cb_source.PROPERTY_ENTRYDATE, jtxtentrydate.getText()) ;
          obj.fromString(Cb_source.PROPERTY_AUDITDATE, jtxtauditdate.getText()) ;
          obj.fromString(Cb_source.PROPERTY_AUDITUSER, jtxtaudituser.getText()) ;
          obj.fromString(Cb_source.PROPERTY_CMPNYID, jtxtcmpnyid.getText()) ;

    }

    public void undo() throws CodeException {
        istatus = 0;
        moveFirst();
        showData();
    }

    public void execute() throws CodeException {
       saveData();
    }

    public void printData() throws CodeException {
        Map parameter = new HashMap();
        NavigatorObjectInt noi = (NavigatorObjectInt) obj;        
        String file   = GlobalUtils.getCurrentDir() +"/Reports/" + noi.getClassName() + ".jrxml";
        GlobalUtils.printReport(file,  false);    
    }

    public void importCsv() throws CodeException {
            
        String file1 = "";
        String file2 = GlobalUtils.getCurrentDir() + GlobalUtils.temp + obj.TABLEPROCESS + ".csv";   
        
        JFileChooser chooser = new JFileChooser(".");
        chooser.setDialogTitle("Pilih File ");
        FileFilter filter1 = new ExtFileChooserFilter("CSV", new String[] { "CSV"});
        chooser.setFileFilter(filter1);

        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            File selectedFile = chooser.getSelectedFile();
            
            try {
                file1 = selectedFile.getCanonicalPath();
            
            }catch (Exception e) {}

            GlobalUtils.copyfile(file1, file2 );                

            obj.importCsv();
            
        }else {
          JOptionPane.showMessageDialog(null,"No Selection ");
        }

    }

    public void exportCsv() throws CodeException {
        
    
        if (obj.exportCsv()) {
            
            String file1 = GlobalUtils.getCurrentDir() + GlobalUtils.temp + obj.TABLEPROCESS + ".csv";   
            String file2 = "";
            
            JFileChooser chooser = new JFileChooser(".");
            chooser.setDialogTitle("Pilih Directory ");
    
            if (chooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
                try {
                    file2 = chooser.getSelectedFile().getCanonicalPath() + ".csv";
                        
                    JOptionPane.showMessageDialog(null, GlobalUtils.copyfile(file1, file2 ));                    
                    
                }catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());                    
                }
                
            }else {
              JOptionPane.showMessageDialog(null,"No Selection ");
            }
    
        }
        
    }

    public void importText() throws CodeException {
        String file1 = "";
        String file2 = GlobalUtils.getCurrentDir() + GlobalUtils.temp + obj.TABLEPROCESS + ".txt";   
        
        JFileChooser chooser = new JFileChooser(".");
        chooser.setDialogTitle("Pilih File ");
        FileFilter filter1 = new ExtFileChooserFilter("txt", new String[] { "txt"});
        chooser.setFileFilter(filter1);


        if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            File selectedFile = chooser.getSelectedFile();
            
            try {
                file1 = selectedFile.getCanonicalPath();
            
            }catch (Exception e) {}

            GlobalUtils.copyfile(file1, file2 );                

            obj.importCsv();
            
        }else {
          JOptionPane.showMessageDialog(null,"No Selection ");
        }
    }

    public void exportText() throws CodeException {
        if (obj.exportText()) {
            
            String file1 = GlobalUtils.getCurrentDir() + GlobalUtils.temp + obj.TABLEPROCESS + ".txt";   
            String file2 = "";
            
            JFileChooser chooser = new JFileChooser(".");
            chooser.setDialogTitle("Pilih Directory ");
    
            if (chooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
                try {
                    file2 = chooser.getSelectedFile().getCanonicalPath() + ".txt";                        
                    JOptionPane.showMessageDialog(null, GlobalUtils.copyfile(file1, file2 ));                    
                    
                }catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());                    
                }
                
            }else {
              JOptionPane.showMessageDialog(null,"No Selection ");
            }
    
        } 
    }

    
}
